{"version":3,"sources":["redux/estadosTiendasDucks.js","redux/tiendasEasyDucks.js","redux/authDucks.js","redux/transaccionesSGVDucks.js","redux/numTransaccionesLocalesSGVDucks.js","redux/InterfacesErrorTSAVDucks.js","redux/UsuariosDucks.js","redux/numTransaccionesLocalesCDPDucks.js","redux/totalCDPDucks.js","redux/EAMTRANDucks.js","redux/generarInterfazVTADucks.js","redux/reenviarCC3Ducks.js","redux/tiposInterfacesDucks.js","redux/tiposEstadosDucks.js","redux/perfilesDucks.js","redux/modulosDucks.js","redux/severidadesDucks.js","redux/logsDucks.js","redux/excluyeLocalAlarmaDucks.js","redux/ConsultaTranxSinFolioDucks.js","redux/ConsultaTranxMEXSDucks.js","redux/store.js","static/easy.logo.new.png","components/controls/Input.jsx","components/controls/Button.jsx","components/controls/Select.jsx","components/controls/ToExcel.jsx","components/controls/DatePicker.jsx","components/controls/Notification.jsx","components/controls/Controls.js","pages/Login/login.jsx","components/fechaCL.js","components/navbar.jsx","components/PageDataList.js","components/List.jsx","components/Menu.jsx","components/DialogAlert.jsx","components/isExpired.jsx","components/MainContainer.jsx","components/DialogEdit.jsx","pages/Home/TablaError.jsx","components/Accordion.jsx","pages/Home/Home.jsx","pages/StatusTienda/statusTienda.jsx","pages/DetalleDocumentosSGV/DetalleDocSGV.jsx","pages/ConsultasTranxSinFolio/ConsultaTranxSinFolio.jsx","pages/ConsultasTranxMEXS/ConsultaTranxMEXS.jsx","pages/TotalesCDP/TotalesCDP.jsx","components/DialogConfirmar.jsx","pages/ExcluirTiendaAlarma/ExpluirTiendaAlarma.jsx","pages/DetallesEAMTRAN/FormularioEAMTRAN.js","pages/DetallesEAMTRAN/EAMTRAN.jsx","pages/AdministracionInterfacesTSAV/InterfacesTSAV.jsx","pages/RegenerarInterfacesVTA/RegenerarVTA.jsx","pages/ReenviarInterfazCC3/ReenviarCC3.jsx","pages/Usuarios/FormularioUsuario.js","pages/Usuarios/Usuarios.jsx","pages/Perfiles/FormularioPerfil.js","pages/Perfiles/FormularioModulos.js","pages/Perfiles/Perfiles.jsx","pages/BusquedaLogs/logs.jsx","static/error.png","pages/404/error.jsx","Router.js","App.js","index.js"],"names":["dataInicial","Fechas","datos","detalleError","loading","LOADING","ERROR","OBTENER_ESTADOSTIENDA_EXITO","obtenerEStadoTiendaAccion","fecha","dispatch","a","type","axios","get","params","ID","res","payload","data","array","OBTENER_TIENDASEASY_EXITO","obtenerTiendasEasyAccion","action","console","log","user","modulos","token","isLoggedIn","LOGIN_SUCCESS","LOGOUT","GET_INFO_USER","ISNOTVALID","logoutAccion","localStorage","getItem","removeItem","OBTENER_TRANSACCIONESSGV_EXITO","OBTENER_NUMTRANSACCIONESLOCALESSGV","OBTENER_INTERFACES_ERRORTSAV_EXITO","REENVIAR_INTERFACES_ERRORTSAV_EXITO","obtenerInterfacesErrorTSAVAccion","selectedDate","Local","TipoInterfaz","Estado","InterfazTSAV","message","OBTENER_USUARIOS_EXITO","CREAR_USUARIO_EXITO","ACTUALIZAR_USUARIO_EXITO","ELIMINAR_USUARIO_EXITO","obtenerUsuariosAccion","OBTENER_NUMTRANSACCIONESLOCALESCDP","numTransaccionesLocalesCDPAccion","local","OBTENER_TOTALESCDP_EXITO","OBTENER_EAMTRAN_EXITO","UPDATE_EAMTRAN_EXITO","EAMTRANAccion","title","text","existe","error","REGENERAR_INTERFAZ_VTA_EXITO","VERIFICAR_INTERFAZ_VTA_EXITO","Status","reenviarCC3_EXITO","OBTENER_TIPOSINTERFACES_EXITO","OBTENER_TIPOSESTADOS_EXITO","OBTENER_PERFILES_EXITO","obtenerPerfilAccion","setItem","JSON","stringify","Modulos","ModulosPerfil","OBTENER_MODULOS_EXITO","OBTENER_MODULOSID_EXITO","obtenerModuloAccion","obtenerModuloIdAccion","IdPerfil","OBTENER_SEVERIDADES_EXITO","OBTENER_LOGS_EXITO","INSERTAR_LOGS_EXITO","insertarLogsAccion","usuarios","accion","severidad","dataExtra","EXCLUIR_LOCAL_ALARMA_EXITO","CONSULTA_TRANX_SIN_FOLIO_EXITO","CONSULTA_TRANX_MEXS_EXITO","rootReduce","combineReducers","estadoTienda","state","tiendasEasy","auth","icon","transaccionesSGV","transacciones","statusLocales","interfacesErrorTSAV","statusLocalesCDP","totalesCDP","EAMTRAN","regenerarInterfazVTA","reenviarCC3","tiposInterfaces","tiposEstados","Perfiles","Modulo","severidades","logs","excluirLocalAlarma","consultaTranxSinFolio","consultaTranxMEXS","MEXS","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","generateStore","store","createStore","applyMiddleware","thunk","parse","isAuthAccion","Input","props","TextField","id","margin","label","onChange","value","useStyles","makeStyles","theme","default","color","backgroundColor","Button","classes","variant","size","onClick","className","Select","FormControl","InputLabel","shrink","displayEmpty","MenuItem","options","map","item","Id","Perfil","export","borderRadius","border","height","fontSize","padding","boxShadow","minWidth","verticalAlign","ToExcel","table","filename","sheet","buttonText","DatePicker","utils","DateFnsUtils","disableToolbar","format","KeyboardButtonProps","root","width","marginTop","spacing","Controls","Notification","notify","setNotify","handleClose","event","reason","isOpen","Snackbar","open","autoHideDuration","anchorOrigin","vertical","horizontal","onClose","Alert","severity","Copyright","Typography","align","paper","display","flexDirection","alignItems","avatar","palette","secondary","main","form","submit","titulo","withRouter","useDispatch","useState","username","setUsuario","password","setContrase√±a","Loading","setLoading","User","useSelector","Message","handleSubmit","e","preventDefault","trim","post","loginAccion","useEffect","undefined","Username","history","push","Grid","container","component","CssBaseline","xs","sm","md","Paper","elevation","square","Avatar","src","Logo","onSubmit","required","fullWidth","disabled","name","autoComplete","autoFocus","target","justify","CircularProgress","Box","mt","getFechaCL","Date","toLocaleString","nav","background","transition","transitions","create","easing","sharp","duration","leavingScreen","menuButton","marginRight","flexGrow","firstNameColor","SecondNameColor","hide","appBarShift","marginLeft","easeOut","enteringScreen","transparent","getContrastText","deepPurple","Icon","usuario","anchorEl","setAnchorEl","AppBar","position","clsx","Toolbar","IconButton","aria-label","handleDrawerOpen","edge","Divider","orientation","flexItem","Nombres","ApellidoP","currentTarget","ExpandMore","keepMounted","Boolean","perfil","then","ListaPaginas","primary","children","to","nested","paddingLeft","Lista","activeIndex","setActiveIndex","menu","forEach","modulo","find","moduloMenu","List","disablePadding","dense","ListItem","button","NavLink","activeClassName","ListItemIcon","ListItemText","ExpandLess","Collapse","in","timeout","unmountOnExit","subItem","SubId","drawer","flexShrink","drawerPaper","drawerContainer","overflow","drawerHeader","mixins","toolbar","justifyContent","Menu","Drawer","anchor","handleDrawerClose","textAlign","fontWeight","subtitle","DialogAlert","Dialog","aria-labelledby","xl","IconColor","DialogContent","direction","DialogActions","timeOut","IsExpired","alert","setAlert","TimerOffIcon","content","grey","contentShift","ContainerBox","setOpen","exp","now","items","DialogEdit","handleCancel","maxWidth","DialogTitle","x","dividers","maxHeight","TablaError","TableContainer","Table","stickyHeader","TableHead","TableRow","Head","TableCell","TableBody","Body","FechaFiscal","FechaError","IdTransaccion","IdProceso","Servidor","EstadoActual","DescipcionError","accordion","Accordion","AccordionSummary","expandIcon","aria-controls","AccordionDetails","encabezado","cerrado","Gray","orange","itemLoading","Home","setTitle","openDialog","setOpenDialog","setSelectedDate","estatusTiendas","coleccionDeFechas","EstadoLocalDetalleError","lg","date","length","CodSAP","dia","codSAP","colSpan","StatusTienda","substring","TotalSGV","TotalCDP","interfaces","LoteTeradata","DetalleDocSGV","IdTLogHeader","setIdTLogHeader","IdTlogDetail","setIdTlogDetail","Terminal","setTerminal","NumTransaccion","setNumTransaccion","Folio","setFolio","setLocal","TipoDTE","setTipoDTE","CanalVTA","setCanalVTA","transaccionesSGVAccion","labelId","selectEmpty","transaccion","Object","keys","oneKey","i","ConsultaTranxSinFolio","FechaIni","setFechaIni","FechaFin","setFechaFin","formatterPesosCL","Intl","NumberFormat","style","currency","consultaTranxSinFolioAccion","replace","TLogHeader","Sucursal","Fecha","Transaccion","Monto","ConsultaTranxMEXS","consultaTranxMEXSAccion","row","TotalesCDP","totalCDP","formatterYenes","Canal","TotalBruto","TotTranx","DialogConfirmar","existeInterfaz","extra","confirmar","successful","ExpluirTiendaAlarma","openAlert","tienda","WarningIcon","CheckCircleIcon","ErrorIcon","marginBottom","progress","optionsEamtran","FormularioEAMTRAN","Tienda","setTienda","setFechaFiscal","Eamtran","setEamtran","UltimoLote","setUltimoLote","FechaUltimoLote","setFechaUltimoLote","setStatus","EditeEamtran","IdLocalSAP","edit","openEdite","setOpenEdite","getData","setData","handleClickOpenEdite","FechaUltimoLoteOriginal","eamtran","ultimoLote","fechaUltimoLote","fechaFiscal","fechaUltimoLoteOrig","status","put","rootToolbar","paddingRight","highlight","lighten","light","dark","visuallyHidden","clip","top","InterfacesTSAV","selected","setSelected","setTipoInterfaz","setEstado","n","reenviarInterfacesTSAVAccion","InterfaceQueueID","TransitionComponent","Fade","InterfaceTypeID","InterfaceName","InterfaceStatusID","InterfaceStatus","handleBuscar","Checkbox","indeterminate","checked","newSelecteds","inputProps","isItemSelected","indexOf","hover","selectedIndex","newSelected","concat","slice","handleClick","role","aria-checked","tabIndex","RegenerarInterfaces","setChecked","CodSap","handleGenerarInterfaz","Bandera","Existe","bandera","FechaActual","Severity","Accion","getFullYear","getMonth","getDate","toTimeString","split","Flag","ReenviarCC3","FormularioUsuario","setId","setNombres","setApellidoP","ApellidoM","setApellidoM","Email","setEmail","setUsername","setPerfil","createOrEdite","perfiles","delete","Usuarios","IdTable","setIdTable","openDelete","setOpenDelete","handleDelete","idTable","crearUsuarioAccion","actualizarUsuarioAccion","MenuProps","PaperProps","ITEM_HEIGHT","FormularioPerfil","nuevoPerfil","setNuevoPerfil","seletedModulos","setModulos","defaultModelos","modulosOriginales","multiple","input","FormularioModulos","setModulo","createOrEditeModulo","IdTablePerfil","setIdTablePerfil","IdTableModulo","setIdTableModulo","isPerfil","setIsPerfil","handleDeleteModulo","ModulosId","idPerfil","handleClickOpenEditeModulo","idModulo","crearModuloAccion","editarModuloAccion","warning","Logs","setSeverity","infoExtra","setInfoExtra","setAccion","obtenerLogsAccion","Item","FechaHora","Extra","img","volver","imagenError","alt","Router","RutaComun","path","rest","RutaProtegida","moduloUsuario","includes","SignIn","exact","Error","App","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.290c5642.chunk.js","sourcesContent":["import axios from 'axios';\n\n//Constantes\nconst dataInicial = {\n    Fechas: [],\n    datos: [],\n    detalleError: [],\n    loading: false\n}\n\nconst LOADING = 'LOADING'\nconst ERROR = 'ERROR';\nconst OBTENER_ESTADOSTIENDA_EXITO = 'OBTENER_ESTADOSTIENDA_EXITO';\n\n//Reducer\nexport const estadoTiendaReducer = (state = dataInicial, action) => {\n    switch (action.type) {\n        case LOADING:\n            return { ...state, loading: true }\n        case ERROR:\n            return { ...dataInicial }\n        case OBTENER_ESTADOSTIENDA_EXITO:\n            return { ...state, loading: false, ...action.payload }\n        default:\n            return state\n    }\n}\n//Acciones\nexport const obtenerEStadoTiendaAccion = (fecha) => async (dispatch) => {\n\n    dispatch({\n        type: LOADING\n    })\n\n    try {\n        const res = await axios.get('http://localhost:4000/api/sucursales-status', { params: { ID: fecha } })\n        dispatch({\n            type: OBTENER_ESTADOSTIENDA_EXITO,\n            payload: res.data\n        })\n    } catch (error) {\n        dispatch({\n            type: ERROR,\n        })\n    }\n}\n\nexport const obtenerEstadoLocalDetalleErrorAccion = (codSAP, fecha) => async (dispatch) => {\n\n    dispatch({\n        type: LOADING\n    })\n\n    try {\n        const res = await axios.get('http://localhost:4000/api/sucursales-status/DetalleErrorEstadoLocal', { params: { ID: fecha, codSAP: codSAP } })\n        dispatch({\n            type: OBTENER_ESTADOSTIENDA_EXITO,\n            payload: res.data\n        })\n    } catch (error) {\n        dispatch({\n            type: ERROR,\n        })\n    }\n}","import axios from 'axios';\n\n//Constantes\nconst dataInicial = {\n    array : [],\n}\n\nconst OBTENER_TIENDASEASY_EXITO = 'OBTENER_TIENDASEASY_EXITO';\n\n//Reducer\nexport const tiendasEasyReducer = (state = dataInicial, action) => {\n    switch(action.type){\n        case OBTENER_TIENDASEASY_EXITO:\n            return {...state, array: action.payload}\n        default:\n            return state\n    }\n}\n//Acciones\nexport const obtenerTiendasEasyAccion = () => async (dispatch, action) => {\n    try {\n        const res = await axios.get('http://localhost:4000/api/tiendasEasy');\n        dispatch({\n            type: OBTENER_TIENDASEASY_EXITO,\n            payload: res.data\n        })\n    } catch (error) {\n        console.log(error);\n    }\n}","import axios from 'axios';\n\n//Constantes\nconst dataInicial = {\n    user: [],\n    modulos: [],\n    token: null,\n    isLoggedIn: false,\n}\n\nconst LOGIN_SUCCESS = 'LOGIN_SUCCESS';\nconst LOGOUT = 'LOGOUT';\nconst ERROR = 'ERROR';\nconst GET_INFO_USER = 'GET_INFO_USER';\nconst ISNOTVALID = 'ISVALID';\n\n//Reducer\nexport const authReducer = (state = dataInicial, action) => {\n    switch (action.type) {\n        case LOGIN_SUCCESS:\n            return { ...state, ...action.payload, isLoggedIn: true}\n        case LOGOUT:\n            return { ...dataInicial }\n        case ERROR:\n            return { ...dataInicial, message: {icon: \"error\", text: \"Se a producido un error\"} }\n        case GET_INFO_USER:\n            return { ...state, ...action.payload }\n        case ISNOTVALID:\n            return { ...state, isLoggedIn: false}\n        default:\n            return state\n    }\n}\n\n////////////////////////////////////Acciones////////////////////////////////////////////////\n\nexport const loginAccion = (username, password) => async (dispatch) => {\n    try {\n        let data = { username, password }\n        const res = await axios.post('http://localhost:4000/api/auth/signin', data);\n        if (res.data) {\n            dispatch({\n                type: LOGIN_SUCCESS,\n                payload: res.data\n            })\n            localStorage.setItem('key', JSON.stringify(res.data.token))\n            localStorage.setItem('user', JSON.stringify(res.data.user))\n            localStorage.setItem('modulos_user', JSON.stringify(res.data.modulos))\n\n        } else {\n            dispatch({\n                type: ERROR,\n                payload: res.data\n            })\n        }\n    } catch (error) {\n        dispatch({\n            type: ERROR,\n            payload: error\n        })\n    }\n}\n\nexport const isAuthAccion = () => async (dispatch) => {\n    if (localStorage.getItem('key')) {\n        dispatch({\n            type: LOGIN_SUCCESS,\n            payload: {\n                token: JSON.parse(localStorage.getItem('key')),\n                user: JSON.parse(localStorage.getItem('user')),\n                modulos: JSON.parse(localStorage.getItem('modulos_user'))\n            }\n        })\n    }\n}\n\nexport const logoutAccion = () => async (dispatch) => {\n    if (localStorage.getItem('key')) {\n        dispatch({\n            type: LOGOUT,\n        })\n        localStorage.removeItem('key')\n        localStorage.removeItem('user')\n        localStorage.removeItem('modulos_user')\n    }\n}\n\nexport const isValidToken = () => async (dispatch) => {\n    if (localStorage.getItem('key')) {\n        try {\n            const res = await axios.post('http://localhost:4000/api/auth/Verify', { headers: { 'x-access-token': JSON.parse(localStorage.getItem('key')) } });\n            if (res.data.isValid === true) {\n                dispatch({\n                    type: LOGIN_SUCCESS,\n                    payload: JSON.parse(localStorage.getItem('key'))\n                })\n            }\n            else {\n                dispatch({\n                    type: ISNOTVALID,\n                })\n            }\n        }\n        catch (error) {\n            dispatch({\n                type: ERROR,\n            })\n            localStorage.removeItem('key')\n            localStorage.removeItem('user')\n            localStorage.removeItem('modulos_user')\n        }\n    }\n}\n\nexport const obtenerInformacionUser = () => async (dispatch) => {\n    if (localStorage.getItem('key')) {\n        dispatch({\n            type: GET_INFO_USER,\n            payload: JSON.parse(localStorage.getItem('modulos_user'))\n        })\n    }\n}\n\n// Web que se uso para crear el login:\n//https://dev.to/skd1993/creating-a-simple-login-function-with-redux-and-thunk-in-react-native-33ib\n\n//Como guardar el usuario en el localStorage\n//https://dev.to/skd1993/how-to-save-login-state-locally-using-asyncstorage-redux-in-react-native-31oo","import axios from 'axios';\n\n//Constantes\nconst dataInicial = {\n    array : [],\n}\n\nconst ERROR = 'ERROR';\nconst OBTENER_TRANSACCIONESSGV_EXITO = 'OBTENER_TRANSACCIONESSGV_EXITO';\n\n//Reducer\nexport const transaccionesSGVReducer = (state = dataInicial, action) => {\n    switch(action.type){\n        case ERROR:\n            return {...dataInicial}\n        case OBTENER_TRANSACCIONESSGV_EXITO:\n            return {...state, array: action.payload.transacciones}\n        default:\n            return state\n    }\n}\n//Acciones\nexport const transaccionesSGVAccion = (IdTLogHeader, IdTlogDetail, Terminal, NumTransaccion, Folio, selectedDate, Local, TipoDTE, CanalVTA) => async (dispatch) => {\n    try {\n        const res = await axios.get('http://localhost:4000/api/transacciones',{params: {IdTLogHeader, IdTlogDetail, Terminal, NumTransaccion, Folio, selectedDate, Local, TipoDTE, CanalVTA}});\n        dispatch({\n            type: OBTENER_TRANSACCIONESSGV_EXITO,\n            payload: {\n                transacciones: res.data.transacciones\n            }\n        })\n    } catch (error) {\n        dispatch({\n            type: ERROR,\n        })\n    }\n}","import axios from 'axios';\n\n//Constantes\nconst dataInicial = {\n    array : [],\n}\n\nconst OBTENER_NUMTRANSACCIONESLOCALESSGV = 'OBTENER_NUMTRANSACCIONESLOCALESSGV';\n\n//Reducer\nexport const numTransaccionesLocalesSGVReducer = (state = dataInicial, action) => {\n    switch(action.type){\n        case OBTENER_NUMTRANSACCIONESLOCALESSGV:\n            return {...state, array: action.payload}\n        default:\n            return state\n    }\n}\n//Acciones\nexport const numTransaccionesLocalesSGVAccion = () => async (dispatch, action) => {\n    try {\n        const res = await axios.get('http://localhost:4000/api/numero-transacciones-locales-sgv');\n        dispatch({\n            type: OBTENER_NUMTRANSACCIONESLOCALESSGV,\n            payload: res.data\n        })\n    } catch (error) {\n        console.log(error);\n    }\n}","import axios from 'axios';\n\n//Constantes\nconst dataInicial = {\n    datos: [],\n}\n\nconst ERROR = 'ERROR';\nconst OBTENER_INTERFACES_ERRORTSAV_EXITO = 'OBTENER_INTERFACES_ERRORTSAV_EXITO';\nconst REENVIAR_INTERFACES_ERRORTSAV_EXITO = 'REENVIAR_INTERFACES_ERRORTSAV_EXITO';\n\n//Reducer\nexport const interfacesErrorTSAVReducer = (state = dataInicial, action) => {\n    switch (action.type) {\n        case ERROR:\n            return { ...dataInicial }\n        case OBTENER_INTERFACES_ERRORTSAV_EXITO:\n            return { ...state, datos: action.payload.InterfazTSAV }\n        case REENVIAR_INTERFACES_ERRORTSAV_EXITO:\n            return { ...state, message: action.payload }\n        default:\n            return state\n    }\n}\n//Acciones\nexport const obtenerInterfacesErrorTSAVAccion = (selectedDate, Local, TipoInterfaz, Estado) => async (dispatch) => {\n    try {\n        const res = await axios.get('http://localhost:4000/api/interfacesErrorTSAV', { params: { ID: selectedDate, Local: Local, TipoInterfaz: TipoInterfaz, Estado: Estado } })\n        dispatch({\n            type: OBTENER_INTERFACES_ERRORTSAV_EXITO,\n            payload: {\n                InterfazTSAV: res.data.InterfazTSAV\n            }\n        })\n    } catch (error) {\n        dispatch({\n            type: ERROR,\n        })\n    }\n}\n\nexport const reenviarInterfacesTSAVAccion = (selected) => async (dispatch) => {\n    try {\n        const res = await axios.get('http://localhost:4000/api/interfacesErrorTSAV/enviar-tsav', { params: { selected } })\n        dispatch({\n            type: REENVIAR_INTERFACES_ERRORTSAV_EXITO,\n            payload: {\n                InterfazTSAV: res.data\n            }\n        })\n    } catch (error) {\n        dispatch({\n            type: ERROR,\n        })\n    }\n}","import axios from 'axios';\n\n//Constantes\nconst dataInicial = {\n    array: [],\n    message: null,\n    loading: false\n}\n\nconst LOADING = 'LOADING';\nconst ERROR = 'ERROR';\nconst OBTENER_USUARIOS_EXITO = 'OBTENER_USUARIOS_EXITO';\nconst CREAR_USUARIO_EXITO = 'CREAR_USUARIO_EXITO';\nconst ACTUALIZAR_USUARIO_EXITO = 'ACTUALIZAR_USUARIO_EXITO';\nconst ELIMINAR_USUARIO_EXITO = 'ELIMINAR_USUARIO_EXITO';\n\n//Reducer\nexport const usuariosReducer = (state = dataInicial, action) => {\n    switch (action.type) {\n        case LOADING:\n            return { ...state, loading: true }\n        case ERROR:\n            return {...dataInicial}\n        case OBTENER_USUARIOS_EXITO:\n            return { ...state, loading: false, array: action.payload }\n        case CREAR_USUARIO_EXITO:\n            return { ...state, loading: false, message: action.payload }\n        case ACTUALIZAR_USUARIO_EXITO:\n            return { ...state, loading: false, message: action.payload }\n        case ELIMINAR_USUARIO_EXITO:\n            return { ...state, loading: false, message: action.payload }\n        default:\n            return state\n    }\n}\n//Acciones\n\n//Traer todos los usuarios.\nexport const obtenerUsuariosAccion = () => async (dispatch) => {\n\n    dispatch({\n        type: LOADING\n    })\n\n    try {\n        const res = await axios.get('http://localhost:4000/api/users');\n        dispatch({\n            type: OBTENER_USUARIOS_EXITO,\n            payload: res.data\n        })\n    } catch (error) {\n        dispatch({\n            type: ERROR,\n        })\n    }\n}\n\n//Crear un usuario.\nexport const crearUsuarioAccion = (Nombres, ApellidoP, ApellidoM, Email, Username, IdPerfil) => async (dispatch) => {\n    \n    dispatch({\n        type: LOADING\n    })\n\n    try {\n        let data = { Nombres, ApellidoP, ApellidoM, Email, Username, IdPerfil }\n        const res = await axios.post('http://localhost:4000/api/users/', data);\n        dispatch({\n            type: CREAR_USUARIO_EXITO,\n            payload: res.data.message\n        })\n    } catch (error) {\n        dispatch({\n            type: ERROR,\n        })\n    }\n}\n\n//Actualizar un usuario.\nexport const actualizarUsuarioAccion = (Id, Nombres, ApellidoP, ApellidoM, Email, Username, IdPerfil) => async (dispatch) => {\n    \n    dispatch({\n        type: LOADING\n    })\n\n    try {\n        let data = { Id, Nombres, ApellidoP, ApellidoM, Email, Username, IdPerfil }\n        const res = await axios.put(`http://localhost:4000/api/users/${Id}`, data);\n        dispatch({\n            type: ACTUALIZAR_USUARIO_EXITO,\n            payload: res.data.message\n        })\n    } catch (error) {\n        dispatch({\n            type: ERROR,\n        })\n    }\n}\n\n//Eliminar un usuario\nexport const eliminarUsuarioAccion = (Id) => async (dispatch) => {\n    \n    dispatch({\n        type: LOADING\n    })\n\n    try {\n        const res = await axios.delete(`http://localhost:4000/api/users/${Id}`, { Id });\n        dispatch({\n            type: ELIMINAR_USUARIO_EXITO,\n            payload: res.data.message\n        })\n    } catch (error) {\n        dispatch({\n            type: ERROR,\n        })\n    }\n}","import axios from 'axios';\n\n//Constantes\nconst dataInicial = {\n    array: []\n}\n\nconst ERROR = 'ERROR';\nconst OBTENER_NUMTRANSACCIONESLOCALESCDP = 'OBTENER_NUMTRANSACCIONESLOCALESCDP';\n\n//Reducer\nexport const numTransaccionesLocalesCDPReducer = (state = dataInicial, action) => {\n    switch (action.type) {\n        case ERROR:\n            return { ...dataInicial, message:{icon: \"error\", text: action.payload}}\n        case OBTENER_NUMTRANSACCIONESLOCALESCDP:\n            return { ...state, array: action.payload }\n        default:\n            return state\n    }\n}\n//Acciones\nexport const numTransaccionesLocalesCDPAccion = (fecha) => async (dispatch) => {\n    try {\n        const res = await axios.get('http://localhost:4000/api/numero-transacciones-locales-cdp', { params: { ID: fecha } });\n        dispatch({\n            type: OBTENER_NUMTRANSACCIONESLOCALESCDP,\n            payload: res.data\n        })\n    } catch (error) {\n        dispatch({\n            type: ERROR,\n            payload: \"Se a producido un error, intente otra vez o vuelva m√°s tarde.\"\n        })\n    }\n}","import axios from 'axios';\n\n//Constantes\nconst dataInicial = {\n    array: [],\n    fecha: '',\n    local: '',\n    loading: false\n}\n\nconst LOADING = 'LOADING';\nconst ERROR = 'ERROR';\nconst OBTENER_TOTALESCDP_EXITO = 'OBTENER_TOTALESCDP_EXITO';\n\n//Reducer\nexport const totalesCDPReducer = (state = dataInicial, action) => {\n    switch (action.type) {\n        case LOADING:\n            return { ...state, loading: true }\n        case ERROR:\n            return { ...dataInicial }\n        case OBTENER_TOTALESCDP_EXITO:\n            return { ...state, loading: false, ...action.payload }\n        default:\n            return state\n    }\n}\n//Acciones\nexport const totalesCDPAccion = (local, fecha) => async (dispatch) => {\n\n    dispatch({\n        type: LOADING\n    })\n\n    try {\n        const res = await axios.get('http://localhost:4000/api/totales-cdp', { params: { ID: fecha, Local: local } });\n        dispatch({\n            type: OBTENER_TOTALESCDP_EXITO,\n            payload: {\n                array: res.data.array,\n                fecha: res.data.fecha,\n                local: res.data.local\n            }\n        })\n    } catch (error) {\n        dispatch({\n            type: ERROR,\n        })\n    }\n}","import axios from 'axios';\n\n//Constantes\nconst dataInicial = {\n    array: [],\n    fecha: '',\n    loading: false\n}\n\nconst LOADING = 'LOADING';\nconst ERROR = 'ERROR';\nconst OBTENER_EAMTRAN_EXITO = 'OBTENER_EAMTRAN_EXITO';\nconst UPDATE_EAMTRAN_EXITO = 'UPDATE_EAMTRAN_EXITO';\n\n//Reducer\nexport const EAMTRANReducer = (state = dataInicial, action) => {\n    switch (action.type) {\n        case LOADING:\n            return { ...state, loading: true }\n        case ERROR:\n            return { ...dataInicial }\n        case OBTENER_EAMTRAN_EXITO:\n            return { ...state, loading: false, array: action.payload.array }\n        case UPDATE_EAMTRAN_EXITO:\n            return { ...state, loading: false, array: action.payload.array }\n        default:\n            return state\n    }\n}\n//Acciones\nexport const EAMTRANAccion = (local, fecha) => async (dispatch) => {\n\n    dispatch({\n        type: LOADING\n    })\n\n    try {\n        const res = await axios.get('http://localhost:4000/api/eamtran', { params: { ID: fecha, Local: local } });\n        dispatch({\n            type: OBTENER_EAMTRAN_EXITO,\n            payload: {\n                array: res.data.array,\n                fecha: res.data.fecha\n            }\n        })\n    } catch (error) {\n        dispatch({\n            type: ERROR,\n        })\n    }\n}\n\nexport const actualizarEAMTRANAccion = (eamtran, ultimoLote, fechaUltimoLote, local, fechaFiscal, fechaUltimoLoteOrig, status) => async (dispatch) => {\n\n    dispatch({\n        type: LOADING\n    })\n\n    try {\n        let data = { eamtran, ultimoLote, fechaUltimoLote, local, fechaFiscal, fechaUltimoLoteOrig, status }\n        const res = await axios.put('http://localhost:4000/api/eamtran', data);\n        dispatch({\n            type: UPDATE_EAMTRAN_EXITO,\n            payload: res.data\n        })\n    } catch (error) {\n        dispatch({\n            type: ERROR,\n        })\n    }\n}","import axios from 'axios';\n\n//Constantes\nconst dataInicial = {\n    array: [],\n    title: '',\n    text: '',\n    existe: false,\n    error: false,\n}\n\nconst ERROR = 'ERROR';\nconst REGENERAR_INTERFAZ_VTA_EXITO = 'REGENERAR_INTERFAZ_VTA_EXITO';\nconst VERIFICAR_INTERFAZ_VTA_EXITO = 'VERIFICAR_INTERFAZ_VTA_EXITO';\n\n//Reducer\nexport const regenerarInterfazVTAReducer = (state = dataInicial, action) => {\n    switch (action.type) {\n        case ERROR:\n            return { ...dataInicial }\n        case REGENERAR_INTERFAZ_VTA_EXITO:\n            return { ...state, ...action.payload }\n        case VERIFICAR_INTERFAZ_VTA_EXITO:\n            return { ...state, ...action.payload }\n        default:\n            return state\n    }\n}\n//Acciones\nexport const regenerarInterfazVTAAccion = (fecha, CodSap, bandera) => async (dispatch) => {\n    try {\n        const res = await axios.get('http://localhost:4000/api/interfaz-vta', { params: { ID: fecha, Local: CodSap, Flag: bandera } })\n        dispatch({\n            type: REGENERAR_INTERFAZ_VTA_EXITO,\n            payload: {\n                title: res.data.title,\n                text: res.data.text\n            }\n        })\n    } catch (error) {\n        dispatch({\n            type: ERROR,\n        })\n    }\n}\n\nexport const verificarInterfazVTAAccion = (fecha, CodSap) => async (dispatch) => {\n    try {\n        const res = await axios.get('http://localhost:4000/api/logs/verificar', { params: { ID: fecha, Local: CodSap } })\n        dispatch({\n            type: VERIFICAR_INTERFAZ_VTA_EXITO,\n            payload: res.data\n        })\n    } catch (error) {\n        dispatch({\n            type: ERROR,\n        })\n    }\n}","import axios from 'axios';\n\n//Constantes\nconst dataInicial = {\n    Status: null\n}\n\nconst reenviarCC3_EXITO = 'reenviarCC3_EXITO';\n\n//Reducer\nexport const reenviarCC3Reducer = (state = dataInicial, action) => {\n    switch(action.type){\n        case reenviarCC3_EXITO:\n            return {...state, Status: action.payload}\n        default:\n            return state\n    }\n}\n//Acciones\nexport const reenviarCC3Accion = (fecha,CodSap) => async (dispatch) => {\n    try {\n        const res = await axios.get('http://localhost:4000/api/reenviar-cc3',{params:{ID:fecha, Local: CodSap}})\n        dispatch({\n            type: reenviarCC3_EXITO,\n            payload: res.data\n        })\n    } catch (error) {\n        console.log(error);\n    }\n}","import axios from 'axios';\n\n//Constantes\nconst dataInicial = {\n    array : [],\n}\n\nconst OBTENER_TIPOSINTERFACES_EXITO = 'OBTENER_TIPOSINTERFACES_EXITO';\n\n//Reducer\nexport const tiposInterfacesReducer = (state = dataInicial, action) => {\n    switch(action.type){\n        case OBTENER_TIPOSINTERFACES_EXITO:\n            return {...state, array: action.payload}\n        default:\n            return state\n    }\n}\n//Acciones\nexport const obtenerTiposInterfacesAccion = () => async (dispatch) => {\n    try {\n        const res = await axios.get('http://localhost:4000/api/tiposInterfaces');\n        dispatch({\n            type: OBTENER_TIPOSINTERFACES_EXITO,\n            payload: res.data\n        })\n    } catch (error) {\n        console.log(error);\n    }\n}","import axios from 'axios';\n\n//Constantes\nconst dataInicial = {\n    array : [],\n}\n\nconst OBTENER_TIPOSESTADOS_EXITO = 'OBTENER_TIPOSESTADOS_EXITO';\n\n//Reducer\nexport const tiposEstadosReducer = (state = dataInicial, action) => {\n    switch(action.type){\n        case OBTENER_TIPOSESTADOS_EXITO:\n            return {...state, array: action.payload}\n        default:\n            return state\n    }\n}\n//Acciones\nexport const obtenerTiposEstadosAccion = () => async (dispatch) => {\n    try {\n        const res = await axios.get('http://localhost:4000/api/tiposEstados');\n        dispatch({\n            type: OBTENER_TIPOSESTADOS_EXITO,\n            payload: res.data\n        })\n    } catch (error) {\n        console.log(error);\n    }\n}","import axios from 'axios';\n\n//Constantes\nconst dataInicial = {\n    array: [],\n}\n\nconst ERROR = 'ERROR';\nconst OBTENER_PERFILES_EXITO = 'OBTENER_PERFILES_EXITO';\n\n//Reducer\nexport const PerfilesReducer = (state = dataInicial, action) => {\n    switch (action.type) {\n        case ERROR:\n            return { ...dataInicial }\n        case OBTENER_PERFILES_EXITO:\n            return { ...state, array: action.payload }\n        default:\n            return state\n    }\n}\n//Acciones\nexport const obtenerPerfilAccion = () => async (dispatch) => {\n    try {\n        const res = await axios.get('http://localhost:4000/api/perfiles');\n        dispatch({\n            type: OBTENER_PERFILES_EXITO,\n            payload: res.data\n        })\n        localStorage.setItem('modulos', JSON.stringify(res.data.modulos))\n    } catch (error) {\n        dispatch({\n            type: ERROR,\n        })\n    }\n}\n\nexport const crearPerfilAccion = (Perfil, Modulos) => async (dispatch) => {\n    try {\n        const res = await axios.get('http://localhost:4000/api/perfiles');\n        dispatch({\n            type: OBTENER_PERFILES_EXITO,\n            payload: res.data\n        })\n    } catch (error) {\n        dispatch({\n            type: ERROR,\n        })\n    }\n}\n\nexport const editarPerfilAccion = (Id, Perfil, Modulos) => async (dispatch) => {\n    try {\n        const res = await axios.get('http://localhost:4000/api/perfiles');\n        dispatch({\n            type: OBTENER_PERFILES_EXITO,\n            payload: res.data\n        })\n    } catch (error) {\n        dispatch({\n            type: ERROR,\n        })\n    }\n}\n\nexport const eliminarPerfilAccion = (Id) => async (dispatch) => {\n    try {\n        const res = await axios.get('http://localhost:4000/api/perfiles');\n        dispatch({\n            type: OBTENER_PERFILES_EXITO,\n            payload: res.data\n        })\n    } catch (error) {\n        dispatch({\n            type: ERROR,\n        })\n    }\n}","import axios from 'axios';\n\n//Constantes\nconst dataInicial = {\n    Modulos: [],\n    ModulosPerfil: []\n}\n\nconst ERROR = 'ERROR';\nconst OBTENER_MODULOS_EXITO = 'OBTENER_MODULOS_EXITO';\nconst OBTENER_MODULOSID_EXITO = 'OBTENER_MODULOSID_EXITO';\n\n//Reducer\nexport const ModuloReducer = (state = dataInicial, action) => {\n    switch (action.type) {\n        case ERROR:\n            return { ...dataInicial }\n        case OBTENER_MODULOS_EXITO:\n            return { ...state, Modulos: action.payload }\n        case OBTENER_MODULOSID_EXITO:\n            return { ...state, ModulosPerfil: action.payload }\n        default:\n            return state\n    }\n}\n//Acciones\nexport const obtenerModuloAccion = () => async (dispatch) => {\n    try {\n        const res = await axios.get('http://localhost:4000/api/perfiles/modulos');\n        dispatch({\n            type: OBTENER_MODULOS_EXITO,\n            payload: res.data.Modulos\n        })\n    } catch (error) {\n        dispatch({\n            type: ERROR,\n        })\n    }\n}\n\nexport const obtenerModuloIdAccion = (IdPerfil) => async (dispatch) => {\n    try {\n        const res = await axios.get('http://localhost:4000/api/perfiles/modulosid', { params: { IdPerfil: IdPerfil } });\n        dispatch({\n            type: OBTENER_MODULOSID_EXITO,\n            payload: res.data\n        })\n    } catch (error) {\n        dispatch({\n            type: ERROR,\n        })\n    }\n}\n\nexport const crearModuloAccion = (Modulo) => async (dispatch) => {\n    try {\n        const res = await axios.get('http://localhost:4000/api/modulo', { params: { Modulo } });\n        dispatch({\n            type: OBTENER_MODULOSID_EXITO,\n            payload: res.data\n        })\n    } catch (error) {\n        dispatch({\n            type: ERROR,\n        })\n    }\n}\n\nexport const editarModuloAccion = (Id, Modulo) => async (dispatch) => {\n    try {\n        const res = await axios.get('http://localhost:4000/api/modulo', { params: { Id, Modulo } });\n        dispatch({\n            type: OBTENER_MODULOSID_EXITO,\n            payload: res.data\n        })\n    } catch (error) {\n        dispatch({\n            type: ERROR,\n        })\n    }\n}\n\nexport const eliminarModuloAccion = (Id) => async (dispatch) => {\n    try {\n        const res = await axios.get('http://localhost:4000/api/modulo', { params: { Id } });\n        dispatch({\n            type: OBTENER_MODULOSID_EXITO,\n            payload: res.data\n        })\n    } catch (error) {\n        dispatch({\n            type: ERROR,\n        })\n    }\n}","import axios from 'axios';\n\n//Constantes\nconst dataInicial = {\n    array : [],\n}\n\nconst OBTENER_SEVERIDADES_EXITO = 'OBTENER_SEVERIDADES_EXITO';\n\n//Reducer\nexport const severidadesReducer = (state = dataInicial, action) => {\n    switch(action.type){\n        case OBTENER_SEVERIDADES_EXITO:\n            return {...state, array: action.payload}\n        default:\n            return state\n    }\n}\n//Acciones\nexport const obtenerSeveridadesAccion = () => async (dispatch) => {\n    try {\n        const res = await axios.get('http://localhost:4000/api/severidades');\n        dispatch({\n            type: OBTENER_SEVERIDADES_EXITO,\n            payload: res.data\n        })\n    } catch (error) {\n        console.log(error);\n    }\n}","import axios from 'axios';\n\n//Constantes\nconst dataInicial = {\n    array: [],\n    message: null,\n}\n\nconst ERROR = 'ERROR';\nconst OBTENER_LOGS_EXITO = 'OBTENER_LOGS_EXITO';\nconst INSERTAR_LOGS_EXITO = \"INSERTAR_LOGS_EXITO\";\n\n//Reducer\nexport const logsReducer = (state = dataInicial, action) => {\n    switch (action.type) {\n        case ERROR:\n            return { ...dataInicial }\n        case OBTENER_LOGS_EXITO:\n            return { ...state, array: action.payload }\n        case INSERTAR_LOGS_EXITO:\n            return { ...state, ...action.payload }\n        default:\n            return state\n    }\n}\n//Acciones\nexport const obtenerLogsAccion = (usuarios, fecha, accion, severidad, dataExtra) => async (dispatch) => {\n    try {\n        const res = await axios.get('http://localhost:4000/api/logs', { params: { usuarios, fecha, accion, severidad, dataExtra } });\n        dispatch({\n            type: OBTENER_LOGS_EXITO,\n            payload: res.data\n        })\n    } catch (error) {\n        dispatch({\n            type: ERROR,\n        })\n    }\n}\n\nexport const insertarLogsAccion = (usuarios, accion, severidad, dataExtra) => async (dispatch) => {\n    try {\n        const res = await axios.get('http://localhost:4000/api/logs/insert', { params: { usuarios, accion, severidad, dataExtra } });\n        dispatch({\n            type: INSERTAR_LOGS_EXITO,\n            payload: res.data\n        })\n    } catch (error) {\n        dispatch({\n            type: ERROR,\n        })\n    }\n}","import axios from 'axios';\n\n//Constantes\nconst dataInicial = {\n    Status: null\n};\n\n\nconst ERROR = 'ERROR';\nconst EXCLUIR_LOCAL_ALARMA_EXITO = 'EXCLUIR_LOCAL_ALARMA_EXITO';\n\n//Reducer\nexport const excluirLocalAlarmaReducer = (state = dataInicial, action) => {\n    switch (action.type) {\n        case ERROR:\n            return { ...state, Status: false}\n        case EXCLUIR_LOCAL_ALARMA_EXITO:\n            return { ...state, Status: action.payload}\n        default:\n            return state\n    }\n}\n//Acciones\nexport const excluirLocalAlarmaAccion = (tienda) => async (dispatch) => {\n    try {\n        const res = await axios.get('http://localhost:4000/api/excluye-local-alarma', { params: { Local: tienda } })\n        dispatch({\n            type: EXCLUIR_LOCAL_ALARMA_EXITO,\n            payload: res.data\n        })\n    } catch (error) {\n        dispatch({\n            type: ERROR\n        })\n    }\n}","import axios from 'axios';\n\n//Constantes\nconst dataInicial = {\n    array: []\n}\n\nconst ERROR = 'ERROR';\nconst CONSULTA_TRANX_SIN_FOLIO_EXITO = 'CONSULTA_TRANX_SIN_FOLIO_EXITO';\n\n//Reducer\nexport const consultaTranxSinFolioReducer = (state = dataInicial, action) => {\n    switch (action.type) {\n        case ERROR:\n            return { ...dataInicial }\n        case CONSULTA_TRANX_SIN_FOLIO_EXITO:\n            return { ...state, array: action.payload.array }\n        default:\n            return state\n    }\n}\n//Acciones\nexport const consultaTranxSinFolioAccion = (FechaIni, FechaFin) => async (dispatch) => {\n    try {\n        const res = await axios.get('http://localhost:4000/api/consulta-tranx-sin-folio', { params: { FechaIni, FechaFin } })\n        dispatch({\n            type: CONSULTA_TRANX_SIN_FOLIO_EXITO,\n            payload: {\n                array: res.data.array\n            }\n        })\n    } catch (error) {\n        dispatch({\n            type: ERROR,\n        })\n    }\n}","import axios from 'axios';\n\n//Constantes\nconst dataInicial = {\n    array: [],\n    loading: false\n}\n\n\nconst LOADING = 'LOADING';\nconst ERROR = 'ERROR';\nconst CONSULTA_TRANX_MEXS_EXITO = 'CONSULTA_TRANX_MEXS_EXITO';\n\n//Reducer\nexport const consultaTranxMEXSReducer = (state = dataInicial, action) => {\n    switch (action.type) {\n        case LOADING:\n            return { ...state, loading: true }\n        case ERROR:\n            return {...dataInicial}\n        case CONSULTA_TRANX_MEXS_EXITO:\n            return {...state, loading: false, array: action.payload.MEXS}\n        default:\n            return state\n    }\n}\n//Acciones\nexport const consultaTranxMEXSAccion = (FechaIni, FechaFin) => async (dispatch) => {\n\n    dispatch({\n        type: LOADING\n    })\n\n    try {\n\n        const res = await axios.get('http://localhost:4000/api/consulta-tranx-MEXS', { params: { FechaIni, FechaFin } })\n        \n        dispatch({\n            type: CONSULTA_TRANX_MEXS_EXITO,\n            payload: {\n                MEXS: res.data.MEXS\n            }\n        })\n\n    } catch (error) {\n        dispatch({\n            type: ERROR,\n        })\n    }\n}","import {createStore, combineReducers, compose, applyMiddleware} from 'redux';\nimport thunk from 'redux-thunk';\n\nimport {estadoTiendaReducer} from './estadosTiendasDucks';\nimport {tiendasEasyReducer} from './tiendasEasyDucks';\nimport { authReducer, isAuthAccion } from './authDucks';\nimport { transaccionesSGVReducer } from './transaccionesSGVDucks';\nimport { numTransaccionesLocalesSGVReducer } from './numTransaccionesLocalesSGVDucks';\nimport { interfacesErrorTSAVReducer } from './InterfacesErrorTSAVDucks';\nimport {usuariosReducer} from './UsuariosDucks';\nimport { numTransaccionesLocalesCDPReducer } from './numTransaccionesLocalesCDPDucks';\nimport { totalesCDPReducer } from './totalCDPDucks';\nimport { EAMTRANReducer } from './EAMTRANDucks';\nimport { regenerarInterfazVTAReducer } from './generarInterfazVTADucks';\nimport { reenviarCC3Reducer } from './reenviarCC3Ducks';\nimport { tiposInterfacesReducer } from './tiposInterfacesDucks';\nimport { tiposEstadosReducer } from './tiposEstadosDucks';\nimport { PerfilesReducer } from './perfilesDucks';\nimport { ModuloReducer } from './modulosDucks';\nimport { severidadesReducer } from './severidadesDucks';\nimport { logsReducer } from './logsDucks';\nimport { excluirLocalAlarmaReducer } from './excluyeLocalAlarmaDucks';\nimport { consultaTranxSinFolioReducer } from './ConsultaTranxSinFolioDucks';\nimport { consultaTranxMEXSReducer } from './ConsultaTranxMEXSDucks';\n\nconst rootReduce = combineReducers({\n    estadoTienda: estadoTiendaReducer,\n    tiendasEasy: tiendasEasyReducer,\n    auth: authReducer,\n    transaccionesSGV: transaccionesSGVReducer,\n    statusLocales: numTransaccionesLocalesSGVReducer,\n    interfacesErrorTSAV: interfacesErrorTSAVReducer,\n    usuarios: usuariosReducer,\n    statusLocalesCDP: numTransaccionesLocalesCDPReducer,\n    totalesCDP: totalesCDPReducer,\n    EAMTRAN: EAMTRANReducer,\n    regenerarInterfazVTA: regenerarInterfazVTAReducer,\n    reenviarCC3: reenviarCC3Reducer,\n    tiposInterfaces: tiposInterfacesReducer,\n    tiposEstados: tiposEstadosReducer,\n    Perfiles: PerfilesReducer,\n    Modulo: ModuloReducer,\n    severidades: severidadesReducer,\n    logs: logsReducer,\n    excluirLocalAlarma: excluirLocalAlarmaReducer,\n    consultaTranxSinFolio: consultaTranxSinFolioReducer,\n    consultaTranxMEXS: consultaTranxMEXSReducer\n});\n\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\n\nexport const generateStore = () => {\n    const store = createStore(rootReduce, composeEnhancers(applyMiddleware(thunk)))\n    isAuthAccion()(store.dispatch)\n    return store;\n}","export default __webpack_public_path__ + \"static/media/easy.logo.new.593cc45b.png\";","import React from 'react'\nimport TextField from '@material-ui/core/TextField';\n\nconst Input = props => {\n    return (\n        <TextField  \n            id={props.id}\n            margin=\"dense\"\n            label={props.label} \n            type={props.type || \"text\"} \n            onChange={props.onChange} \n            value={props.value} \n        />\n    )\n}\n\nexport default Input;","import React from 'react'\nimport { Button as MuiButton } from '@material-ui/core';\n\n//css\nimport { makeStyles } from '@material-ui/core';\n\nconst useStyles = makeStyles((theme) => ({\n    default: {\n        color: 'white',\n        backgroundColor: '#7408A7',\n        '&:hover': {\n            backgroundColor: '#5F169B ',\n        },\n    },\n}))\n\nconst Button = props => {\n    const classes = useStyles();\n\n    return (\n        <MuiButton\n            variant={props.variant || \"contained\"}\n            size={props.size || \"small\"}\n            color={props.color || \"primary\"}\n            onClick={props.onClick}\n            className={props.className || classes.default}\n            {...props}\n        >\n            {props.text}\n        </MuiButton>\n    )\n}\n\nexport default Button;","import React from 'react'\nimport { FormControl, InputLabel, Select as MuiSelect, MenuItem } from '@material-ui/core';\n\nconst Select = (props) => {\n    return (\n        <FormControl>\n            <InputLabel shrink>{props.label}</InputLabel>\n            <MuiSelect\n                id={props.id}\n                label={props.label}\n                value={props.value}\n                onChange={props.onChange}\n                displayEmpty\n            >\n                <MenuItem key={0} value={''}>Ninguno</MenuItem>\n            {\n                props.options.map( (item, id) => (\n                    <MenuItem key={id} value={item.Id}>{item.Perfil}</MenuItem>\n                ))        \n            }\n            </MuiSelect>\n        </FormControl>\n    )\n}\n\nexport default Select;","import React from 'react'\n\n//css\nimport { makeStyles } from '@material-ui/core';\n\n//export to exel file\nimport ReactHTMLTableToExcel from 'react-html-table-to-excel';\n\nconst useStyles = makeStyles((theme) => ({\n    export: {\n        color: 'white',\n        borderRadius: 4,\n        border: 0,\n        height: 30,\n        fontSize: \"0.9rem\",\n        padding: '6 18px',\n        backgroundColor: '#7408A7',\n        boxShadow: \"0 1px 5px -2px rgb(0, 0, 0, 0.87)\",\n        minWidth: \"64px\",\n        verticalAlign: \"inherit\",\n        '&:hover': {\n            backgroundColor: '#5F169B ',\n        },\n    }\n}));\n\nconst ToExcel = (props) => {\n    const classes = useStyles();\n\n    return (\n        <ReactHTMLTableToExcel\n            id={props.id}\n            className={classes.export}\n            table={props.table}\n            filename={props.filename}\n            sheet={props.sheet}\n            buttonText={props.text}\n        />\n    )\n}\n\nexport default ToExcel;","import React from 'react'\n\n//Fecha\nimport DateFnsUtils from '@date-io/date-fns';\nimport { MuiPickersUtilsProvider, KeyboardDatePicker } from '@material-ui/pickers';\n\nconst DatePicker = (props) => {\n\n    return (\n        <MuiPickersUtilsProvider utils={DateFnsUtils}>\n            <KeyboardDatePicker\n                disableToolbar\n                variant=\"inline\"\n                format=\"yyyy-MM-dd\"\n                id={props.id}\n                label=\"Fecha\"\n                value={props.value}\n                onChange={props.onChange}\n                KeyboardButtonProps={{\n                    'aria-label': 'change date',\n                }}\n            />\n        </MuiPickersUtilsProvider>\n    )\n}\n\nexport default DatePicker;","import React from 'react'\nimport { makeStyles } from '@material-ui/core/styles';\nimport { Alert } from '@material-ui/lab';\nimport { Snackbar } from '@material-ui/core';\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        width: '100%',\n        marginTop: theme.spacing(8),\n    },\n}));\n\n\nconst Notification = (props) => {\n    const classes = useStyles();\n\n    const { notify, setNotify } = props\n\n    const handleClose = (event, reason) => {\n        if (reason === 'clickaway') {\n            return\n        }\n\n        setNotify({\n            ...notify,\n            isOpen: false\n        })\n    }\n\n    return (\n        <Snackbar\n            open={notify.isOpen}\n            autoHideDuration={3000}\n            anchorOrigin={{ vertical: 'top', horizontal: \"right\" }}\n            onClose={handleClose}\n            className={classes.root}\n        >\n            <Alert\n                severity={notify.type}\n                onClose={handleClose}\n            >\n                {notify.message}\n            </Alert>\n        </Snackbar>\n    )\n}\n\nexport default Notification\n","import Input from './Input'\nimport Button from './Button'\nimport Select from './Select'\nimport ToExcel from './ToExcel';\nimport DatePicker from './DatePicker';\nimport Notification from './Notification';\n\nexport const Controls = {\n    Input,\n    Button,\n    Select,\n    ToExcel,\n    DatePicker,\n    Notification\n}","import React, { useEffect, useState } from 'react';\r\n\r\n//css\r\nimport { makeStyles, CssBaseline } from '@material-ui/core';\r\nimport './login.css';\r\n\r\n//material-ui widget\r\nimport { Box, TextField, Button, Grid, Paper, Typography, Avatar } from '@material-ui/core';\r\n\r\n//Background\r\nimport Logo from '../../static/easy.logo.new.png';\r\n\r\n//Efecto loading\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\n\r\n//API\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { withRouter } from 'react-router-dom';\r\nimport { loginAccion } from '../../redux/authDucks';\r\nimport { Controls } from '../../components/controls/Controls';\r\nimport { insertarLogsAccion } from '../../redux/logsDucks';\r\n\r\nfunction Copyright() {\r\n  return (\r\n    <Typography variant=\"body2\" color=\"textSecondary\" align=\"center\">\r\n      ¬© 2017 | Easy todos los derechos reservados\r\n    </Typography>\r\n  );\r\n}\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    height: '100vh',\r\n  },\r\n  paper: {\r\n    margin: theme.spacing(8, 4),\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    alignItems: 'center',\r\n  },\r\n  avatar: {\r\n    margin: theme.spacing(2),\r\n    width: theme.spacing(14),\r\n    height: theme.spacing(14),\r\n    backgroundColor: theme.palette.secondary.main,\r\n  },\r\n  form: {\r\n    width: '100%',\r\n    marginTop: theme.spacing(1),\r\n  },\r\n  submit: {\r\n    margin: theme.spacing(3, 0, 2),\r\n    color: 'white',\r\n    backgroundColor: '#7408A7',\r\n    '&:hover': {\r\n      backgroundColor: '#5F169B ',\r\n    },\r\n  },\r\n  titulo: {\r\n    color: '#7408A7',\r\n  },\r\n  loading: {\r\n    margin: theme.spacing(2),\r\n  }\r\n}));\r\n\r\nconst SignIn = (props) => {\r\n  const classes = useStyles();\r\n\r\n  const dispatch = useDispatch();\r\n  const [username, setUsuario] = useState('');\r\n  const [password, setContrase√±a] = useState('');\r\n  const [Loading, setLoading] = useState(false);\r\n  const [notify, setNotify] = useState({ isOpen: false, message: '', type: '' });\r\n\r\n  const User = useSelector(store => store.auth.user);\r\n  const isLoggedIn = useSelector(store => store.auth.isLoggedIn);\r\n  const Message = useSelector(store => store.auth.message);\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault()\r\n    if (!username.trim()) {\r\n      console.log(\"Debe ingresar el usuario\")\r\n      return\r\n    }\r\n\r\n    if (!password.trim()) {\r\n      console.log(\"Debe ingresar la contrase√±a\")\r\n      return\r\n    }\r\n\r\n    setLoading(true)\r\n    dispatch(loginAccion(username, password))\r\n    setLoading(false)\r\n  }\r\n\r\n  useEffect(() => {\r\n    if (Message !== undefined) {\r\n      setNotify({\r\n        isOpen: true,\r\n        message: Message.text,\r\n        type: Message.icon\r\n      })\r\n    }\r\n    if (isLoggedIn) {\r\n      dispatch(insertarLogsAccion(User[0].Username, \"Login\", 1, `Iniciar sesi√≥n`))\r\n      props.history.push('/')\r\n    }\r\n  }, [User, Message, isLoggedIn, dispatch, props.history])\r\n\r\n  return (\r\n    <Grid container component=\"main\" className={classes.root}>\r\n      <CssBaseline />\r\n      <Grid item xs={false} sm={4} md={7} className='image' />\r\n      <Grid item xs={12} sm={8} md={5} component={Paper} elevation={6} square>\r\n        <div className={classes.paper}>\r\n\r\n          <Avatar className={classes.avatar} src={Logo} />\r\n\r\n          <Typography component=\"h1\" variant=\"h5\" className={classes.titulo}>\r\n            Monitor Operaciones Easy Chile\r\n          </Typography>\r\n\r\n          <form className={classes.form} onSubmit={e => handleSubmit(e)}>\r\n\r\n            <TextField\r\n              variant=\"outlined\"\r\n              margin=\"normal\"\r\n              required\r\n              fullWidth\r\n              disabled={Loading ? true : false}\r\n              id=\"username\"\r\n              label=\"username\"\r\n              name=\"username\"\r\n              autoComplete=\"username\"\r\n              autoFocus\r\n              onChange={e => setUsuario(e.target.value)}\r\n              value={username}\r\n            />\r\n\r\n            <TextField\r\n              variant=\"outlined\"\r\n              margin=\"normal\"\r\n              required\r\n              fullWidth\r\n              disabled={Loading ? true : false}\r\n              name=\"password\"\r\n              label=\"Password\"\r\n              type=\"password\"\r\n              id=\"password\"\r\n              autoComplete=\"current-password\"\r\n              onChange={e => setContrase√±a(e.target.value)}\r\n              value={password}\r\n            />\r\n            {\r\n              Loading === false ?\r\n                <Button type=\"submit\" fullWidth variant=\"contained\" color='primary'>\r\n                  Sign In\r\n                </Button>\r\n                :\r\n                <div>\r\n                  <Grid container justify=\"center\" alignItems=\"center\">\r\n                    <CircularProgress className={classes.loading} />\r\n                  </Grid>\r\n                </div>\r\n            }\r\n\r\n            {\r\n              <Controls.Notification\r\n                notify={notify}\r\n                setNotify={setNotify}\r\n              />\r\n            }\r\n            <Box mt={5}>\r\n              <Copyright />\r\n            </Box>\r\n\r\n          </form>\r\n\r\n        </div>\r\n\r\n      </Grid>\r\n    </Grid>\r\n  );\r\n}\r\n\r\nexport default withRouter(SignIn);","export function getFechaCL(){\n\n    let date = new Date()\n    return date.toLocaleString(\"es-CL\")\n}","import React, { useState } from 'react'\r\nimport { AppBar, Toolbar } from '@material-ui/core';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Divider from '@material-ui/core/Divider';\r\n\r\n\r\n\r\nimport clsx from 'clsx';\r\n\r\n//css\r\nimport { deepPurple } from '@material-ui/core/colors';\r\n\r\n//Menu\r\nimport Menu from '@material-ui/core/Menu';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\n\r\n//Icons\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport MenuIcon from '@material-ui/icons/Menu';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport {ExpandMore} from '@material-ui/icons';\r\nimport ExitToAppIcon from '@material-ui/icons/ExitToApp';\r\n\r\n\r\n//API\r\nimport { useDispatch } from 'react-redux';\r\nimport { withRouter } from 'react-router-dom'; //redireccionar\r\nimport { logoutAccion } from '../redux/authDucks';\r\nimport { insertarLogsAccion } from '../redux/logsDucks';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    nav: {\r\n        background: 'red',\r\n        //boxShadow: 'none',\r\n        transition: theme.transitions.create(['margin', 'width'], {\r\n            easing: theme.transitions.easing.sharp,\r\n            duration: theme.transitions.duration.leavingScreen,\r\n        }),\r\n    },\r\n    menuButton: {\r\n        marginRight: theme.spacing(2),\r\n    },\r\n    title: {\r\n        flexGrow: 1,\r\n    },\r\n    firstNameColor: {\r\n        color: 'yellow',\r\n        fontSize: 30\r\n    },\r\n    SecondNameColor: {\r\n        fontSize: 18\r\n    },\r\n    hide: {\r\n        display: 'none',\r\n    },\r\n    appBarShift: {\r\n        width: `calc(100% - ${240}px)`,\r\n        marginLeft: 240,\r\n        transition: theme.transitions.create(['margin', 'width'], {\r\n            easing: theme.transitions.easing.easeOut,\r\n            duration: theme.transitions.duration.enteringScreen,\r\n        }),\r\n    },\r\n    transparent: {\r\n        color: theme.palette.getContrastText(deepPurple[500]),\r\n        backgroundColor: \"transparent\",\r\n        margin: theme.spacing(2)\r\n    },\r\n    Icon: {\r\n        alignItems: \"center\"\r\n    },\r\n    usuario:{\r\n        fontSize: \"18px\",\r\n    }\r\n}));\r\n\r\nconst Navbar = (props) => {\r\n    const classes = useStyles()\r\n\r\n    const dispatch = useDispatch();\r\n    const [anchorEl, setAnchorEl] = useState(null);\r\n\r\n    const handleClick = (event) => {\r\n        setAnchorEl(event.currentTarget);\r\n    };\r\n\r\n    return (\r\n        <div>\r\n            <AppBar position=\"fixed\" className={clsx(classes.nav, { [classes.appBarShift]: props.open, })}>\r\n                <Toolbar>\r\n                    <IconButton\r\n                        color=\"inherit\"\r\n                        aria-label=\"open drawer\"\r\n                        onClick={() => props.handleDrawerOpen()}\r\n                        edge=\"start\"\r\n                        className={clsx(classes.menuButton, props.open && classes.hide)}\r\n                    >\r\n                        <MenuIcon />\r\n                    </IconButton>\r\n\r\n                    <Typography variant=\"h6\" className={classes.title}>\r\n                        <span className={classes.firstNameColor}>Easy</span> <span className={classes.SecondNameColor}>Monitor de operaciones</span>\r\n                    </Typography>\r\n\r\n\r\n\r\n                    <Divider orientation=\"vertical\" flexItem />\r\n\r\n\r\n                    <Avatar className={classes.transparent} />\r\n                    {props.User ? <span className={classes.usuario}> {props.User.Nombres+' '+props.User.ApellidoP}  </span>: null}\r\n\r\n                    <IconButton onClick={handleClick} className={classes.Icon}>\r\n                        <ExpandMore />\r\n                    </IconButton>\r\n\r\n\r\n                    <Menu\r\n                        id=\"simple-menu\"\r\n                        anchorEl={anchorEl}\r\n                        keepMounted\r\n                        open={Boolean(anchorEl)}\r\n                        onClose={() => setAnchorEl(null)}\r\n                    >\r\n                        <MenuItem onClick={() => setAnchorEl(null)} disabled>{props.User ? props.User.perfil : null}</MenuItem>\r\n                        <MenuItem onClick={() => {\r\n                            dispatch(logoutAccion())\r\n                                .then(() => dispatch(insertarLogsAccion(props.User.Username, \"Logout\", 1, \"Cerrar sesi√≥n\")))\r\n                            props.history.push('/signin')\r\n                        }}>\r\n                            <ExitToAppIcon/>\r\n                            Logout\r\n                        </MenuItem>\r\n                    </Menu>\r\n\r\n                </Toolbar>\r\n            </AppBar>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default withRouter(Navbar);","//Paginas del menu\n\nconst ListaPaginas = [\n    {\n        primary: \"Status\",\n\n        children: [\n            { to:\"/Status/Tienda\", primary:\"Status Tienda\" }\n        ]\n    },\n    {\n        primary: \"SGV\",\n\n        children: [\n            { to:\"/SGV/DetalleDocumentos\", primary:\"Detalle documentos\" },\n            { to:\"/SGV/ConsultaTranxSinFolio\", primary:\"Consulta Tranx Sin Folio\" },\n            { to:\"/SGV/ConsultaTranxMEXS\", primary:\"Consulta Tranx MEXS\" }\n        ]\n    },\n    {\n        primary:\"CDP\",\n\n        children: [\n            { to:\"/CDP/totales\", primary:\"Totales CDP\" },\n            { to:\"/CDP/excluir-tienda-alarma\", primary:\"Excluir tienda alarma\" },\n            { to:\"/CDP/eamtran\", primary:\"Detalles EAMTRAN\" }\n        ]\n    },\n    {\n        primary:\"TSAV\",\n\n        children: [\n            { to:\"/TSAV/interfaces-con-error\", primary:\"Admin interfaces TSAV\" },\n        ]\n    },\n    {\n        primary:\"Interfaces\",\n \n        children: [\n            { to:\"/Interfaces/regenerar-vta\", primary:\"Regenerar VTA\" },\n            { to:\"/Interfaces/reenviar-cc3\", primary:\"Reenviar CC3\" }\n        ]\n    },\n    {\n        primary:\"Admin\",\n \n        children: [\n            { to:\"/Admin/Usuarios\", primary:\"Usuarios\" },\n            { to:\"/Admin/Perfiles\", primary:\"Perfiles\" },\n            { to:\"/Admin/Logs\", primary:\"Logs\" }\n        ]\n    },\n];\n\nexport default ListaPaginas;","import React, { useState } from 'react';\n\n//css\nimport { makeStyles } from '@material-ui/core/styles';\n\n//Lista\nimport ListaPaginas from './PageDataList';\nimport { Divider, List, ListItem, ListItemText, ListItemIcon, Collapse } from '@material-ui/core';\n\n//Icons \nimport { ExpandLess, ExpandMore } from '@material-ui/icons';\nimport HomeIcon from '@material-ui/icons/Home';\n\n//Componentes\nimport { NavLink } from 'react-router-dom';\n\n//API\nimport { useSelector } from 'react-redux';\n\nconst useStyles = makeStyles((theme) => ({\n    nested: {\n        paddingLeft: theme.spacing(4),\n    },\n}));\n\nexport const Lista = () => {\n\n    const classes = useStyles();\n\n    const [activeIndex, setActiveIndex] = useState(null);\n    const modulos = useSelector(store => store.auth.modulos);\n\n    let menu = []\n\n    modulos.forEach(modulo => {\n        let item = ListaPaginas.find(moduloMenu => moduloMenu.primary === modulo.Modulo)\n        if (item !== undefined) {\n            menu.push(item)\n        }\n    })\n\n    return (\n        <div>\n            <List disablePadding dense component=\"nav\" aria-label=\"main mailbox folders\">\n\n                <ListItem button component={NavLink} to=\"/\" activeClassName=\"active\">\n                    <ListItemIcon> <HomeIcon /> </ListItemIcon>\n                    <ListItemText primary=\"Home\" />\n                </ListItem>\n\n                <Divider />\n                {\n                    menu.map((item, Id) => (\n                        <div key={Id}>\n                            <ListItem button onClick={event => setActiveIndex(activeIndex === Id ? null : Id)}>\n                                <ListItemText key={item.primary} primary={item.primary} />\n                                {activeIndex === Id ? <ExpandLess /> : <ExpandMore />}\n                            </ListItem>\n                            <Collapse in={activeIndex === Id} timeout=\"auto\" unmountOnExit>\n                                <List key={Id} component=\"div\" disablePadding>\n                                    {item.children.map((subItem, SubId) =>\n                                        <ListItem \n                                            button \n                                            disabled={subItem.primary === \"Perfiles\"? true : false} \n                                            key={SubId} component={NavLink} \n                                            to={subItem.to} \n                                            className={classes.nested}\n                                        >\n                                            <ListItemText key={subItem.primary} primary={subItem.primary} />\n                                        </ListItem>\n                                    )}\n                                </List>\n                            </Collapse>\n                        </div>\n\n                    ))\n                }\n            </List>\n        </div>\n    )\n}\n\n\n/*\n                <ListItem button onClick={handleSGVClick}>\n                    <ListItemText primary=\"SGV\" />\n                    {openSGV ? <ExpandLess /> : <ExpandMore />}\n                </ListItem>\n                <Collapse in={openSGV} timeout=\"auto\" unmountOnExit>\n                    <List component=\"div\" disablePadding>\n                        <ListItem component={NavLink} to=\"/SGV/DetalleDocumentos\" className={classes.nested}>\n                            <ListItemText primary=\"Detalle documentos\" />\n                        </ListItem>\n\n                        <ListItem component={NavLink} to=\"/SGV/ConsultaTranxSinFolio\" className={classes.nested}>\n                            <ListItemText primary=\"Consulta Tranx Sin Folio\" />\n                        </ListItem>\n                    </List>\n                </Collapse>\n\n\n                <ListItem button onClick={handleCDPClick}>\n                    <ListItemText primary=\"CDP\" />\n                    {openCDP ? <ExpandLess /> : <ExpandMore />}\n                </ListItem>\n                <Collapse in={openCDP} timeout=\"auto\" unmountOnExit>\n                    <List component=\"div\" disablePadding>\n                        <ListItem component={NavLink} to=\"/CDP/totales\" className={classes.nested}>\n                            <ListItemText primary=\"Totales CDP\" />\n                        </ListItem>\n\n                        <ListItem component={NavLink} to=\"/CDP/excluir-tienda-alarma\" className={classes.nested}>\n                            <ListItemText primary=\"Excluir tienda alarma\" />\n                        </ListItem>\n\n                        <ListItem component={NavLink} to=\"/CDP/eamtran\" className={classes.nested}>\n                            <ListItemText primary=\"Detalles EAMTRAN\" />\n                        </ListItem>\n                    </List>\n                </Collapse>\n\n\n                <ListItem button onClick={handleTSAVClick}>\n                    <ListItemText primary=\"TSAV\" />\n                    {openTSAV ? <ExpandLess /> : <ExpandMore />}\n                </ListItem>\n                <Collapse in={openTSAV} timeout=\"auto\" unmountOnExit>\n                    <List component=\"div\" disablePadding>\n                        <ListItem component={NavLink} to=\"/TSAV/interfaces-con-error\" className={classes.nested}>\n                            <ListItemText primary=\"Admin interfaces TSAV\" />\n                        </ListItem>\n                    </List>\n                </Collapse>\n\n\n                <ListItem button onClick={handleInterfazClick}>\n                    <ListItemText primary=\"Interfaces\" />\n                    {openInter ? <ExpandLess /> : <ExpandMore />}\n                </ListItem>\n                <Collapse in={openInter} timeout=\"auto\" unmountOnExit>\n                    <List component=\"div\" disablePadding>\n                        <ListItem component={NavLink} to=\"/Interfaces/regenerar-vta\" className={classes.nested}>\n                            <ListItemText primary=\"Regenerar VTA\" />\n                        </ListItem>\n                        <ListItem component={NavLink} to=\"/Interfaces/reenviar-cc3\" className={classes.nested}>\n                            <ListItemText primary=\"Reenviar CC3\" />\n                        </ListItem>\n                    </List>\n                </Collapse>\n\n\n                <ListItem button onClick={handleAdminClick}>\n                    <ListItemText primary=\"Admin\" />\n                    {openAdmin ? <ExpandLess /> : <ExpandMore />}\n                </ListItem>\n                <Collapse in={openAdmin} timeout=\"auto\" unmountOnExit>\n                    <List component=\"div\" disablePadding>\n                        <ListItem component={NavLink} to=\"/Admin/Usuarios\" className={classes.nested}>\n                            <ListItemText primary=\"Usuarios\" />\n                        </ListItem>\n\n                        <ListItem component={NavLink} to=\"/Admin/Perfiles\" className={classes.nested}>\n                            <ListItemText primary=\"Perfiles\" />\n                        </ListItem>\n\n                        <ListItem component={NavLink} to=\"/Admin/Logs\" className={classes.nested}>\n                            <ListItemText primary=\"Logs\" />\n                        </ListItem>\n                    </List>\n                </Collapse>\n\n*/","import React from 'react';\nimport { makeStyles, Drawer, IconButton } from '@material-ui/core';\nimport ChevronLeftIcon from '@material-ui/icons/ChevronLeft';\n\nimport { Lista } from './List';\n\nconst drawerWidth = 240;\n\nconst useStyles = makeStyles((theme) => ({\n    drawer: {\n        width: drawerWidth,\n        flexShrink: 0,\n    },\n    drawerPaper: {\n        width: drawerWidth,\n    },\n    drawerContainer: {\n        overflow: 'auto',\n    },\n    drawerHeader: {\n        display: 'flex',\n        alignItems: 'center',\n        padding: theme.spacing(0, 1),\n        // necessary for content to be below app bar\n        ...theme.mixins.toolbar,\n        justifyContent: 'flex-end',\n    },\n    toolbar: theme.mixins.toolbar,\n}));\n\nexport const Menu = (props) => {\n    const classes = useStyles();\n    \n    return (\n        <div>\n            <Drawer\n                className={classes.drawer}\n                variant=\"persistent\"\n                anchor=\"left\"\n                open={props.open}\n                classes={{\n                    paper: classes.drawerPaper,\n                }}\n            >\n                <div className={classes.drawerHeader}>\n                    <IconButton onClick={() => props.handleDrawerClose()}>\n                        <ChevronLeftIcon />\n                    </IconButton>\n                </div>\n                <Lista />\n            </Drawer>\n        </div>\n    )\n}\n","import React from 'react'\n\nimport { Grid, makeStyles, Typography } from '@material-ui/core';\n\n//Efecto Loading\nimport CircularProgress from '@material-ui/core/CircularProgress';\n\n//Dialog\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\n\nimport Button from './controls/Button';\n\nconst useStyles = makeStyles((theme) => ({\n    title: {\n        fontSize: \"25px\",\n        textAlign: \"center\",\n        color: \"black\",\n        fontWeight: \"bold\",\n        margin: theme.spacing(2),\n    },\n    subtitle: {\n        fontSize: \"20px\",\n        textAlign: \"center\"\n    },\n    button: {\n        color: 'white',\n        margin: theme.spacing(2),\n        backgroundColor: '#7408A7',\n        '&:hover': {\n            backgroundColor: '#5F169B ',\n        },\n    },\n    loading: {\n        margin: theme.spacing(2),\n    },\n    text: {\n        textAlign: \"center\"\n    },\n}));\n\nexport const DialogAlert = (props) => {\n    const classes = useStyles();\n\n    return (\n        <Dialog open={props.open} aria-labelledby=\"form-dialog-title\">\n            {props.loading === false ?\n                <>\n                    <Grid container justify=\"center\" alignItems=\"center\">\n                        <Grid item xl>\n                            {<props.Icon className={props.IconColor} />}\n                        </Grid>\n                    </Grid>\n                    <DialogContent>\n                        <Grid container direction=\"column\" justify=\"center\" alignItems=\"center\" className={classes.text}>\n\n                            <Grid item xl>\n                                <Typography variant=\"h5\" >\n                                    {props.title}\n                                </Typography>\n                            </Grid>\n\n                            <Grid item xl>\n                                <Typography variant=\"subtitle2\" >\n                                    {props.subtitle}\n                                </Typography>\n                            </Grid>\n\n                        </Grid>\n                    </DialogContent>\n\n                    <DialogActions>\n                        <Grid container justify=\"center\" alignItems=\"center\">\n\n                            <Grid item xl>\n                                <Button\n                                    onClick={props.onClick}\n                                    size=\"large\"\n                                    text=\"Aceptar\"\n                                    className={classes.button}\n                                />\n                            </Grid>\n\n                        </Grid>\n                    </DialogActions>\n                </>\n                :\n                <div>\n                    {/* Loading */}\n                    <Grid container justify=\"center\" alignItems=\"center\">\n                        <CircularProgress className={classes.loading} />\n                    </Grid>\n                </div>}\n        </Dialog>\n    )\n}","import React, { useState } from 'react'\n\n//css\nimport { makeStyles } from '@material-ui/core';\n\n//Icons\nimport TimerOffIcon from '@material-ui/icons/TimerOff';\n\n//componentes\nimport { DialogAlert } from './DialogAlert';\n\n//API\nimport { useDispatch } from 'react-redux';\nimport { logoutAccion } from '../redux/authDucks';\nimport { insertarLogsAccion } from '../redux/logsDucks';\n\nconst useStyles = makeStyles((theme) => ({\n    timeOut: {\n        fontSize: \"200px\",\n        alignItems: \"center\",\n        margin: theme.spacing(2)\n    }\n}));\n\nexport const IsExpired = (props) => {\n    const classes = useStyles();\n\n    const dispatch = useDispatch();\n    const [alert, setAlert] = useState(true); \n\n    return(\n        <DialogAlert\n\n            open={alert}\n            loading={false}\n            Icon={TimerOffIcon}\n            IconColor={classes.timeOut}\n            title={\"El tiempo se acabo\"}\n            subtitle={\"tu sesi√≥n expiro, vuelve a ingresar para utilizar el monitor.\"}\n            onClick={() => {\n                setAlert(false)\n                dispatch(logoutAccion())\n                    .then(() => dispatch(insertarLogsAccion(props.User.Username, \"Logout\", 1, \"Expiraci√≥n de token\")))\n            }}\n        />\n    )\n}","import React, { useState } from 'react'\n\n//Importamos componentes.\nimport Navbar from './navbar';\nimport { Menu } from './Menu';\nimport clsx from 'clsx';\n\nimport { IsExpired } from \"./isExpired\";\n\nimport { makeStyles } from '@material-ui/core';\n\n//API\nimport { useSelector } from 'react-redux';\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        display: 'flex',\n    },\n    content: {\n        flexGrow: 1,\n        padding: theme.spacing(3),\n        backgroundColor: theme.palette.grey[50],\n        transition: theme.transitions.create('margin', {\n            easing: theme.transitions.easing.sharp,\n            duration: theme.transitions.duration.leavingScreen,\n        }),\n        marginLeft: -240,\n    },\n    contentShift: {\n        transition: theme.transitions.create('margin', {\n            easing: theme.transitions.easing.easeOut,\n            duration: theme.transitions.duration.enteringScreen,\n        }),\n        marginLeft: 0,\n    },\n    toolbar: theme.mixins.toolbar,\n}));\n\nexport const ContainerBox = (props) => {\n    const classes = useStyles();\n\n    const [open, setOpen] = useState(false);\n\n    const handleDrawerOpen = () => {\n        setOpen(true);\n    };\n\n    const handleDrawerClose = () => {\n        setOpen(false);\n    };\n\n    const User = useSelector(store => store.auth.user);\n\n    return (\n        <div className={classes.root}>\n            <Navbar\n                open={open}\n                handleDrawerOpen={handleDrawerOpen}\n                User={User[0]}\n            />\n\n            <Menu\n                open={open}\n                handleDrawerClose={handleDrawerClose}\n            />\n\n            <div className={clsx(classes.content, { [classes.contentShift]: open, })}>\n\n                <div className={classes.toolbar}></div>\n                {\n                    props.children\n                }\n\n\n            </div>\n\n            {User[1].exp < (Date.now() / 1000) ?\n                <IsExpired\n                    User={User[0]}\n                />\n                :\n                null\n            }\n        </div>\n    )\n}","import React from 'react'\n\n//Style\nimport { Grid, IconButton, makeStyles } from '@material-ui/core';\n\n//Dialog - PopUp\nimport { Dialog, DialogContent, DialogTitle } from '@material-ui/core';\n\n//Efecto loading\nimport CircularProgress from '@material-ui/core/CircularProgress';\n\nimport CloseIcon from '@material-ui/icons/Close';\nconst useStyles = makeStyles((theme) => ({\n    loading: {\n        margin: theme.spacing(2),\n    },\n    items: {\n\n    },\n}));\n\nexport const DialogEdit = (props) => {\n    const classes = useStyles();\n\n    const handleCancel = () => {\n        props.setOpen(false);\n    }\n\n    return (\n        <Dialog open={props.open} onClose={() => handleCancel()} aria-labelledby=\"form-dialog-title\" maxWidth={props.maxWidth}>\n            <Grid container justify=\"flex-start\" alignItems=\"center\">\n                <Grid item xs>\n                    <DialogTitle id=\"form-dialog-title\">{props.title}</DialogTitle>\n                </Grid>\n\n                \n                    <Grid item x className={classes.loading}>\n                        <IconButton\n                            color=\"secondary\"\n                            onClick={() => handleCancel()}\n                        >\n                            <CloseIcon />\n                        </IconButton>\n                    </Grid>\n\n            </Grid>\n            <DialogContent dividers>\n                {props.loading === false ?\n                    props.children\n                    :\n                    <div>\n                        {/* Loading */}\n                        <Grid container justify=\"center\" alignItems=\"center\">\n                            <CircularProgress className={classes.loading} />\n                        </Grid>\n                    </div>}\n            </DialogContent>\n        </Dialog>\n    )\n}","import React from 'react';\n\nimport { makeStyles } from '@material-ui/core';\n\nimport {\n    Table,\n    TableBody,\n    TableCell,\n    TableContainer,\n    TableHead,\n    TableRow,\n    Paper\n} from '@material-ui/core';\n\nconst useStyles = makeStyles((theme) => ({\n    table: {\n        minWidth: 650,\n    },\n    container: {\n        maxHeight: 550,\n    }\n}));\n\nexport const TablaError = (props) => {\n    const classes = useStyles();\n\n    return (\n        <TableContainer component={Paper} className={classes.container}>\n            <Table className={classes.table} stickyHeader aria-label=\"sticky table\" size='small'>\n                <TableHead>\n                    <TableRow>\n                        {\n                            props.Head.map((item, id) => (\n                                <TableCell key={id}>\n                                    {item}\n                                </TableCell>\n                            ))\n                        }\n                    </TableRow>\n                </TableHead>\n\n                <TableBody>\n                    {\n                        props.Body.map((item, id) => (\n                            <TableRow component=\"tr\" key={id}>\n\n                                <TableCell> {item.FechaFiscal} </TableCell>\n                                <TableCell> {item.FechaError} </TableCell>\n                                <TableCell> {item.IdTransaccion} </TableCell>\n                                <TableCell> {item.IdProceso} </TableCell>\n                                <TableCell> {item.Servidor} </TableCell>\n                                <TableCell> {item.EstadoActual} </TableCell>\n                                <TableCell> {item.DescipcionError} </TableCell>\n\n                            </TableRow>\n                        ))\n                    }\n                </TableBody>\n            </Table>\n        </TableContainer>\n    )\n}\n","import React from 'react'\n\nimport { makeStyles } from '@material-ui/core';\nimport { Accordion as MuiAccordion, AccordionSummary, AccordionDetails } from '@material-ui/core';\n\nimport FilterListIcon from '@material-ui/icons/FilterList';\n\nconst useStyles = makeStyles((theme) => ({\n    accordion: {\n        boxShadow: 'none',\n    },\n}));\n\nexport const Accordion = (props) => {\n    const classes = useStyles();\n\n    return (\n        <MuiAccordion className={classes.accordion}>\n            <AccordionSummary\n                expandIcon={<FilterListIcon />}\n                aria-controls=\"panel1a-content\"\n                id=\"panel1a-header\"\n            />\n            <AccordionDetails>\n\n                {props.children}\n\n            </AccordionDetails>\n        </MuiAccordion>\n    )\n}\n","import React, { useEffect, useState } from 'react';\nimport { makeStyles, Typography, Grid } from '@material-ui/core';\n\n// Tabla de datos\nimport {\n    Table,\n    TableBody,\n    TableCell,\n    TableContainer,\n    TableHead,\n    TableRow,\n    Paper\n} from '@material-ui/core';\n\n//Efecto loading\nimport CircularProgress from '@material-ui/core/CircularProgress';\n\nimport { getFechaCL } from '../../components/fechaCL';\n\n//API\nimport { useDispatch, useSelector } from 'react-redux';\nimport { obtenerEStadoTiendaAccion, obtenerEstadoLocalDetalleErrorAccion } from '../../redux/estadosTiendasDucks';\nimport { insertarLogsAccion } from '../../redux/logsDucks';\n\n//Componentes\nimport { ContainerBox } from '../../components/MainContainer';\nimport { DialogEdit } from '../../components/DialogEdit';\nimport { TablaError } from './TablaError';\nimport { Accordion } from '../../components/Accordion';\n\n//Controls\nimport { Controls } from '../../components/controls/Controls';\n\n//Data mientras la API no envia la informaci√≥n.\nconst encabezado = [\"Local\", \"Dia -6\", \"Dia -5\", \"Dia -4\", \"Dia -3\", \"Dia -2\", \"Dia -1\", \"Dia 0\", \"Dia 1\", \"Dia 2\"]\nconst Head = ['Fecha fiscal', 'Fecha error', 'ID Transacci√≥n', 'ID Proceso', 'Servidor', 'Estado actual', 'Descripci√≥n error']\n\nconst useStyles = makeStyles((theme) => ({\n    title: {\n        color: 'black',\n        padding: theme.spacing(2),\n    },\n    table: {\n        minWidth: 650,\n    },\n    container: {\n        maxHeight: 550,\n    },\n    items: {\n        padding: theme.spacing(2),\n        margin: theme.spacing(2),\n    },\n    cerrado: {\n        background: '#0F9A0F',\n\n    },\n    error: {\n        background: '#DC2F14',\n\n        '&:hover': {\n            backgroundColor: '#E23333 ',\n            color: \"white\"\n        },\n    },\n    Gray: {\n        background: 'gray',\n\n    },\n    orange: {\n        background: 'orange',\n\n    },\n    fecha: {\n        fontSize: \"13px\",\n    },\n    Head: {\n        border: '1px solid black',\n    },\n    loading: {\n        display: 'flex',\n        flexDirection: 'column',\n        alignItems: \"center\",\n    },\n    itemLoading: {\n        margin: theme.spacing(2)\n    }\n}));\n\nexport const Home = () => {\n    const classes = useStyles();\n\n    const dispatch = useDispatch();\n\n    const [title, setTitle] = useState('');\n    const [openDialog, setOpenDialog] = useState(false);\n    const [selectedDate, setSelectedDate] = useState(new Date());\n    const [Loading, setLoading] = useState(false);\n\n    const User = useSelector(store => store.auth.user);\n    const estatusTiendas = useSelector(store => store.estadoTienda.datos);\n    const coleccionDeFechas = useSelector(store => store.estadoTienda.Fechas);\n    const EstadoLocalDetalleError = useSelector(store => store.estadoTienda.EstadoLocalDetalleError);\n\n    // Cargamos la informacion cuando termina de \"pintarse los componentes\".\n    useEffect(() => {\n        setLoading(true)\n        dispatch(obtenerEStadoTiendaAccion(getFechaCL()))\n            .then(() => dispatch(insertarLogsAccion(User[0].Username, \"Monitor\", 1, \"Visualizaci√≥n general\")))\n            .then(() => setLoading(false))\n    }, [User, dispatch])\n\n    return (\n        <ContainerBox>\n            <Typography variant='h3' align='center' className={classes.title}>\n                Home\n            </Typography>\n\n            <TableContainer component={Paper} className={classes.container}>\n                <Accordion>\n                    <Grid container alignItems=\"flex-end\" spacing={2}>\n\n                        <Grid item xs={2} sm={2} md={2} lg={2} xl={2} className={classes.items}>\n                            <Controls.DatePicker\n                                id=\"fecha\"\n                                value={selectedDate}\n                                onChange={date => setSelectedDate(date)}\n                            />\n                        </Grid>\n\n                        <Grid item xl className={classes.items}>\n                            <Controls.Button\n                                disabled={Loading === true ? true : false}\n                                onClick={() => {\n                                    dispatch(obtenerEStadoTiendaAccion(selectedDate.toLocaleString(\"es-CL\")))\n                                        .then(() => dispatch(insertarLogsAccion(User[0].Username, \"Monitor\", 1, \"Visualizaci√≥n general\")))\n                                }}\n                                text=\"Refrescar\"\n                            />\n                        </Grid>\n\n                    </Grid>\n                </Accordion>\n\n                <Table className={classes.table} stickyHeader aria-label=\"sticky table\" size='small'>\n\n                    <TableHead>\n                        {\n                            estatusTiendas.length === 0 ?\n                                <TableRow>\n                                    {\n                                        encabezado.map((item, id) => (\n                                            <TableCell key={id} className={classes.fecha} >{item}</TableCell>\n                                        ))\n                                    }\n                                </TableRow>\n                                :\n                                <TableRow>\n                                    {\n                                        coleccionDeFechas.map((fecha, id) => (\n                                            <TableCell key={id} className={classes.fecha}>{fecha}</TableCell>\n                                        ))\n                                    }\n                                </TableRow>\n                        }\n                    </TableHead>\n\n                    <TableBody>\n                        {\n                            Loading === false ?\n                                estatusTiendas.map((item, id) => (\n                                    <TableRow component=\"tr\" key={id}>\n\n                                        <TableCell  >\n                                            {item.CodSAP}-{item.Local}\n                                        </TableCell>\n\n                                        {\n                                            item.dia.map((subItem, Id) => (\n                                                <TableCell\n                                                    key={Id}\n                                                    align=\"center\"\n                                                    onClick={(\n                                                        subItem === 'Error Cierre') || (subItem === 'Error') ?\n                                                        () => {\n                                                            dispatch(obtenerEstadoLocalDetalleErrorAccion(item.Local, coleccionDeFechas[Id] + 1))\n                                                                .then(() => dispatch(insertarLogsAccion(User[0].Username, \"Monitor\", 1, \"Visualizar el detalle del error\")))\n                                                            setTitle(`Detalle de error - Local: ${item.Local}, d√≠a: ${coleccionDeFechas[Id]}`)\n                                                            setOpenDialog(true)\n                                                        }\n                                                        :\n                                                        null\n                                                    }\n                                                    className={\n                                                        subItem === 'Cerrado' ?\n                                                            classes.cerrado\n                                                            :\n                                                            (subItem === 'Error Cierre') || (subItem === 'Error') ?\n                                                                classes.error\n                                                                :\n                                                                subItem === null ?\n                                                                    classes.Gray\n                                                                    :\n                                                                    classes.orange\n                                                    }\n                                                    title={(subItem === 'Error Cierre') || (subItem === 'Error') ?\n                                                        \"Haga click para obtener mayor informaci√≥n del error.\"\n                                                        :\n                                                        null\n                                                    }\n                                                >\n                                                    {(subItem !== null) ? subItem : \"Sin Registro\"}\n                                                </TableCell>\n                                            ))}\n\n                                    </TableRow>\n                                ))\n                                :\n                                <TableRow>\n                                    <TableCell align=\"center\" colSpan={encabezado.length}>\n                                        <div className={classes.loading}>\n                                            <CircularProgress className={classes.itemLoading} />\n                                            <span>Cargando ...</span>\n                                        </div>\n                                    </TableCell>\n                                </TableRow>\n                        }\n                    </TableBody>\n                </Table>\n            </TableContainer>\n\n            <DialogEdit\n                setOpen={setOpenDialog}\n                open={openDialog}\n                loading={Loading}\n                title={title}\n                maxWidth=\"xl\"\n            >\n                <TablaError\n                    Head={Head}\n                    Body={EstadoLocalDetalleError}\n                />\n            </DialogEdit>\n        </ContainerBox>\n    )\n}","import React, { useEffect, useState } from 'react'\n\n//css\nimport { makeStyles } from '@material-ui/core';\n\n//material-ui widget\nimport { Typography, Grid } from '@material-ui/core';\n\n// Tabla de datos\nimport {\n    TableContainer,\n    Paper,\n    Table,\n    TableHead,\n    TableBody,\n    TableRow,\n    TableCell\n} from '@material-ui/core';\n\nimport { getFechaCL } from '../../components/fechaCL';\n\n//Efecto loading\nimport CircularProgress from '@material-ui/core/CircularProgress';\n\n//Componentes\nimport { ContainerBox } from '../../components/MainContainer';\nimport { Accordion } from '../../components/Accordion';\n\nimport { Controls } from '../../components/controls/Controls';\n\n//API\nimport { useDispatch, useSelector } from 'react-redux';\nimport { numTransaccionesLocalesCDPAccion } from '../../redux/numTransaccionesLocalesCDPDucks';\nimport { insertarLogsAccion } from '../../redux/logsDucks';\n\nconst useStyles = makeStyles((theme) => ({\n    title: {\n        color: 'black',\n    },\n    table: {\n        minWidth: 650,\n    },\n    items: {\n        padding: theme.spacing(4),\n        margin: theme.spacing(2),\n    },\n    container: {\n        maxHeight: 550,\n    },\n    loading: {\n        display: 'flex',\n        flexDirection: 'column',\n        alignItems: \"center\",\n    },\n    itemLoading: {\n        margin: theme.spacing(2)\n    }\n}));\n\nconst Head = ['CodSAP', 'Tienda Easy', 'Total trx SGV', 'Total trx CDP', 'OK?', 'Interfaz de venta', 'Interfaz teradata']\n\nexport const StatusTienda = () => {\n    const classes = useStyles();\n\n    const dispatch = useDispatch();\n    const [selectedDate, setSelectedDate] = useState(new Date());\n    const [Loading, setLoading] = useState(false);\n    const [notify, setNotify] = useState({ isOpen: false, message: '', type: '' });\n\n    const User = useSelector(store => store.auth.user);\n    const statusLocalesCDP = useSelector(store => store.statusLocalesCDP.array);\n    const Message = useSelector(store => store.statusLocalesCDP.message);\n\n    // Cargamos la informacion cuando termina de \"pintarse los componentes\".\n    useEffect(() => {\n        if (Message !== undefined) {\n            setNotify({\n                isOpen: true,\n                message: Message.text,\n                type: Message.icon\n            })\n        }\n        setLoading(true)\n        dispatch(numTransaccionesLocalesCDPAccion(getFechaCL()))\n            .then(() => dispatch(insertarLogsAccion(User[0].Username, \"Status Tienda\", 1, `Fecha de busqueda: ${selectedDate.toLocaleString(\"es-CL\").substring(0, 10)}`)))\n            .then(() => setLoading(false))\n    }, [User, selectedDate, Message, dispatch])\n\n    return (\n        <ContainerBox>\n            <Typography variant='h3' align='center' className={classes.title}>\n                Status Tienda\n            </Typography>\n\n            <TableContainer component={Paper} className={classes.container}>\n\n                <Accordion>\n                    <Grid container alignItems=\"flex-end\" spacing={2}>\n\n                        <Grid item xl className={classes.items}>\n                            <Controls.DatePicker\n                                id=\"fecha\"\n                                value={selectedDate}\n                                onChange={date => setSelectedDate(date)}\n                            />\n                        </Grid>\n\n                        <Grid item xl className={classes.items}>\n                            <Controls.Button\n                                disabled={Loading===true? true : false}\n                                onClick={() => {\n                                    setLoading(true)\n                                    dispatch(numTransaccionesLocalesCDPAccion(selectedDate.toLocaleString(\"es-CL\")))\n                                        .then(() => dispatch(insertarLogsAccion(User[0].Username, \"Status Tienda\", 1, `Fecha de busqueda: ${selectedDate.toLocaleString(\"es-CL\").substring(0, 10)}`)))\n                                        .then(() => setLoading(false))\n                                }}\n                                text=\"Refrescar\"\n                            />\n\n\n                        </Grid>\n\n                    </Grid>\n                </Accordion>\n\n                <Table className={classes.table} stickyHeader aria-label=\"simple table\" size='small'>\n                    <TableHead>\n                        <TableRow>\n                            {\n                                Head.map(item => (\n                                    <TableCell align=\"center\" >{item}</TableCell>\n                                ))\n                            }\n                        </TableRow>\n                    </TableHead>\n\n\n                    <TableBody>\n                        {\n                            Loading === false ?\n                                statusLocalesCDP.map((item, id) => (\n                                    <TableRow component=\"tr\" key={id}>\n                                        <TableCell component=\"td\">{item.CodSAP}</TableCell>\n                                        <TableCell component=\"td\" align=\"center\">{item.Local}</TableCell>\n                                        <TableCell component=\"td\" align=\"center\">{item.TotalSGV}</TableCell>\n                                        <TableCell component=\"td\" align=\"center\">{item.TotalCDP}</TableCell>\n                                        <TableCell component=\"td\" align=\"center\">{item.TotalSGV === item.TotalCDP ? '‚úÖ' : '‚ùå'}</TableCell>\n                                        <TableCell component=\"td\" align=\"center\">{item.interfaces}</TableCell>\n                                        <TableCell component=\"td\" align=\"center\">{item.LoteTeradata}</TableCell>\n                                    </TableRow>\n                                ))\n                                :\n                                <TableRow>\n                                    <TableCell align=\"center\" colSpan={Head.length}>\n                                        <div className={classes.loading}>\n                                            <CircularProgress className={classes.itemLoading} />\n                                            <span>Cargando ...</span>\n                                        </div>\n                                    </TableCell>\n                                </TableRow>\n\n                        }\n                    </TableBody>\n\n                </Table>\n            </TableContainer>\n            {\n                <Controls.Notification\n                    notify={notify}\n                    setNotify={setNotify}\n                />\n            }\n        </ContainerBox>\n    )\n}\n","import React, { useEffect, useState } from 'react'\n\n//css\nimport { makeStyles } from '@material-ui/core';\n\n//material-ui widget\nimport { Grid, Typography } from '@material-ui/core';\n\n//Efecto loading\nimport CircularProgress from '@material-ui/core/CircularProgress';\n\n// Tabla de datos\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableContainer from '@material-ui/core/TableContainer';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport Paper from '@material-ui/core/Paper';\n\n\nimport { InputLabel, MenuItem, Select } from '@material-ui/core';\n\n//componentes.\nimport { ContainerBox } from '../../components/MainContainer';\nimport { Accordion } from '../../components/Accordion';\n\nimport { Controls } from '../../components/controls/Controls';\n\n// Conexion API\nimport { useDispatch, useSelector } from 'react-redux';\nimport { transaccionesSGVAccion } from '../../redux/transaccionesSGVDucks';\nimport { obtenerTiendasEasyAccion } from '../../redux/tiendasEasyDucks';\nimport { insertarLogsAccion } from '../../redux/logsDucks';\n\nconst useStyles = makeStyles((theme) => ({\n    title: {\n        color: 'black',\n        padding: theme.spacing(2),\n    },\n    table: {\n        minWidth: 650,\n    },\n    items: {\n        padding: theme.spacing(2),\n        margin: theme.spacing(2),\n        textAlign: \"center\"\n    },\n    container: {\n        maxHeight: 580,\n    },\n    loading: {\n        display: 'flex',\n        flexDirection: 'column',\n        alignItems: \"center\",\n    },\n    itemLoading: {\n        margin: theme.spacing(2)\n    }\n}));\n\nconst Head = [\n    'IdTLogHeader', 'IdTlogDetail', 'Fecha Trx',\n    'Tienda', 'Nombre Tienda',\n    'Terminal', 'Transnun',\n    'Monto', 'Folio',\n    'Tipo DTE', 'Canal venta'\n]\n\nexport const DetalleDocSGV = () => {\n    const classes = useStyles();\n\n    const dispatch = useDispatch();\n    const [selectedDate, setSelectedDate] = useState(new Date());\n\n    const [IdTLogHeader, setIdTLogHeader] = useState('');\n    const [IdTlogDetail, setIdTlogDetail] = useState('');\n    const [Terminal, setTerminal] = useState('');\n    const [NumTransaccion, setNumTransaccion] = useState('');\n    const [Folio, setFolio] = useState('');\n\n    const [Local, setLocal] = useState('');\n    const [TipoDTE, setTipoDTE] = useState('');\n    const [CanalVTA, setCanalVTA] = useState('');\n    const [Loading, setLoading] = useState(false);\n    const [notify, setNotify] = useState({ isOpen: false, message: '', type: '' });\n\n    const handleReset = () => {\n        setSelectedDate(new Date());\n        setIdTLogHeader('');\n        setIdTlogDetail('');\n        setTerminal('');\n        setNumTransaccion('');\n        setFolio('');\n        setLocal('')\n        setTipoDTE('')\n        setCanalVTA('')\n    }\n\n    const handleSubmit = () => {\n        if (Local === '') {\n            setNotify({\n                isOpen: true,\n                message: \"Debe elegir un local\",\n                type: \"error\"\n            })\n            return\n        }\n\n        try {\n            setLoading(true)\n            dispatch(transaccionesSGVAccion(IdTLogHeader, IdTlogDetail, Terminal, NumTransaccion, Folio, selectedDate.toLocaleString(\"es-CL\"), Local, TipoDTE, CanalVTA))\n                .then(() => dispatch(insertarLogsAccion(User[0].Username, \"Detalle de documentos\", 1, `Local ${Local} y Fecha ${selectedDate.toLocaleString(\"es-CL\").substring(0, 10)}`)))\n                .then(() => setLoading(false))\n        } catch (error) {\n            console.log(error)\n        }\n    }\n\n    const User = useSelector(store => store.auth.user);\n    const transaccionesSGV = useSelector(store => store.transaccionesSGV.array);\n    const tiendasEasy = useSelector(store => store.tiendasEasy.array);\n\n    useEffect(() => {\n        setLoading(true)\n        dispatch(obtenerTiendasEasyAccion())\n            .then(() => setLoading(false))\n    }, [dispatch])\n\n    return (\n        <ContainerBox>\n            <Typography variant='h3' align='center' className={classes.title}>\n                Detalle de documentos\n            </Typography>\n\n            <TableContainer component={Paper} className={classes.container}>\n                <Accordion>\n                    <Grid container direction=\"row\" alignItems=\"flex-end\" spacing={2}>\n\n                        <Grid item xs={2} sm={2} md={2} lg={2} xl={2} className={classes.items}>\n                            <Controls.Input\n                                id=\"IdTLogHeader\"\n                                label=\"IdTLogHeader\"\n                                onChange={e => setIdTLogHeader(e.target.value)}\n                                value={IdTLogHeader}\n                            />\n                        </Grid>\n\n                        <Grid item xs={2} sm={2} md={2} lg={2} xl={2} className={classes.items}>\n                            <Controls.Input\n                                id=\"IdTlogDetail\"\n                                label=\"IdTlogDetail\"\n                                onChange={e => setIdTlogDetail(e.target.value)}\n                                value={IdTlogDetail}\n                            />\n                        </Grid>\n\n                        <Grid item xs={2} sm={2} md={2} lg={2} xl={2} className={classes.items}>\n                            <Controls.Input\n                                id=\"Terminal\"\n                                label=\"Terminal\"\n                                onChange={e => setTerminal(e.target.value)}\n                                value={Terminal}\n                            />\n                        </Grid>\n\n                        <Grid item xs={2} sm={2} md={2} lg={2} xl={2} className={classes.items}>\n                            <Controls.Input\n                                id=\"Numero Transaccion\"\n                                label=\"Numero Transaccion\"\n                                onChange={e => setNumTransaccion(e.target.value)}\n                                value={NumTransaccion}\n                            />\n                        </Grid>\n\n                        <Grid item xs={2} sm={2} md={2} lg={2} xl={2} className={classes.items}>\n                            <Controls.Input\n                                id=\"Folio\"\n                                label=\"Folio\"\n                                onChange={e => setFolio(e.target.value)}\n                                value={Folio}\n                            />\n                        </Grid>\n\n                        <Grid item xs={2} sm={2} md={2} lg={2} xl={2} className={classes.items}>\n                            <Controls.DatePicker\n                                id=\"fecha\"\n                                value={selectedDate}\n                                onChange={date => setSelectedDate(date)}\n                            />\n                        </Grid>\n\n                        <Grid item xs={4} sm={4} md={4} lg={3} xl={2} className={classes.items}>\n                            <InputLabel shrink id=\"demo-simple-select-placeholder-label-label\">\n                                Elija la tienda Easy\n                                </InputLabel>\n                            <Select\n                                labelId=\"demo-simple-select-placeholder-label-label\"\n                                id=\"demo-simple-select-placeholder-label\"\n                                value={Local}\n                                onChange={event => setLocal(event.target.value)}\n                                displayEmpty\n                                className={classes.selectEmpty}\n                            >\n                                <MenuItem key={0} value=''>Ninguno</MenuItem>\n                                {tiendasEasy.map((item) => (\n                                    <MenuItem key={item.CodSAP} value={item.CodSAP}>{item.CodSAP + \" - \" + item.Local}</MenuItem>\n                                ))}\n                            </Select>\n                        </Grid>\n                        <Grid item xs={2} sm={2} md={3} lg={2} xl={2} className={classes.items}>\n                            <InputLabel shrink id=\"demo-simple-select-placeholder-label-label\">\n                                Elija el tipo de DTE\n                                    </InputLabel>\n                            <Select\n                                labelId=\"demo-simple-select-placeholder-label-label\"\n                                id=\"demo-simple-select-placeholder-label\"\n                                value={TipoDTE}\n                                onChange={event => setTipoDTE(event.target.value)}\n                                displayEmpty\n                                className={classes.selectEmpty}\n                            >\n                                <MenuItem key={0} value={''}>Ninguno</MenuItem>\n                                <MenuItem key={1} value={1}>Boleta</MenuItem>\n                                <MenuItem key={3} value={2}>Factura</MenuItem>\n                                <MenuItem key={4} value={3}>Nota de cr√©dito</MenuItem>\n                            </Select>\n                        </Grid>\n                        <Grid item xs={2} sm={2} md={3} lg={2} xl={2} className={classes.items}>\n                            <InputLabel shrink id=\"demo-simple-select-placeholder-label-label\">\n                                Elija canal de venta\n                                    </InputLabel>\n                            <Select\n                                labelId=\"demo-simple-select-placeholder-label-label\"\n                                id=\"demo-simple-select-placeholder-label\"\n                                value={CanalVTA}\n                                onChange={event => setCanalVTA(event.target.value)}\n                                displayEmpty\n                                className={classes.selectEmpty}\n                            >\n                                <MenuItem value={''}>Ninguno</MenuItem>\n                                <MenuItem value={1}>VTASS Presencial</MenuItem>\n                                <MenuItem value={2}>VTASS</MenuItem>\n                                <MenuItem value={3}>MEXS</MenuItem>\n                                <MenuItem value={4}>WASE</MenuItem>\n                            </Select>\n                        </Grid>\n\n                        <Grid item xs={1} sm={1} md={1} lg={1} xl={1} className={classes.items}>\n                            <Controls.Button\n                                onClick={() => handleSubmit()}\n                                text=\"Buscar\"\n                            />\n                        </Grid>\n\n                        <Grid item xs={1} sm={1} md={1} lg={1} xl={1} className={classes.items}>\n                            <Controls.Button\n                                onClick={() => handleReset()}\n                                text=\"Reset\"\n                            />\n                        </Grid>\n\n                        <Grid item xs={2} sm={2} md={2} lg={2} xl={2} className={classes.items}>\n                            <Controls.ToExcel\n                                id=\"exportarTabla\"\n                                table=\"TablaDetalleSGV\"\n                                filename={`DetalleDocSGV${selectedDate.toLocaleString(\"es-CL\").substring(0, 10)}`}\n                                sheet=\"Datos\"\n                                text=\"Exportar a Excel\"\n                            />\n                        </Grid>\n\n                    </Grid>\n                </Accordion>\n\n\n                <Table className={classes.table} stickyHeader aria-label=\"simple table\" size='small' id=\"TablaDetalleSGV\">\n                    <TableHead>\n                        <TableRow>\n                            {\n                                Head.map(item => (\n                                    <TableCell align=\"center\" >{item}</TableCell>\n                                ))\n                            }\n                        </TableRow>\n                    </TableHead>\n\n\n                    <TableBody>\n                        {\n                            Loading === false ?\n                                transaccionesSGV.length > 0 ?\n                                    transaccionesSGV.map((transaccion, id) => (\n                                        <TableRow key={id} component=\"tr\">\n\n                                            {\n                                                Object.keys(transaccion).map((oneKey, i) => (\n\n                                                    <TableCell key={i} align=\"center\" >\n                                                        {transaccion[oneKey]}\n                                                    </TableCell>\n                                                ))\n                                            }\n\n                                        </TableRow>\n                                    ))\n                                    :\n                                    <TableRow>\n                                        <TableCell align=\"center\" colSpan={Head.length}>Sin registros</TableCell>\n                                    </TableRow>\n                                :\n                                <TableRow>\n                                    <TableCell align=\"center\" colSpan={Head.length}>\n                                        <div className={classes.loading}>\n                                            <CircularProgress className={classes.itemLoading} />\n                                            <span>Cargando ...</span>\n                                        </div>\n                                    </TableCell>\n                                </TableRow>\n                        }\n                    </TableBody>\n                </Table>\n            </TableContainer>\n            {\n                <Controls.Notification\n                    notify={notify}\n                    setNotify={setNotify}\n                />\n            }\n        </ContainerBox>\n    )\n}","import React, { useState } from 'react'\n\n//css\nimport { makeStyles } from '@material-ui/core';\n\nimport { Typography, Grid } from '@material-ui/core';\n\n//Efecto loading\nimport CircularProgress from '@material-ui/core/CircularProgress';\n\n// Tabla de datos\nimport {\n    TableContainer,\n    Paper,\n    Table,\n    TableHead,\n    TableBody,\n    TableRow,\n    TableCell\n} from '@material-ui/core';\n\n//Importamos componentes.\nimport { ContainerBox } from '../../components/MainContainer';\nimport { Accordion } from '../../components/Accordion';\n\n//Controls\nimport { Controls } from '../../components/controls/Controls';\n\n//API\nimport { useDispatch, useSelector } from 'react-redux';\nimport { consultaTranxSinFolioAccion } from '../../redux/ConsultaTranxSinFolioDucks';\nimport { insertarLogsAccion } from '../../redux/logsDucks';\n\nconst useStyles = makeStyles((theme) => ({\n    title: {\n        color: 'black',\n        padding: theme.spacing(2)\n    },\n    table: {\n        minWidth: 650,\n    },\n    items: {\n        padding: theme.spacing(4),\n        margin: theme.spacing(2),\n    },\n    container: {\n        maxHeight: 550,\n    },\n    loading: {\n        display: 'flex',\n        flexDirection: 'column',\n        alignItems: \"center\",\n    },\n    itemLoading: {\n        margin: theme.spacing(2)\n    }\n}));\n\nconst Head = ['TLogHeader', 'IdTlogDetail', 'Sucursal', 'Fecha', 'Terminal', 'Transaccion', 'Monto']\n\nexport const ConsultaTranxSinFolio = () => {\n    const classes = useStyles();\n\n    const dispatch = useDispatch();\n    const [FechaIni, setFechaIni] = useState(new Date());\n    const [FechaFin, setFechaFin] = useState(new Date());\n    const [Loading, setLoading] = useState(false);\n\n    const User = useSelector(store => store.auth.user);\n    const consultaTranxSinFolio = useSelector(store => store.consultaTranxSinFolio.array);\n\n    const formatterPesosCL = new Intl.NumberFormat(\"es-CL\", {\n        style: 'currency',\n        currency: 'CLP'\n    })\n\n    return (\n        <ContainerBox>\n            <Typography variant='h3' align='center' className={classes.title}>\n                Consulta de Transacciones Sin Folio\n            </Typography>\n\n            <TableContainer component={Paper}>\n\n                <Accordion>\n                    <Grid container alignItems=\"flex-end\" spacing={2}>\n\n                        <Grid item xl className={classes.items}>\n                            <Controls.DatePicker\n                                id=\"fechaIni\"\n                                value={FechaIni}\n                                onChange={date => setFechaIni(date)}\n                            />\n                        </Grid>\n\n                        <Grid item xl className={classes.items}>\n                            <Controls.DatePicker\n                                id=\"fechaFin\"\n                                value={FechaFin}\n                                onChange={date => setFechaFin(date)}\n                            />\n                        </Grid>\n\n                        <Grid item xl className={classes.items}>\n                            <Controls.Button\n                                onClick={() => {\n                                    setLoading(true)\n                                    dispatch(consultaTranxSinFolioAccion(FechaIni.toLocaleString(\"es-CL\"), FechaFin.toLocaleString(\"es-CL\")))\n                                        .then(() => dispatch(insertarLogsAccion(User[0].Username, \"Consulta de Transacciones Sin Folio\", 1, `Rango de Fechas: ${FechaIni.toLocaleString(\"es-CL\").substring(0, 10)} / ${FechaFin.toLocaleString(\"es-CL\").substring(0, 10)}`)))\n                                        .then(() => setLoading(false))\n                                }}\n                                text=\"Buscar\"\n                            />\n                        </Grid>\n\n                        <Grid item xl className={classes.items} >\n                            <Controls.ToExcel\n                                id=\"exportarTabla\"\n                                table=\"TablaTranxSinFolio\"\n                                filename={`TranxSinFolio_${FechaIni.toLocaleString(\"es-CL\").substring(0, 10).replace(/-/g, '')}-${FechaFin.toLocaleString(\"es-CL\").substring(0, 10).replace(/-/g, '')}`}\n                                sheet=\"Datos\"\n                                text=\"Exportar a Excel\"\n                            />\n                        </Grid>\n\n                    </Grid>\n                </Accordion>\n\n                <Table className={classes.table} stickyHeader aria-label=\"simple table\" size=\"small\" id=\"TablaTranxSinFolio\">\n                    <TableHead>\n                        <TableRow>\n                            {\n                                Head.map(item => (\n                                    <TableCell align=\"center\" >{item}</TableCell>\n                                ))\n                            }\n                        </TableRow>\n                    </TableHead>\n\n                    <TableBody>\n                        {\n                            Loading === false ?\n                                consultaTranxSinFolio.length > 0 ?\n                                    consultaTranxSinFolio.map((item, id) => (\n                                        <TableRow key={id}>\n                                            <TableCell align=\"center\" >{item.TLogHeader}</TableCell>\n                                            <TableCell align=\"center\" >{item.IdTlogDetail}</TableCell>\n                                            <TableCell align=\"center\" >{item.Sucursal}</TableCell>\n                                            <TableCell align=\"center\" >{item.Fecha}</TableCell>\n                                            <TableCell align=\"center\" >{item.Terminal}</TableCell>\n                                            <TableCell align=\"center\" >{item.Transaccion}</TableCell>\n                                            <TableCell align=\"center\" >{formatterPesosCL.format(item.Monto)}</TableCell>\n                                        </TableRow>\n                                    ))\n                                    :\n                                    <TableRow>\n                                        <TableCell align=\"center\" colSpan={Head.length}>Sin registros</TableCell>\n                                    </TableRow>\n                                :\n                                <TableRow>\n                                    <TableCell align=\"center\" colSpan={Head.length}>\n                                        <div className={classes.loading}>\n                                            <CircularProgress className={classes.itemLoading} />\n                                            <span>Cargando ...</span>\n                                        </div>\n                                    </TableCell>\n                                </TableRow>\n                        }\n                    </TableBody>\n                </Table>\n            </TableContainer>\n        </ContainerBox>\n    )\n}","import React, { useState } from 'react'\n\n//css\nimport { makeStyles } from '@material-ui/core';\n\nimport { Typography, Grid } from '@material-ui/core';\n\n//Efecto loading\nimport CircularProgress from '@material-ui/core/CircularProgress';\n\n//Table\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableContainer from '@material-ui/core/TableContainer';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport Paper from '@material-ui/core/Paper';\n\n//Importamos componentes.\nimport { ContainerBox } from '../../components/MainContainer';\nimport { Accordion } from '../../components/Accordion';\n\n//Controls\nimport { Controls } from '../../components/controls/Controls';\n\n//API\nimport { useDispatch, useSelector } from 'react-redux';\nimport { consultaTranxMEXSAccion } from '../../redux/ConsultaTranxMEXSDucks';\nimport { insertarLogsAccion } from '../../redux/logsDucks';\n\nconst useStyles = makeStyles((theme) => ({\n    title: {\n        color: 'black',\n        padding: theme.spacing(2)\n    },\n    table: {\n        minWidth: 650,\n    },\n    items: {\n        padding: theme.spacing(4),\n        margin: theme.spacing(2),\n    },\n    container: {\n        maxHeight: 550,\n    },\n    loading: {\n        display: 'flex',\n        flexDirection: 'column',\n        alignItems: \"center\",\n    },\n    itemLoading: {\n        margin: theme.spacing(2)\n    }\n}));\n\nconst Head = ['Local', 'Fecha', 'Terminal', 'Transaccion', 'Folio', 'Tipo Transaccion', 'Monto Total', 'Tipo DTE', 'Canal', 'N¬∫ Pedido']\n\nexport const ConsultaTranxMEXS = () => {\n    const classes = useStyles();\n\n    const dispatch = useDispatch();\n    const [FechaIni, setFechaIni] = useState(new Date());\n    const [FechaFin, setFechaFin] = useState(new Date());\n    const [Loading, setLoading] = useState(false);\n\n    const User = useSelector(store => store.auth.user);\n    const consultaTranxMEXS = useSelector(store => store.consultaTranxMEXS.array);\n\n    //const formatterPesosCL = new Intl.NumberFormat(\"es-CL\", {\n    //    style: 'currency',\n    //    currency: 'CLP'\n    //})\n\n    return (\n        <ContainerBox>\n            <Typography variant='h3' align='center' className={classes.title}>\n                Consulta de Transacciones MEXS\n            </Typography>\n\n            <TableContainer component={Paper} className={classes.container}>\n\n                <Accordion>\n                    <Grid container alignItems=\"flex-end\" spacing={2}>\n\n                        <Grid item xl className={classes.items}>\n                            <Controls.DatePicker\n                                id=\"fechaIni\"\n                                value={FechaIni}\n                                onChange={date => setFechaIni(date)}\n                            />\n                        </Grid>\n\n                        <Grid item xl className={classes.items}>\n                            <Controls.DatePicker\n                                id=\"fechaFin\"\n                                value={FechaFin}\n                                onChange={date => setFechaFin(date)}\n                            />\n                        </Grid>\n\n                        <Grid item xl className={classes.items}>\n                            <Controls.Button\n                                onClick={() => {\n                                    setLoading(true)\n                                    dispatch(consultaTranxMEXSAccion(FechaIni.toLocaleString(\"es-CL\"), FechaFin.toLocaleString(\"es-CL\")))\n                                        .then(() => dispatch(insertarLogsAccion(User[0].Username, \"Consulta de Transacciones MEXS\", 1, `Rango de Fechas: ${FechaIni.toLocaleString(\"es-CL\").substring(0, 10)} / ${FechaFin.toLocaleString(\"es-CL\").substring(0, 10)}`)))\n                                        .then(() => setLoading(false))\n                                }}\n                                text=\"Buscar\"\n                            />\n                        </Grid>\n\n                        <Grid item xl className={classes.items} >\n                            <Controls.ToExcel\n                                id=\"exportarTabla\"\n                                table=\"TablaTranxMEXS\"\n                                filename={`TablaTranxMEXS_${FechaIni.toLocaleString(\"es-CL\").substring(0, 10).replace(/-/g, '')}-${FechaFin.toLocaleString(\"es-CL\").substring(0, 10).replace(/-/g, '')}`}\n                                sheet=\"Datos\"\n                                text=\"Exportar a Excel\"\n                            />\n                        </Grid>\n\n                    </Grid>\n                </Accordion>\n\n                <Table className={classes.table} stickyHeader aria-label=\"simple table\" size=\"small\" id=\"TablaTranxMEXS\">\n                    <TableHead>\n                        <TableRow>\n                            {\n                                Head.map(item => (\n                                    <TableCell align=\"center\" >{item}</TableCell>\n                                ))\n                            }\n                        </TableRow>\n                    </TableHead>\n\n                    <TableBody>\n                        {\n                            Loading === false ?\n                                consultaTranxMEXS.length > 0 ?\n                                    consultaTranxMEXS.map((row, id) => (\n                                        <TableRow key={id}>\n                                            {\n                                                Object.keys(row).map((oneKey, i) => (\n                                                    <TableCell key={i} align=\"center\" >\n                                                        {row[oneKey]}\n                                                    </TableCell>\n                                                ))\n                                            }\n                                        </TableRow>\n                                    ))\n                                    :\n                                    <TableRow>\n                                        <TableCell align=\"center\" colSpan={Head.length}>Sin registros</TableCell>\n                                    </TableRow>\n                                :\n                                <TableRow>\n                                    <TableCell align=\"center\" colSpan={Head.length}>\n                                        <div className={classes.loading}>\n                                            <CircularProgress className={classes.itemLoading} />\n                                            <span>Cargando ...</span>\n                                        </div>\n                                    </TableCell>\n                                </TableRow>\n                        }\n                    </TableBody>\n                </Table>\n            </TableContainer>\n        </ContainerBox >\n    )\n}","import React, { useEffect, useState } from 'react'\n\nimport { makeStyles } from '@material-ui/core';\n\nimport { Typography, Grid, InputLabel, MenuItem, Select } from '@material-ui/core';\n\n// Tabla de datos\nimport {\n    TableContainer,\n    Paper,\n    Table,\n    TableHead,\n    TableBody,\n    TableRow,\n    TableCell\n} from '@material-ui/core';\n\n//Efecto loading\nimport CircularProgress from '@material-ui/core/CircularProgress';\n\n//Importamos componentes.\nimport { ContainerBox } from '../../components/MainContainer';\nimport { Accordion } from '../../components/Accordion';\n\n//Controls\nimport { Controls } from '../../components/controls/Controls';\n\n//API\nimport { useDispatch, useSelector } from 'react-redux';\nimport { totalesCDPAccion } from '../../redux/totalCDPDucks';\nimport { obtenerTiendasEasyAccion } from '../../redux/tiendasEasyDucks';\nimport { insertarLogsAccion } from '../../redux/logsDucks';\n\nconst Head = ['Tienda', 'Fecha', 'Canal', 'Total bruto', 'Cant. Trx']\n\nconst useStyles = makeStyles((theme) => ({\n    title: {\n        color: 'black',\n        padding: theme.spacing(2)\n    },\n    table: {\n        minWidth: 650,\n    },\n    items: {\n        padding: theme.spacing(4),\n        margin: theme.spacing(2),\n    },\n    container: {\n        maxHeight: 550,\n    },\n    loading: {\n        display: 'flex',\n        flexDirection: 'column',\n        alignItems: \"center\",\n    },\n    itemLoading: {\n        margin: theme.spacing(2)\n    }\n}));\n\nexport const TotalesCDP = () => {\n    const classes = useStyles();\n\n    const dispatch = useDispatch();\n    const [selectedDate, setSelectedDate] = useState(new Date());\n    const [Local, setLocal] = useState('');\n    const [Loading, setLoading] = useState(false);\n    const [notify, setNotify] = useState({ isOpen: false, message: '', type: '' });\n    \n    const User = useSelector(store => store.auth.user);\n    const totalCDP = useSelector(store => store.totalesCDP);\n    const tiendasEasy = useSelector(store => store.tiendasEasy.array);\n\n    const handleSubmit = (Local, selectedDate) => {\n        setLoading(true)\n        if (Local === '') {\n            setNotify({\n                isOpen: true,\n                message: \"Debe elegir un local\",\n                type: \"error\"\n            })\n            setLoading(false)\n            return\n        }\n\n        dispatch(totalesCDPAccion(Local, selectedDate.toLocaleString(\"es-CL\")))\n            .then(() => dispatch(insertarLogsAccion(User[0].Username, \"Totales CDP\", 1, `Local ${Local} y Fecha ${selectedDate.toLocaleString(\"es-CL\").substring(0, 10)}`)))\n            .then(() => setLoading(false))\n    }\n\n    // Cargamos la informacion cuando termina de \"pintarse los componentes\".\n    useEffect(() => {\n        setLoading(true)\n        dispatch(obtenerTiendasEasyAccion())\n            .then(() => setLoading(false))\n    }, [dispatch])\n\n    const formatterYenes = new Intl.NumberFormat(\"es-CL\", {\n        style: 'currency',\n        currency: 'CLP'\n    })\n\n    return (\n        <ContainerBox>\n            <Typography variant='h3' align='center' className={classes.title}>\n                Totales CDP\n            </Typography>\n\n            <TableContainer className={classes.container} component={Paper}>\n                <Accordion>\n                    <Grid container alignItems=\"flex-end\" spacing={2}>\n\n                        <Grid item xl className={classes.items}>\n                            <Controls.DatePicker\n                                id=\"fecha\"\n                                value={selectedDate}\n                                onChange={date => setSelectedDate(date)}\n                            />\n                        </Grid>\n\n                        <Grid item xl className={classes.items}>\n                            <InputLabel shrink id=\"demo-simple-select-placeholder-label-label\">\n                                Elija la tienda Easy\n                                        </InputLabel>\n                            <Select\n                                labelId=\"demo-simple-select-placeholder-label-label\"\n                                id=\"demo-simple-select-placeholder-label\"\n                                value={Local}\n                                onChange={event => setLocal(event.target.value)}\n                                displayEmpty\n                                className={classes.selectEmpty}\n                            >\n                                <MenuItem key={0} value=\"\">Ninguno</MenuItem>\n                                {tiendasEasy.map((item) => (\n                                    <MenuItem key={item.CodSAP} value={item.CodSAP}>{item.CodSAP + \" - \" + item.Local}</MenuItem>\n                                ))}\n                            </Select>\n                        </Grid>\n\n                        <Grid item xl className={classes.items}>\n                            <Controls.Button\n                                onClick={() => handleSubmit(Local, selectedDate)}\n                                text=\"Buscar\"\n                            />\n                        </Grid>\n\n                        <Grid item xl className={classes.items} >\n                            <Controls.ToExcel\n                                id=\"exportarTabla\"\n                                table=\"TablaCDPTotales\"\n                                filename={`TotalesCDP_${selectedDate.toLocaleString(\"es-CL\").substring(0, 10)}`}\n                                sheet=\"Datos\"\n                                text=\"Exportar a Excel\"\n                            />\n                        </Grid>\n                    </Grid>\n                </Accordion>\n\n                <Table className={classes.table} stickyHeader aria-label=\"simple table\" size=\"small\" id=\"TablaCDPTotales\">\n                    <TableHead>\n                        <TableRow>\n                            {\n                                Head.map(item => (\n                                    <TableCell align=\"left\" >{item}</TableCell>\n                                ))\n                            }\n                        </TableRow>\n                    </TableHead>\n\n\n                    <TableBody>\n                        {\n                            Loading === false ?\n                                totalCDP.array.length > 0 ?\n                                    totalCDP.array.map((item, id) => (\n                                        <TableRow key={id}>\n                                            <TableCell align=\"left\">{totalCDP.local}</TableCell>\n                                            <TableCell align=\"left\">{totalCDP.fecha}</TableCell>\n                                            <TableCell align=\"left\">{item.Canal}</TableCell>\n                                            <TableCell align=\"left\">{formatterYenes.format(item.TotalBruto)}</TableCell>\n                                            <TableCell align=\"left\">{item.TotTranx}</TableCell>\n                                        </TableRow>\n                                    ))\n\n                                    :\n                                    <TableRow>\n                                        <TableCell align=\"center\" colSpan={Head.length}>Sin registros</TableCell>\n                                    </TableRow>\n                                :\n                                <TableRow>\n                                    <TableCell align=\"center\" colSpan={Head.length}>\n                                        <div className={classes.loading}>\n                                            <CircularProgress className={classes.itemLoading} />\n                                            <span>Cargando ...</span>\n                                        </div>\n                                    </TableCell>\n                                </TableRow>\n                        }\n                    </TableBody>\n                </Table>\n            </TableContainer>\n            {\n                <Controls.Notification\n                    notify={notify}\n                    setNotify={setNotify}\n                />\n            }\n        </ContainerBox >\n    )\n}","import React from 'react'\n\nimport { makeStyles, Typography, Grid } from '@material-ui/core';\nimport CircularProgress from '@material-ui/core/CircularProgress';\n\n//Dialog\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\n\n\nimport Button from './controls/Button';\n\nconst useStyles = makeStyles((theme) => ({\n    loading: {\n        margin: theme.spacing(2),\n    },\n    button:{\n        margin: theme.spacing(0.8),\n    },\n    text: {\n        textAlign: \"center\"\n    },\n    icon: {\n        color: \"yellow\",\n        fontSize: \"200px\",\n        alignItems: \"center\"\n    },\n}));\n\nexport const DialogConfirmar = (props) => {\n    const classes = useStyles();\n\n    const handleCancel = () => {\n        props.setOpen(false);\n    }\n\n    return (\n        <Dialog open={props.open} onClose={() => handleCancel()} aria-labelledby=\"form-dialog-title\" maxWidth=\"sm\" >\n            {props.loading === false ?\n                <>\n                    <Grid container justify=\"center\" alignItems=\"center\">\n                        <Grid item xl>\n                            {<props.Icon className={classes.icon} />}\n                        </Grid>\n                    </Grid>\n                    <DialogContent>\n                        <Grid container justify=\"center\" alignItems=\"center\" className={classes.text}>\n\n                            <Grid item xl>\n                                <Typography variant=\"h5\" >\n                                    {props.title}\n                                </Typography>\n                            </Grid>\n\n                            <Grid item xl>\n                                <Typography variant=\"subtitle1\" >\n                                    {props.subtitle}\n                                </Typography>\n                            </Grid>\n\n                            <Grid>\n                                <Typography className={classes.existeInterfaz}>\n                                    {props.extra}\n                                </Typography>\n                            </Grid>\n                        </Grid>\n                    </DialogContent>\n\n                    <DialogActions>\n                        <Grid container justify=\"center\" alignItems=\"flex-end\">\n                            <Button\n                                color=\"secondary\"\n                                onClick={() => handleCancel()}\n                                text=\"Cancelar\"\n                                className={classes.button}\n                            />\n\n                            <Button\n                                onClick={props.onClick}\n                                text={props.confirmar}\n                                className={classes.button}\n                            />\n                        </Grid>\n                    </DialogActions>\n                </>\n                :\n                <div>\n                    {/* Loading */}\n                    <Grid container justify=\"center\" alignItems=\"center\">\n                        <CircularProgress className={classes.loading} />\n                    </Grid>\n                </div>}\n        </Dialog>\n    )\n}\n\n/*\n\n\nconst dispatch = useDispatch();\n    const [FechaActual, setFechaActual] = useState(new Date());\n\n    \n\n\n\n{ props.regenerarInterfazVTA ?\n                <>\n                    {props.regenerarInterfazVTA.existe === false ?\n                        <div className={classes.container}>\n                            <DialogTitle id=\"form-dialog-title\"> Regenerar Interfaz de venta</DialogTitle>\n                            <DialogContent >\n                                <DialogContentText>\n                                    ¬øEsta seguro que desea regenerar una Interfaz de venta?\n                                </DialogContentText>\n                            </DialogContent>\n                        </div>\n                        :\n                        <div className={classes.container}>\n                            <DialogTitle id=\"form-dialog-title\"> <span className={classes.warning}>WARNING</span> - Regenerar Interfaz de venta</DialogTitle>\n                            <DialogContent >\n                                <DialogContentText>\n                                    ¬°La interfaz para el local {props.Local} con fecha {props.Fecha.getFullYear()}-{props.Fecha.getMonth() + 1}-{props.Fecha.getDate()}, ya fue generada anteriormente por otro usuario!\n                                </DialogContentText>\n                                <Typography className={classes.existeInterfaz}>\n                                    {props.regenerarInterfazVTA.array[0].Username} {\" // \"} {props.regenerarInterfazVTA.array[0].FechaHora} {\" // \"}   {props.regenerarInterfazVTA.array[0].Accion} {\" // \"}    {props.regenerarInterfazVTA.array[0].Severity} {\" // \"}   {props.regenerarInterfazVTA.array[0].Extra}\n                                </Typography>\n                            </DialogContent>\n                        </div>\n                    }\n                    <DialogActions>\n\n                        <Grid container direction=\"row\" justify=\"flex-end\" alignItems=\"center\" spacing={2}>\n                            {props.regenerarInterfazVTA.existe === false ?\n                                <>\n                                    <Grid item xs={3} sm={3} md={3} lg={3} xl={3}>\n                                        <Button onClick={() => handleCancel()} variant=\"contained\" size=\"small\" color=\"secondary\" className={classes.button}>Cancelar</Button>\n                                    </Grid>\n                                    <Grid item xs={8} sm={8} md={8} lg={8} xl={8}>\n                                        <Button onClick={} variant=\"contained\" size=\"small\" className={classes.warning}>\n                                            <WarningIcon />\n                                            {\n                                                \"S√≠, deseo generar la interfaz\"\n                                            }\n                                        </Button>\n                                    </Grid>\n                                </>\n                                :\n                                <>\n                                    <Grid item xs={3} sm={3} md={2} lg={2} xl={2}>\n                                        <Button onClick={() => handleCancel()} variant=\"contained\" size=\"small\" color=\"secondary\" className={classes.button}>Cancelar</Button>\n                                    </Grid>\n                                    <Grid item xs={9} sm={7} md={7} lg={7} xl={7}>\n                                        <Button onClick={() => handleSubmit(props.Fecha, props.Local, props.Bandera, props.regenerarInterfazVTA.existe)} variant=\"contained\" size=\"small\" className={classes.warning}>\n                                            <WarningIcon /> {\"S√≠, deseo generar otra vez la interfaz de venta\"}\n                                        </Button>\n                                    </Grid>\n                                </>\n                            }\n                        </Grid>\n                    </DialogActions>\n                </>\n                :\n                <div className={classes.progress}>\n                    <CircularProgress />\n                </div>\n            }\n*/","import React, { useEffect, useState } from 'react'\n\n//css\nimport { makeStyles } from '@material-ui/core';\n\n//material-ui widget\nimport { Typography, Grid, InputLabel, MenuItem, Select } from '@material-ui/core';\n\n//Icons\nimport WarningIcon from '@material-ui/icons/Warning';\nimport CheckCircleIcon from '@material-ui/icons/CheckCircle';\nimport ErrorIcon from '@material-ui/icons/Error';\n\n//Controls\nimport { Controls } from '../../components/controls/Controls';\n\n//Importamos componentes.\nimport { ContainerBox } from '../../components/MainContainer';\nimport { DialogConfirmar } from '../../components/DialogConfirmar';\nimport { DialogAlert } from '../../components/DialogAlert';\n\n// Conexion API\nimport { useDispatch, useSelector } from 'react-redux';\nimport { obtenerTiendasEasyAccion } from '../../redux/tiendasEasyDucks';\nimport { excluirLocalAlarmaAccion } from '../../redux/excluyeLocalAlarmaDucks';\nimport { insertarLogsAccion } from '../../redux/logsDucks';\n\nconst useStyles = makeStyles((theme) => ({\n    title: {\n        color: 'black',\n        padding: theme.spacing(2),\n    },\n    table: {\n        minWidth: 650,\n    },\n    items: {\n        padding: theme.spacing(3),\n\n    },\n    container: {\n        background: \"white\",\n        border: '1px solid black',\n    },\n    button: {\n        color: 'white',\n        backgroundColor: '#7408A7',\n        '&:hover': {\n            backgroundColor: '#5F169B ',\n        },\n    },\n    successful: {\n        color: \"green\",\n        fontSize: \"200px\",\n        alignItems: \"center\"\n    },\n    error: {\n        color: \"red\",\n        fontSize: \"200px\",\n        alignItems: \"center\"\n    }\n}));\n\nexport const ExpluirTiendaAlarma = () => {\n    const classes = useStyles();\n\n    const dispatch = useDispatch();\n    const [Local, setLocal] = useState('');\n    const [open, setOpen] = useState(false);\n    const [openAlert, setAlert] = useState(false);\n    const [Loading, setLoading] = useState(false);\n    const [notify, setNotify] = useState({ isOpen: false, message: '', type: '' });\n\n    const tiendasEasy = useSelector(store => store.tiendasEasy.array);\n    const Status = useSelector(store => store.excluirLocalAlarma.Status);\n    const User = useSelector(store => store.auth.user);\n\n    const handleSubmit = (Local) => {\n        setLoading(true)\n        if (Local === '') {\n            setNotify({\n                isOpen: true,\n                message: \"Debe elegir un local\",\n                type: \"error\"\n            })\n            setLoading(false)\n            return\n        }\n\n        dispatch(excluirLocalAlarmaAccion(Local))\n            .then(() => dispatch(insertarLogsAccion(User[0].Username, \"Excluir Tienda Alarma\", 1, `Local ${Local}`)))\n            .then(() => {\n                setOpen(false)\n                setAlert(true)\n                setLoading(false)\n            })\n    }\n\n    useEffect(() => {\n        setLoading(true)\n        dispatch(obtenerTiendasEasyAccion())\n            .then(() => setLoading(false))\n    }, [dispatch])\n\n    return (\n        <ContainerBox>\n            <Typography variant='h3' align='center' className={classes.title}>\n                Excluir Tienda Alarma\n            </Typography>\n\n            <Grid container alignItems=\"flex-end\" className={classes.container}>\n\n                <Grid item xl={5} className={classes.items}>\n                    <Typography variant='h6'>\n                        Excluir tienda de alarma CDP:\n                    </Typography>\n                </Grid>\n\n                <Grid item xl={5} className={classes.items}>\n                    <InputLabel shrink id=\"demo-simple-select-placeholder-label-label\">\n                        Elija la tienda Easy\n                    </InputLabel>\n                    <Select\n                        labelId=\"demo-simple-select-placeholder-label-label\"\n                        id=\"demo-simple-select-placeholder-label\"\n                        value={Local}\n                        onChange={event => setLocal(event.target.value)}\n                        displayEmpty\n                        className={classes.selectEmpty}\n                    >\n                        <MenuItem key={0} value=\"\">Ninguno</MenuItem>\n                        {tiendasEasy.map((item) => (\n                            <MenuItem key={item.CodSAP} value={item.CodSAP}>{item.CodSAP + \" - \" + item.Local}</MenuItem>\n                        ))}\n                    </Select>\n                </Grid>\n                <Grid item xl={2} className={classes.items}>\n                    <Controls.Button\n                        onClick={() => setOpen(true)}\n                        text=\"Enviar\"\n                    />\n                </Grid>\n            </Grid>\n\n            <DialogConfirmar\n                setOpen={setOpen}\n                open={open}\n                loading={Loading}\n                Icon={WarningIcon}\n\n                title={\"Confirmaci√≥n\"}\n                subtitle={`¬øEsta seguro que desea excluir la tienda ${Local} de la alarma CDP?`}\n                onClick={() => handleSubmit(Local)}\n                confirmar={`S√≠, deseo excluir la tienda ${Local}`}\n            />\n\n            <DialogAlert\n                setOpen={setAlert}\n                open={openAlert}\n                loading={Loading}\n                Icon={Status === true ?\n                    CheckCircleIcon\n                    :\n                    ErrorIcon\n                }\n                IconColor={Status === true ?\n                    classes.successful\n                    :\n                    classes.error\n                }\n                title={Status === true ?\n                    \"Successful\"\n                    :\n                    \"Error\"\n                }\n                subtitle={Status === true ?\n                    `Se excluy√≥ correctamente la tienda ${Local} de las alarmas CDP`\n                    :\n                    \"Ocurri√≥ un error en la exclusi√≥n.\"\n                }\n                onClick={() => {\n                    setAlert(false);\n                }}\n            />\n\n            {\n                <Controls.Notification\n                    notify={notify}\n                    setNotify={setNotify}\n                />\n            }\n        </ContainerBox>\n    )\n}","import React, { useEffect, useState } from 'react'\n\n//Style\nimport { Grid, makeStyles } from '@material-ui/core';\n\n//Entradas\nimport { Controls } from '../../components/controls/Controls';\n\n//select\nimport InputLabel from '@material-ui/core/InputLabel';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport Select from '@material-ui/core/Select';\nimport FormControl from '@material-ui/core/FormControl';\n\nconst useStyles = makeStyles((theme) => ({\n    items: {\n        padding: theme.spacing(2),\n        margin: theme.spacing(2),\n    },\n    accion: {\n        marginLeft: theme.spacing(2),\n        marginBottom: theme.spacing(2),\n    },\n    progress: {\n        textAlign: \"center\",\n        margin: theme.spacing(2)\n    },\n}));\n\nconst optionsEamtran = [\"A\", \"B\", \"C\"]\n\nconst FormularioEAMTRAN = props => {\n    const classes = useStyles();\n\n    const [Tienda, setTienda] = useState('')\n    const [FechaFiscal, setFechaFiscal] = useState('')\n    const [Eamtran, setEamtran] = useState([]);\n    const [UltimoLote, setUltimoLote] = useState('')\n    const [FechaUltimoLote, setFechaUltimoLote] = useState('')\n    const [Status, setStatus] = useState('')\n\n    const handleSubmit = (e) => {\n        e.preventDefault()\n        props.EditeEamtran(Eamtran, UltimoLote, FechaUltimoLote, Tienda, FechaFiscal, props.data.FechaUltimoLote, Status)\n    }\n\n    useEffect(() => {\n\n        setTienda(props.data.IdLocalSAP)\n        setFechaFiscal(props.data.FechaFiscal)\n        setEamtran(props.data.Eamtran)\n        setUltimoLote(props.data.UltimoLote)\n        setFechaUltimoLote(props.data.FechaUltimoLote)\n        setStatus(props.data.Status)\n\n    }, [props.data])\n\n    return (\n        <form onSubmit={e => handleSubmit(e)}>\n\n            <Grid container justify=\"flex-start\" alignItems=\"flex-end\" spacing={2}>\n\n                <Grid item xl className={classes.items}>\n                    <Controls.Input\n                        autoFocus\n                        margin=\"dense\"\n                        id=\"Tienda\"\n                        label=\"Tienda\"\n                        onChange={e => setTienda(e.target.value)}\n                        value={Tienda}\n                    />\n                </Grid>\n\n                <Grid item xl className={classes.items}>\n                    <Controls.Input\n                        autoFocus\n                        margin=\"dense\"\n                        id=\"FechaFiscal\"\n                        label=\"Fecha Fiscal\"\n                        onChange={e => setFechaFiscal(e.target.value)}\n                        value={FechaFiscal}\n                    />\n                </Grid>\n\n                <Grid item xl className={classes.items}>\n                    <Controls.Input\n                        autoFocus\n                        margin=\"dense\"\n                        id=\"UltimoLote\"\n                        label=\"UltimoLote\"\n                        onChange={e => setUltimoLote(e.target.value)}\n                        value={UltimoLote}\n                    />\n                </Grid>\n\n                <Grid item xl className={classes.items}>\n                    <Controls.Input\n                        autoFocus\n                        margin=\"dense\"\n                        id=\"FechaUltimoLote\"\n                        label=\"FechaUltimoLote\"\n                        onChange={e => setFechaUltimoLote(e.target.value)}\n                        value={FechaUltimoLote}\n                    />\n                </Grid>\n\n                <Grid item xl className={classes.items}>\n                    <Controls.Input\n                        autoFocus\n                        margin=\"dense\"\n                        id=\"Status\"\n                        label=\"Status\"\n                        onChange={e => setStatus(e.target.value)}\n                        value={Status}\n                    />\n                </Grid>\n\n                <Grid item xl className={classes.items}>\n                    <FormControl>\n                        <InputLabel shrink>Eamtran</InputLabel>\n                        <Select\n                            id=\"Eamtran\"\n                            label=\"Eamtran\"\n                            value={Eamtran}\n                            onChange={event => setEamtran(event.target.value)}\n                            displayEmpty\n                        >\n                            {\n                                optionsEamtran.map((item, id) => (\n                                    <MenuItem key={id} value={item}>{item}</MenuItem>\n                                ))\n                            }\n                        </Select>\n                    </FormControl>\n                </Grid>\n\n            </Grid>\n\n            {/* Accion */}\n            <Grid container justify=\"flex-end\" alignItems=\"flex-end\" spacing={0}>\n                <div>\n                    <Controls.Button\n                        type=\"submit\"\n                        onSubmit={handleSubmit}\n                        text=\"Guardar\"\n                        className={classes.accion}\n                    />\n                </div>\n            </Grid>\n\n        </form>\n    )\n}\n\nexport default FormularioEAMTRAN;","import React, { useEffect, useState } from 'react'\n\n//css\nimport { IconButton, makeStyles } from '@material-ui/core';\n\n//material-ui widget\nimport { Typography, Select, MenuItem, InputLabel, Grid } from '@material-ui/core';\n\n// Tabla de datos\nimport {\n    TableContainer,\n    Paper,\n    Table,\n    TableHead,\n    TableBody,\n    TableRow,\n    TableCell\n} from '@material-ui/core';\n\n//Efecto loading\nimport CircularProgress from '@material-ui/core/CircularProgress';\n\n//Controls\nimport { Controls } from '../../components/controls/Controls';\n\n//Importamos componentes.\nimport { ContainerBox } from '../../components/MainContainer';\nimport { DialogEdit } from '../../components/DialogEdit'\nimport FormularioEAMTRAN from '../../pages/DetallesEAMTRAN/FormularioEAMTRAN';\nimport { Accordion } from '../../components/Accordion';\n\n//Icons\nimport EditIcon from '@material-ui/icons/Edit';\n\n//API\nimport { useDispatch, useSelector } from 'react-redux';\nimport { EAMTRANAccion, actualizarEAMTRANAccion } from '../../redux/EAMTRANDucks';\nimport { obtenerTiendasEasyAccion } from '../../redux/tiendasEasyDucks';\nimport { insertarLogsAccion } from '../../redux/logsDucks';\n\nconst useStyles = makeStyles((theme) => ({\n    title: {\n        color: 'black',\n        padding: theme.spacing(4)\n    },\n    table: {\n        minWidth: 550,\n    },\n    items: {\n        padding: theme.spacing(4),\n        margin: theme.spacing(2),\n    },\n    button: {\n        color: 'white',\n        backgroundColor: '#7408A7',\n        '&:hover': {\n            backgroundColor: '#5F169B ',\n        },\n    },\n    edit: {\n        color: '#ffc107'\n        //backgroundColor: '#ffc107',\n        //'&:hover': {\n        //    backgroundColor: '#ffc107 ',\n        //},\n    },\n    container: {\n        maxHeight: 500,\n    },\n    paper: {\n        width: '100%',\n    },\n    loading: {\n        display: 'flex',\n        flexDirection: 'column',\n        alignItems: \"center\",\n    },\n    itemLoading: {\n        margin: theme.spacing(2)\n    }\n}));\n\nconst Head = ['Tienda', 'Fecha fiscal', 'EAMTRAN', '√ôltimo lote', 'Fecha √πltimo lote', 'Status', 'Editar']\n\nexport const EAMTRAN = () => {\n    const classes = useStyles();\n\n    const dispatch = useDispatch();\n    const [selectedDate, setSelectedDate] = useState(new Date());\n    const [Local, setLocal] = useState('');\n    const [openEdite, setOpenEdite] = useState(false);\n\n    const [getData, setData] = useState(null);\n    const [Loading, setLoading] = useState(false);\n    const [notify, setNotify] = useState({ isOpen: false, message: '', type: '' });\n\n\n    const User = useSelector(store => store.auth.user);\n    const tiendasEasy = useSelector(store => store.tiendasEasy.array);\n    const EAMTRAN = useSelector(store => store.EAMTRAN);\n\n    const handleSubmit = (Local, selectedDate) => {\n        setLoading(true)\n        if (Local === '') {\n            setNotify({\n                isOpen: true,\n                message: \"Debe elegir un local\",\n                type: \"error\"\n            })\n            setLoading(false)\n            return\n        }\n\n        dispatch(EAMTRANAccion(Local, selectedDate.toLocaleString(\"es-CL\")))\n            .then(() => dispatch(insertarLogsAccion(User[0].Username, \"Detalles EAMTRAN por local\", 1, `B√∫squeda del Local ${Local} y Fecha ${selectedDate.toLocaleString(\"es-CL\").substring(0, 10)}`)))\n            .then(() => setLoading(false))\n    }\n\n    const EditeEamtran = (Eamtran, UltimoLote, FechaUltimoLote, Tienda, FechaFiscal, FechaUltimoLoteOriginal, Status) => {\n        setLoading(true)\n        dispatch(actualizarEAMTRANAccion(Eamtran, UltimoLote, FechaUltimoLote, Tienda, FechaFiscal, FechaUltimoLoteOriginal, Status))\n            .then(() => dispatch(insertarLogsAccion(User[0].Username, \"Detalles EAMTRAN por local\", 1, `Se edito  el Local ${Local} y Fecha ${selectedDate.toLocaleString(\"es-CL\").substring(0, 10)}`)))\n        setData(null);\n        dispatch(EAMTRANAccion(Local, selectedDate)).then(() => setLoading(false))\n    }\n\n    const handleClickOpenEdite = item => {\n        setData(EAMTRAN.array[item]);\n        setOpenEdite(true);\n    };\n\n    // Cargamos la informacion cuando termina de \"pintarse los componentes\".\n    useEffect(() => {\n        setLoading(true)\n        dispatch(obtenerTiendasEasyAccion())\n            .then(() => setLoading(false))\n    }, [dispatch])\n\n    return (\n        <ContainerBox>\n            <Typography variant='h3' align='center' className={classes.title}>\n                Detalles EAMTRAN por local\n            </Typography>\n\n            <TableContainer className={classes.container} component={Paper}>\n                <Accordion>\n                    <Grid container alignItems=\"flex-end\" spacing={2}>\n\n                        <Grid item xl className={classes.items}>\n                            <Controls.DatePicker\n                                id=\"fecha\"\n                                value={selectedDate}\n                                onChange={date => setSelectedDate(date)}\n                            />\n                        </Grid>\n\n                        <Grid item xl className={classes.items}>\n                            <InputLabel shrink id=\"demo-simple-select-placeholder-label-label\">\n                                Elija la tienda Easy\n                                </InputLabel>\n                            <Select\n                                labelId=\"demo-simple-select-placeholder-label-label\"\n                                id=\"demo-simple-select-placeholder-label\"\n                                value={Local}\n                                onChange={event => setLocal(event.target.value)}\n                                displayEmpty\n                                className={classes.selectEmpty}\n                            >\n                                <MenuItem key={0} value=\"\">Ninguno</MenuItem>\n                                {tiendasEasy.map((item) => (\n                                    <MenuItem key={item.CodSAP} value={item.CodSAP}>{item.CodSAP + \" - \" + item.Local}</MenuItem>\n                                ))}\n                            </Select>\n                        </Grid>\n\n                        <Grid item xl className={classes.items} >\n                            <Controls.Button\n                                onClick={() => handleSubmit(Local, selectedDate)}\n                                text=\"Buscar\"\n                            />\n                        </Grid>\n                    </Grid>\n                </Accordion>\n\n                <Table className={classes.table} stickyHeader aria-label=\"simple table\" size=\"small\">\n                    <TableHead>\n                        <TableRow>\n                            {\n                                Head.map(item => (\n                                    <TableCell align=\"center\" >{item}</TableCell>\n                                ))\n                            }\n                        </TableRow>\n                    </TableHead>\n                    <TableBody>\n                        {\n                            Loading === false ?\n                                EAMTRAN.array.length > 0 ?\n                                    EAMTRAN.array.map((item, id) => (\n                                        <TableRow key={id} component=\"tr\">\n                                            <TableCell align=\"center\" >{item.IdLocalSAP}</TableCell>\n                                            <TableCell align=\"center\" >{item.FechaFiscal.substring(0, 4) + '-' + item.FechaFiscal.substring(4, 6) + '-' + item.FechaFiscal.substring(6, 8)}</TableCell>\n                                            <TableCell align=\"center\" >{item.Eamtran}</TableCell>\n                                            <TableCell align=\"center\" >{item.UltimoLote}</TableCell>\n                                            <TableCell align=\"center\" >{item.FechaUltimoLote}</TableCell>\n                                            <TableCell align=\"center\" >{item.Status}</TableCell>\n                                            <TableCell align=\"center\" component=\"td\">\n                                                <IconButton variant=\"contained\" size=\"small\" className={classes.edit} onClick={() => handleClickOpenEdite(id)}> <EditIcon /> </IconButton>\n                                            </TableCell>\n                                        </TableRow>\n                                    ))\n                                    :\n                                    <TableRow>\n                                        <TableCell align=\"center\" colSpan={Head.length}>Sin registros</TableCell>\n                                    </TableRow>\n                                :\n                                <TableRow>\n                                    <TableCell align=\"center\" colSpan={Head.length}>\n                                        <div className={classes.loading}>\n                                            <CircularProgress className={classes.itemLoading} />\n                                            <span>Cargando ...</span>\n                                        </div>\n                                    </TableCell>\n                                </TableRow>\n                        }\n                    </TableBody>\n                </Table>\n            </TableContainer>\n\n            <DialogEdit\n                setOpen={setOpenEdite}\n                open={openEdite}\n                loading={Loading}\n                title={\"Editar EAMTRAN\"}\n                maxWidth=\"sm\"\n            >\n                <FormularioEAMTRAN\n                    data={getData}\n                    setData={setData}\n                    EditeEamtran={EditeEamtran}\n                />\n            </DialogEdit>\n\n            {\n                <Controls.Notification\n                    notify={notify}\n                    setNotify={setNotify}\n                />\n            }\n\n        </ContainerBox>\n    )\n}","import React, { useEffect, useState } from 'react'\n\n//css\nimport { makeStyles } from '@material-ui/core';\n\n//material-ui widget\nimport { lighten, Grid, Typography, Checkbox, InputLabel, MenuItem, Select } from '@material-ui/core';\n\n//alerta\nimport { Snackbar, Fade } from '@material-ui/core';\n\n// Tabla de datos\nimport {\n    TableContainer,\n    Paper,\n    Table,\n    TableHead,\n    TableBody,\n    TableRow,\n    TableCell\n} from '@material-ui/core';\n\n//Efecto loading\nimport CircularProgress from '@material-ui/core/CircularProgress';\n\n//Importamos componentes.\nimport { ContainerBox } from '../../components/MainContainer';\nimport { Accordion } from '../../components/Accordion';\n\nimport { Controls } from '../../components/controls/Controls';\n\n// Conexion API\nimport { useDispatch, useSelector } from 'react-redux';\nimport { obtenerTiendasEasyAccion } from '../../redux/tiendasEasyDucks';\nimport { obtenerTiposInterfacesAccion } from '../../redux/tiposInterfacesDucks';\nimport { obtenerTiposEstadosAccion } from '../../redux/tiposEstadosDucks';\nimport { obtenerInterfacesErrorTSAVAccion, reenviarInterfacesTSAVAccion } from '../../redux/InterfacesErrorTSAVDucks';\nimport { insertarLogsAccion } from '../../redux/logsDucks';\n\nconst useStyles = makeStyles((theme) => ({\n    title: {\n        color: 'black',\n        padding: theme.spacing(4),\n    },\n    button: {\n        color: 'white',\n        backgroundColor: '#7408A7',\n        '&:hover': {\n            backgroundColor: '#5F169B ',\n        },\n    },\n\n    table: {\n        minWidth: 650,\n    },\n    container: {\n        maxHeight: 550,\n    },\n    items: {\n        padding: theme.spacing(4),\n        margin: theme.spacing(2),\n    },\n    accordion: {\n        boxShadow: 'none',\n    },\n\n\n    //useToolbarStyles\n    rootToolbar: {\n        paddingLeft: theme.spacing(2),\n        paddingRight: theme.spacing(1),\n    },\n    highlight:\n        theme.palette.type === 'light'\n            ? {\n                color: theme.palette.secondary.main,\n                backgroundColor: lighten(theme.palette.secondary.light, 0.85),\n            }\n            : {\n                color: theme.palette.text.primary,\n                backgroundColor: theme.palette.secondary.dark,\n            },\n\n\n\n    //table\n    paper: {\n        width: '100%',\n        marginBottom: theme.spacing(2),\n    },\n    visuallyHidden: {\n        border: 0,\n        clip: 'rect(0 0 0 0)',\n        height: 1,\n        margin: -1,\n        overflow: 'hidden',\n        padding: 0,\n        position: 'absolute',\n        top: 20,\n        width: 1,\n    },\n\n    loading: {\n        display: 'flex',\n        flexDirection: 'column',\n        alignItems: \"center\",\n    },\n    itemLoading: {\n        margin: theme.spacing(2)\n    }\n}));\n\nconst Head = ['InterfaceQueueID', 'IdSucursal', 'TLogBusinessDate', 'Interfaz', 'Estado', 'Priority', 'Reprocesar']\n\nexport const InterfacesTSAV = () => {\n    const classes = useStyles();\n\n    const dispatch = useDispatch();\n    const [selected, setSelected] = useState([]);\n    const [selectedDate, setSelectedDate] = useState(new Date());\n    const [Local, setLocal] = useState('');\n    const [TipoInterfaz, setTipoInterfaz] = useState('');\n    const [Estado, setEstado] = useState('');\n    const [Loading, setLoading] = useState(false);\n    \n    const User = useSelector(store => store.auth.user);\n\n\n    const isSelected = (name) => selected.indexOf(name) !== -1;\n\n    const handleBuscar = (selectedDate, Local, TipoInterfaz, Estado) => {\n        setLoading(true)\n        dispatch(obtenerInterfacesErrorTSAVAccion(selectedDate.toLocaleString(\"es-CL\"), Local, TipoInterfaz, Estado))\n        .then(() => dispatch(insertarLogsAccion(User[0].Username, \"Administraci√≥n de interfaces TSAV\", 1, `Local ${Local === ''? '\"Ninguno\"':Local} y Fecha ${selectedDate.toLocaleString(\"es-CL\").substring(0, 10)}`)))\n            .then(() => setLoading(false))\n    }\n\n    const handleSubmit = () => {\n        setLoading(true)\n\n        selected.forEach(n => (\n            dispatch(reenviarInterfacesTSAVAccion(interfacesErrorTSAV[n].InterfaceQueueID))\n        ))\n\n        dispatch(obtenerInterfacesErrorTSAVAccion(selectedDate.toLocaleString(\"es-CL\"), Local, TipoInterfaz, Estado))\n            .then(() => dispatch(insertarLogsAccion(User[0].Username, \"Administraci√≥n de interfaces TSAV\", 1, `Reenvio de interfaces`)))\n            .then(() => {\n                setSelected([])\n                setLoading(false)\n            })\n    }\n\n    const handleSelectAllClick = (event) => {\n        if (event.target.checked) {\n            const newSelecteds = interfacesErrorTSAV.map((n, id) => id);\n            setSelected(newSelecteds);\n            return;\n        }\n        setSelected([]);\n    };\n\n    const handleClick = (event, name) => {\n        const selectedIndex = selected.indexOf(name);\n        let newSelected = [];\n\n        if (selectedIndex === -1) {\n            newSelected = newSelected.concat(selected, name);\n        } else if (selectedIndex === 0) {\n            newSelected = newSelected.concat(selected.slice(1));\n        } else if (selectedIndex === selected.length - 1) {\n            newSelected = newSelected.concat(selected.slice(0, -1));\n        } else if (selectedIndex > 0) {\n            newSelected = newSelected.concat(\n                selected.slice(0, selectedIndex),\n                selected.slice(selectedIndex + 1),\n            );\n        }\n\n        setSelected(newSelected);\n    };\n\n    const tiendasEasy = useSelector(store => store.tiendasEasy.array);\n    const tiposInterfaces = useSelector(store => store.tiposInterfaces.array)\n    const tiposEstados = useSelector(store => store.tiposEstados.array)\n    const interfacesErrorTSAV = useSelector(store => store.interfacesErrorTSAV.datos);\n\n    // Cargamos la informacion cuando termina de \"pintarse los componentes\".\n    useEffect(() => {\n        setLoading(true)\n        dispatch(obtenerTiendasEasyAccion())\n            .then(() => dispatch(obtenerTiposInterfacesAccion()))\n            .then(() => dispatch(obtenerTiposEstadosAccion()))\n            .then(() => setLoading(false))\n    }, [dispatch])\n\n    return (\n        <ContainerBox>\n            <Typography variant='h3' align='center' className={classes.title}>\n                Administraci√≥n de interfaces TSAV\n                </Typography>\n\n            {\n                selected.length > 0 ?\n                    <Snackbar\n                        open={true}\n                        TransitionComponent={Fade}\n                        autoHideDuration={1000}\n                        anchorOrigin={{\n                            vertical: 'bottom',\n                            horizontal: 'left',\n                        }}\n                        message={`${selected.length} seleccionadas`}\n                        key={`${selected.length}`}\n                    />\n                    :\n                    null\n            }\n\n            <TableContainer component={Paper} className={classes.container}>\n\n\n                <Accordion>\n                    <Grid container alignItems=\"flex-end\" spacing={2}>\n\n                        <Grid item xs={6} sm={3} md={3} lg={2} xl={2} className={classes.items}>\n                            <Controls.DatePicker\n                                id=\"fecha\"\n                                value={selectedDate}\n                                onChange={date => setSelectedDate(date)}\n                            />\n                        </Grid>\n\n                        <Grid item xs={6} sm={4} md={4} lg={3} xl={2} className={classes.items}>\n                            <InputLabel shrink id=\"demo-simple-select-placeholder-label-label\">\n                                Elija la tienda Easy\n                                        </InputLabel>\n                            <Select\n                                labelId=\"demo-simple-select-placeholder-label-label\"\n                                id=\"demo-simple-select-placeholder-label\"\n                                value={Local}\n                                onChange={event => setLocal(event.target.value)}\n                                displayEmpty\n                                className={classes.selectEmpty}\n                            >\n                                <MenuItem key={0} value=\"\">Ninguno</MenuItem>\n                                {tiendasEasy.map((item) => (\n                                    <MenuItem key={item.CodSAP} value={item.CodSAP}>{item.CodSAP + \" - \" + item.Local}</MenuItem>\n                                ))}\n                            </Select>\n                        </Grid>\n\n                        <Grid item xs={6} sm={3} md={3} lg={3} xl={2} className={classes.items}>\n                            <InputLabel shrink id=\"demo-simple-select-placeholder-label-label\">\n                                Elija el tipo de interfaz\n                                </InputLabel>\n                            <Select\n                                labelId=\"demo-simple-select-placeholder-label-label\"\n                                id=\"demo-simple-select-placeholder-label\"\n                                value={TipoInterfaz}\n                                onChange={event => setTipoInterfaz(event.target.value)}\n                                displayEmpty\n                                className={classes.selectEmpty}\n                            >\n                                <MenuItem key={0} value=\"\">Ninguno</MenuItem>\n                                {tiposInterfaces.map((item) => (\n                                    <MenuItem key={item.InterfaceTypeID} value={item.InterfaceTypeID}>{item.InterfaceTypeID + \" - \" + item.InterfaceName}</MenuItem>\n                                ))}\n                            </Select>\n                        </Grid>\n                        <Grid item xs={6} sm={3} md={3} lg={2} xl={2} className={classes.items}>\n                            <InputLabel shrink id=\"demo-simple-select-placeholder-label-label\">\n                                Elija el estado\n                                </InputLabel>\n                            <Select\n                                labelId=\"demo-simple-select-placeholder-label-label\"\n                                id=\"demo-simple-select-placeholder-label\"\n                                value={Estado}\n                                onChange={event => setEstado(event.target.value)}\n                                displayEmpty\n                                className={classes.selectEmpty}\n                            >\n                                <MenuItem key={0} value=\"\">Ninguno</MenuItem>\n                                {tiposEstados.map((item) => (\n                                    <MenuItem key={item.InterfaceStatusID} value={item.InterfaceStatusID}>{item.InterfaceStatusID + \" - \" + item.InterfaceStatus}</MenuItem>\n                                ))}\n                            </Select>\n                        </Grid>\n\n                        {selected.length > 0 ?\n                            <Grid item xs={6} sm={6} md={6} lg={3} xl={2} className={classes.items}>\n                                <Controls.Button\n                                    onClick={() => handleSubmit(interfacesErrorTSAV, selected)}\n                                    text=\"Reenviar interfaces\"\n                                />\n                            </Grid>\n                            :\n                            <Grid item xs={6} sm={6} md={6} lg={3} xl={2} className={classes.items}>\n                                <Controls.Button\n                                    className={classes.button}\n                                    onClick={() => handleBuscar(selectedDate, Local, TipoInterfaz, Estado)}\n                                    text=\"Buscar\"\n                                />\n                            </Grid>\n                        }\n\n                    </Grid>\n                </Accordion>\n\n\n                <Table className={classes.table} stickyHeader aria-label=\"sticky table\" size=\"small\">\n                    <TableHead>\n\n                        <TableRow>\n                            {\n                                Head.map(item => (\n                                    <TableCell align=\"center\" >{item}</TableCell>\n                                ))\n                            }\n                            <TableCell padding=\"checkbox\" align=\"center\">\n                                <Checkbox\n                                    indeterminate={selected.length > 0 && selected.length < interfacesErrorTSAV.length}\n                                    checked={interfacesErrorTSAV.length > 0 && selected.length === interfacesErrorTSAV.length}\n                                    onChange={handleSelectAllClick}\n                                    inputProps={{ 'aria-label': 'select all desserts' }}\n                                />\n                            </TableCell>\n                        </TableRow>\n\n                    </TableHead>\n\n\n                    <TableBody>\n                        {\n                            Loading === false ?\n                                interfacesErrorTSAV.length > 0 ?\n                                    interfacesErrorTSAV.map((item, id) => {\n                                        const isItemSelected = isSelected(id);\n                                        const labelId = `enhanced-table-checkbox-${id}`;\n                                        return (\n                                            <TableRow hover\n                                                onClick={(event) => handleClick(event, id)}\n                                                role=\"checkbox\"\n                                                aria-checked={isItemSelected}\n                                                tabIndex={-1}\n                                                key={id}\n                                                selected={isItemSelected}\n                                                component=\"tr\">\n                                                {\n                                                    Object.keys(item).map((oneKey, i) => (\n\n                                                        <TableCell key={i} align=\"center\" >\n                                                            {item[oneKey]}\n                                                        </TableCell>\n                                                    ))\n                                                }\n                                                <TableCell padding=\"checkbox\" align=\"center\">\n                                                    <Checkbox\n                                                        checked={isItemSelected}\n                                                        inputProps={{ 'aria-labelledby': labelId }}\n                                                    />\n                                                </TableCell>\n\n                                            </TableRow>\n                                        );\n\n                                    })\n                                    :\n                                    <TableRow>\n                                        <TableCell align=\"center\" colSpan={Head.length + 1}>Sin registros</TableCell>\n                                    </TableRow>\n                                :\n                                <TableRow>\n                                    <TableCell align=\"center\" colSpan={Head.length}>\n                                        <div className={classes.loading}>\n                                            <CircularProgress className={classes.itemLoading} />\n                                            <span>Cargando ...</span>\n                                        </div>\n                                    </TableCell>\n                                </TableRow>\n                        }\n                    </TableBody>\n                </Table>\n            </TableContainer>\n        </ContainerBox>\n    )\n}","import React, { useEffect, useState } from 'react'\n\n//css\nimport { makeStyles } from '@material-ui/core';\n\n//material-ui widget\nimport { Typography, Grid, InputLabel, MenuItem, Select, Checkbox } from '@material-ui/core';\n\n//Icons\nimport WarningIcon from '@material-ui/icons/Warning';\nimport CheckCircleIcon from '@material-ui/icons/CheckCircle';\nimport ErrorIcon from '@material-ui/icons/Error';\n\n//Importamos componentes.\nimport { ContainerBox } from '../../components/MainContainer';\nimport { DialogConfirmar } from '../../components/DialogConfirmar';\nimport { DialogAlert } from '../../components/DialogAlert';\n\n\nimport { Controls } from '../../components/controls/Controls';\n\n//API\nimport { useDispatch, useSelector } from 'react-redux';\nimport { obtenerTiendasEasyAccion } from '../../redux/tiendasEasyDucks';\nimport { regenerarInterfazVTAAccion, verificarInterfazVTAAccion } from '../../redux/generarInterfazVTADucks';\nimport { insertarLogsAccion } from '../../redux/logsDucks';\nimport { obtenerInformacionUser } from '../../redux/authDucks';\n\nconst useStyles = makeStyles((theme) => ({\n    title: {\n        color: 'black',\n        padding: theme.spacing(2),\n    },\n    table: {\n        minWidth: 650,\n    },\n    items: {\n        padding: theme.spacing(2),\n        margin: theme.spacing(2),\n        textAlign: \"center\"\n    },\n    container: {\n        background: 'white',\n        border: '1px solid black',\n    },\n    paper: {\n        width: '100%',\n    },\n    successful: {\n        color: \"green\",\n        fontSize: \"200px\",\n        alignItems: \"center\"\n    },\n    error: {\n        color: \"red\",\n        fontSize: \"200px\",\n        alignItems: \"center\"\n    }\n}));\n\nexport const RegenerarInterfaces = () => {\n    const classes = useStyles();\n\n    const dispatch = useDispatch();\n    const [selectedDate, setSelectedDate] = useState(new Date());\n    const [Local, setLocal] = useState('');\n    const [checked, setChecked] = useState(false);\n    const [open, setOpen] = useState(false);\n    const [openAlert, setAlert] = useState(false);\n    const [Loading, setLoading] = useState(false);\n\n    const handleSubmit = (Fecha, Local) => {\n        setLoading(true)\n        dispatch(verificarInterfazVTAAccion(Fecha.toLocaleString(\"es-CL\"), Local))\n            .then(() => {\n                setOpen(true)\n                setLoading(false)\n            })\n    }\n\n    const handleGenerarInterfaz = (Fecha, Local, Bandera, Existe) => {\n        setLoading(true)\n        let FechaActual = new Date();\n        let Severity = Existe === false ? 1 : 2;\n        let Accion = Existe === false ? \"Reenvia Interface Venta\" : \"ACEPTA WARNING:Reenvia Interface Venta\"; //\n        let extra = `${Local}|${FechaActual.getFullYear()}-${FechaActual.getMonth() + 1}-${FechaActual.getDate()}|${FechaActual.toTimeString().split(' ')[0]}`\n\n        dispatch(regenerarInterfazVTAAccion(Fecha.toLocaleString(\"es-CL\"), Local, Bandera))\n            .then( () => dispatch(insertarLogsAccion(User[0].Username, Accion, Severity, extra)))\n            .then(() => setLoading(false))\n\n        setOpen(false)\n        setAlert(true)\n    }\n\n    const tiendasEasy = useSelector(store => store.tiendasEasy.array);\n    const User = useSelector(store => store.auth.user);\n    const regenerarInterfazVTA = useSelector(store => store.regenerarInterfazVTA);\n\n    const title = useSelector(store => store.regenerarInterfazVTA.title);\n    const text = useSelector(store => store.regenerarInterfazVTA.text);\n\n    // Cargamos la informacion cuando termina de \"pintarse los componentes\".\n    useEffect(() => {\n        dispatch(obtenerTiendasEasyAccion())\n        dispatch(obtenerInformacionUser())\n    }, [dispatch])\n\n    return (\n        <ContainerBox>\n            <Typography variant='h3' align='center' className={classes.title}>\n                Regenerar Interfaces\n            </Typography>\n\n            <Grid container alignItems=\"flex-end\" className={classes.container}>\n\n                <Grid item xl className={classes.items}>\n                    <Controls.DatePicker\n                        id=\"fecha\"\n                        value={selectedDate}\n                        onChange={date => setSelectedDate(date)}\n                    />\n                </Grid>\n\n                <Grid item xl className={classes.items}>\n                    <InputLabel shrink id=\"demo-simple-select-placeholder-label-label\">\n                        Elija la tienda Easy\n                    </InputLabel>\n                    <Select\n                        labelId=\"demo-simple-select-placeholder-label-label\"\n                        id=\"demo-simple-select-placeholder-label\"\n                        value={Local}\n                        onChange={event => setLocal(event.target.value)}\n                        displayEmpty\n                        className={classes.selectEmpty}\n                    >\n                        <MenuItem key={0} value=\"\">Ninguno</MenuItem>\n                        {tiendasEasy.map((item) => (\n                            <MenuItem key={item.CodSAP} value={item.CodSAP}>{item.CodSAP + \" - \" + item.Local}</MenuItem>\n                        ))}\n                    </Select>\n                </Grid>\n\n                <Grid item xl className={classes.items}>\n                    <Checkbox\n                        checked={checked}\n                        onChange={event => setChecked(event.target.checked)}\n                        color=\"primary\"\n                        inputProps={{ 'aria-label': 'primary checkbox' }}\n                    />\n                        Generar bandera\n                    </Grid>\n\n                <Grid item xl className={classes.items}>\n                    <Controls.Button\n                        onClick={() => handleSubmit(selectedDate, Local)}\n                        text=\"Generar interfaz\"\n                    />\n                </Grid>\n\n            </Grid>\n\n\n            <DialogConfirmar\n                setOpen={setOpen}\n                open={open}\n                loading={Loading}\n                Icon={WarningIcon}\n                //data verificada\n                regenerarInterfazVTA={regenerarInterfazVTA}\n                //datos\n                Fecha={selectedDate}\n                Local={Local}\n                Bandera={checked}\n                title={\n                    regenerarInterfazVTA.existe === false ?\n                        \"Regenerar Interfaz de venta\"\n                        :\n                        \"WARNING - Regenerar Interfaz de venta\"\n                }\n                subtitle={\n                    regenerarInterfazVTA.existe === false ?\n                        \"¬øEsta seguro que desea regenerar una Interfaz de venta?\"\n                        :\n                        `¬°La interfaz para el local ${Local} con fecha ${selectedDate.getFullYear()}-${selectedDate.getMonth() + 1}-${selectedDate.getDate()}, ya fue generada anteriormente por otro usuario!`\n                }\n                onClick={() => {\n                    handleGenerarInterfaz(selectedDate, Local, checked, regenerarInterfazVTA.existe)\n                }}\n                confirmar={\n                    regenerarInterfazVTA.existe === false ?\n                        \"S√≠, deseo generar la interfaz\"\n                        :\n                        \"S√≠, deseo generar otra vez la interfaz de venta\"\n                }\n            />\n\n            <DialogAlert\n                setOpen={setAlert}\n                open={openAlert}\n                loading={Loading}\n                Icon={regenerarInterfazVTA.title !== \"ERROR\" ? CheckCircleIcon : ErrorIcon}\n                IconColor={regenerarInterfazVTA.title !== \"ERROR\" ? classes.successful : classes.error}\n                title={title}\n                subtitle={text}\n                onClick={() => setAlert(false)}\n            />\n        </ContainerBox>\n    )\n}","import React, { useEffect, useState } from 'react'\n\n//css\nimport { makeStyles } from '@material-ui/core';\n\n//material-ui widget\nimport { Typography, Grid, Box, InputLabel, MenuItem, Select } from '@material-ui/core';\n\n//Controls\nimport { Controls } from '../../components/controls/Controls';\n\n//Icons\nimport WarningIcon from '@material-ui/icons/Warning';\nimport CheckCircleIcon from '@material-ui/icons/CheckCircle';\nimport ErrorIcon from '@material-ui/icons/Error';\n\n//Importamos componentes.\nimport { ContainerBox } from '../../components/MainContainer';\nimport { DialogConfirmar } from '../../components/DialogConfirmar';\nimport { DialogAlert } from '../../components/DialogAlert';\n\n//API\nimport { useDispatch, useSelector } from 'react-redux';\nimport { obtenerTiendasEasyAccion } from '../../redux/tiendasEasyDucks';\nimport { reenviarCC3Accion } from '../../redux/reenviarCC3Ducks';\nimport { insertarLogsAccion } from '../../redux/logsDucks';\n\nconst useStyles = makeStyles((theme) => ({\n    title: {\n        color: 'black',\n        padding: theme.spacing(2),\n    },\n    table: {\n        minWidth: 650,\n    },\n    items: {\n        padding: theme.spacing(2),\n        margin: theme.spacing(2),\n    },\n    container: {\n        background: 'white',\n        border: '1px solid black',\n    },\n    successful: {\n        color: \"green\",\n        fontSize: \"200px\",\n        alignItems: \"center\"\n    },\n    error: {\n        color: \"red\",\n        fontSize: \"200px\",\n        alignItems: \"center\"\n    }\n}));\n\nexport const ReenviarCC3 = () => {\n    const classes = useStyles();\n\n    const dispatch = useDispatch();\n    const [selectedDate, setSelectedDate] = useState(new Date());\n    const [Local, setLocal] = useState('');\n\n    const [open, setOpen] = useState(false);\n    const [openAlert, setAlert] = useState(false);\n    const [Loading, setLoading] = useState(false);\n    const [notify, setNotify] = useState({ isOpen: false, message: '', type: '' });\n\n    const User = useSelector(store => store.auth.user);\n    const tiendasEasy = useSelector(store => store.tiendasEasy.array);\n    const Status = useSelector(store => store.reenviarCC3.Status);\n\n    const handleSubmit = (selectedDate, Local) => {\n        setLoading(true)\n        if (Local === '') {\n            setNotify({\n                isOpen: true,\n                message: \"Debe elegir un local\",\n                type: \"error\"\n            })\n            setLoading(false)\n            return\n        }\n\n        dispatch(reenviarCC3Accion(selectedDate.toLocaleString(\"es-CL\"), Local))\n            .then(() => dispatch(insertarLogsAccion(User[0].Username, \"Reenviar interfaz CC3\", 1, `Local ${Local} y Fecha ${selectedDate.toLocaleString(\"es-CL\").substring(0, 10)}`)))\n            .then(() => {\n                setOpen(false)\n                setAlert(true)\n                setLoading(false)\n            })\n    }\n\n    // Cargamos la informacion cuando termina de \"pintarse los componentes\".\n    useEffect(() => {\n        setLoading(true)\n        dispatch(obtenerTiendasEasyAccion())\n            .then(() => setLoading(false))\n    }, [dispatch])\n\n    return (\n        <ContainerBox>\n            <Typography variant='h3' align='center' className={classes.title}>\n                Reenviar interfaz CC3\n            </Typography>\n\n            <Grid container alignItems=\"flex-end\" className={classes.container}>\n\n                <Grid item xl className={classes.items}>\n                    <Controls.DatePicker\n                        id=\"fecha\"\n                        value={selectedDate}\n                        onChange={date => setSelectedDate(date)}\n                    />\n                </Grid>\n\n                <Grid item xl className={classes.items}>\n                    <Box>\n                        <InputLabel shrink id=\"demo-simple-select-placeholder-label-label\">\n                            Elija la tienda Easy\n                        </InputLabel>\n                        <Select\n                            labelId=\"demo-simple-select-placeholder-label-label\"\n                            id=\"demo-simple-select-placeholder-label\"\n                            value={Local}\n                            onChange={event => setLocal(event.target.value)}\n                            displayEmpty\n                            className={classes.selectEmpty}\n                        >\n                            <MenuItem key={0} value=\"\">Ninguno</MenuItem>\n                            {tiendasEasy.map((item) => (\n                                <MenuItem key={item.CodSAP} value={item.CodSAP}>{item.CodSAP + \" - \" + item.Local}</MenuItem>\n                            ))}\n                        </Select>\n                    </Box>\n                </Grid>\n\n                <Grid item xl className={classes.items}>\n                    <Controls.Button\n                        onClick={() => {\n                            setOpen(true)\n                        }}\n                        text=\"Reenviar\"\n                    />\n                </Grid>\n\n            </Grid>\n\n            <DialogConfirmar\n                setOpen={setOpen}\n                open={open}\n                loading={Loading}\n                Icon={WarningIcon}\n\n                title={\"Confirmaci√≥n\"}\n                subtitle={`¬øDesea reenviar interfaz CC3 para la tienda ${Local} y el dia ${selectedDate.toLocaleString(\"es-CL\").substring(0, 10)}?`}\n                onClick={() => handleSubmit(selectedDate, Local)}\n                confirmar={`S√≠, deseo reenviar interfaz CC3`}\n            />\n\n            <DialogAlert\n                setOpen={setAlert}\n                open={openAlert}\n                loading={Loading}\n                Icon={Status === true ? CheckCircleIcon : ErrorIcon}\n                IconColor={Status === true ? classes.successful : classes.error}\n                title={Status === true ? \"Successful\" : \"Error\"}\n                subtitle={Status === true ? \"Se reenv√≠o correctamente la interfaz\" : \"Ocurri√≥ un error reenviando la interfaz.\"}\n                onClick={() => {\n                    setAlert(false);\n                }}\n            />\n\n            {\n                <Controls.Notification\n                    notify={notify}\n                    setNotify={setNotify}\n                />\n            }\n        </ContainerBox>\n    )\n}","import React, { useEffect, useState } from 'react'\n\n//Style\nimport { Grid, makeStyles } from '@material-ui/core';\n\n//Entradas\nimport {Controls} from '../../components/controls/Controls';\n\nconst useStyles = makeStyles((theme) => ({\n    items: {\n        padding: theme.spacing(2),\n        margin: theme.spacing(2),\n    },\n    accion: {\n        marginLeft: theme.spacing(2),\n        marginBottom: theme.spacing(2),\n    }\n}));\n\nconst FormularioUsuario = props => {\n    const classes = useStyles();\n\n    const [Id, setId] = useState(0)\n    const [Nombres, setNombres] = useState('')\n    const [ApellidoP, setApellidoP] = useState('')\n    const [ApellidoM, setApellidoM] = useState('')\n    const [Email, setEmail] = useState('')\n    const [Username, setUsername] = useState('')\n    const [perfil, setPerfil] = useState('')\n\n    const handleSubmit = (e) => {\n        e.preventDefault()\n        props.createOrEdite(Id, Nombres, ApellidoP, ApellidoM, Email, Username, perfil)\n    }\n\n    useEffect(() => {\n        if (props.data) {\n            setId(props.data.Id)\n            setNombres(props.data.Nombres)\n            setApellidoP(props.data.ApellidoP)\n            setApellidoM(props.data.ApellidoM)\n            setEmail(props.data.Email)\n            setUsername(props.data.Username)\n            setPerfil(props.data.IdPerfil)\n        }\n    }, [props.data])\n\n    console.log(props)\n\n    return (\n        <form onSubmit={e => handleSubmit(e)}>\n\n            <Grid container justify=\"flex-start\" alignItems=\"flex-end\" spacing={2}>\n\n                <Grid item xl className={classes.items}>\n                    <Controls.Input\n                        autoFocus\n                        id=\"Nombre\"\n                        label=\"Nombre\"\n                        name=\"Nombre\"\n                        value={Nombres}\n                        onChange={e => setNombres(e.target.value)}\n                    />\n                </Grid>\n\n                <Grid item xl className={classes.items}>\n                    <Controls.Input\n                        autoFocus\n                        id=\"ApellidoP\"\n                        label=\"Apellido Paterno\"\n                        name=\"ApellidoP\"\n                        value={ApellidoP}\n                        onChange={e => setApellidoP(e.target.value)}\n                    />\n                </Grid>\n\n                <Grid item xl className={classes.items}>\n                    <Controls.Input\n                        autoFocus\n                        id=\"ApellidoM\"\n                        label=\"Apellido Materno\"\n                        name=\"ApellidoM\"\n                        value={ApellidoM}\n                        onChange={e => setApellidoM(e.target.value)}\n                    />\n                </Grid>\n\n                <Grid item xl className={classes.items}>\n                    <Controls.Input\n                        autoFocus\n                        id=\"Email\"\n                        type=\"email\"\n                        label=\"Email\"\n                        name=\"Email\"\n                        value={Email}\n                        onChange={e => setEmail(e.target.value)}\n                    />\n                </Grid>\n\n                <Grid item xl className={classes.items}>\n                    <Controls.Input\n                        autoFocus\n                        id=\"Usuario\"\n                        label=\"Usuario\"\n                        name=\"Usuario\"\n                        value={Username}\n                        onChange={e => setUsername(e.target.value)}\n                    />\n                </Grid>\n\n                <Grid item xl className={classes.items}>\n                    <Controls.Select\n                        id=\"perfil\"\n                        label=\"Elija el tipo perfil\"\n                        value={perfil}\n                        onChange={e => setPerfil(e.target.value)}\n                        options={props.perfiles}\n                    />\n                </Grid>\n\n            </Grid>\n\n            {/* Accion */}\n            <Grid container justify=\"flex-end\" alignItems=\"flex-end\" spacing={0}>\n                <div>\n                    <Controls.Button\n                        type=\"submit\"\n                        onSubmit={handleSubmit}\n                        text=\"Guardar\"\n                        className={classes.accion}\n                    />\n                </div>\n            </Grid>\n\n        </form>\n    )\n}\n\nexport default FormularioUsuario;","import React, { useEffect, useState } from 'react'\n\n//css\nimport { makeStyles } from '@material-ui/core';\n\n//material-ui widget\nimport { Typography, IconButton } from '@material-ui/core';\n\n// Tabla de datos\nimport {\n    TableContainer,\n    Paper,\n    Table,\n    TableHead,\n    TableBody,\n    TableRow,\n    TableCell\n} from '@material-ui/core';\n\n//Efecto loading\nimport CircularProgress from '@material-ui/core/CircularProgress';\n\n// Icons\nimport AddIcon from '@material-ui/icons/Add';\nimport EditIcon from '@material-ui/icons/Edit';\nimport WarningIcon from '@material-ui/icons/Warning';\nimport DeleteIcon from '@material-ui/icons/Delete';\n\n//Importamos componentes.\nimport { ContainerBox } from '../../components/MainContainer';\nimport { DialogEdit } from '../../components/DialogEdit';\nimport { DialogConfirmar } from '../../components/DialogConfirmar';\nimport FormularioUsuario from '../../pages/Usuarios/FormularioUsuario';\n\n// Conexion API\nimport { useDispatch, useSelector } from 'react-redux';\nimport { insertarLogsAccion } from '../../redux/logsDucks';\nimport {\n    obtenerUsuariosAccion,\n    crearUsuarioAccion,\n    actualizarUsuarioAccion,\n    eliminarUsuarioAccion\n} from '../../redux/UsuariosDucks';\n\nimport { obtenerPerfilAccion } from '../../redux/perfilesDucks';\n\nconst useStyles = makeStyles((theme) => ({\n    title: {\n        color: 'black',\n        padding: theme.spacing(2)\n    },\n    edit: {\n        margin: theme.spacing(1),\n        color: '#DE9B00',\n    },\n    delete: {\n        margin: theme.spacing(1),\n        color: '#D10000',\n    },\n    table: {\n        minWidth: 650,\n    },\n    container: {\n        maxHeight: 550,\n    },\n    items: {\n        padding: theme.spacing(2),\n        margin: theme.spacing(2),\n    },\n    loading: {\n        display: 'flex',\n        flexDirection: 'column',\n        alignItems: \"center\",\n    },\n    itemLoading: {\n        margin: theme.spacing(2)\n    }\n}));\n\nconst Head = ['Nombres', 'ApellidoP', 'ApellidoM', 'Email', 'Username', 'Perfil', 'Funciones']\n\nexport const Usuarios = () => {\n    const classes = useStyles();\n\n    const dispatch = useDispatch();\n\n    const [IdTable, setIdTable] = useState(null);\n    const [title, setTitle] = useState('');\n    const [openDelete, setOpenDelete] = useState(false);\n    const [openDialog, setOpenDialog] = useState(false);\n    const [Loading, setLoading] = useState(false);\n\n    const User = useSelector(store => store.auth.user);\n    const usuarios = useSelector(store => store.usuarios.array);\n    const perfiles = useSelector(store => store.Perfiles.array);\n\n    const handleOpenDialog = () => {\n        setTitle(\"Crear usuario\")\n        setIdTable(null)\n        setOpenDialog(true)\n    };\n\n    const handleClickOpenEdite = (idTable) => {\n        setIdTable(idTable);\n        setTitle(\"Editar usuario\")\n        setOpenDialog(true);\n    };\n\n    const handleClickOpenDelete = (idTable) => {\n        setIdTable(idTable);\n        setOpenDelete(true);\n    };\n\n    const createOrEdite = (Id, Nombres, ApellidoP, ApellidoM, Email, Username, perfil) => {\n        setLoading(true)\n        Id === 0 ?\n            dispatch(crearUsuarioAccion(Nombres, ApellidoP, ApellidoM, Email, Username, perfil))\n                .then(() => dispatch(insertarLogsAccion(User[0].Username, \"Usuarios\", 1, `Crear de usuario`)))\n            :\n            dispatch(actualizarUsuarioAccion(Id, Nombres, ApellidoP, ApellidoM, Email, Username, perfil))\n                .then(() => dispatch(insertarLogsAccion(User[0].Username, \"Usuarios\", 1, `Editar de usuario`)))\n\n        setIdTable(null)\n        setOpenDialog(false)\n        dispatch(obtenerUsuariosAccion()).then(() => setLoading(false))\n    }\n\n    const handleDelete = id => {\n        setLoading(true)\n        dispatch(eliminarUsuarioAccion(id))\n            .then(() => dispatch(insertarLogsAccion(User[0].Username, \"Usuarios\", 1, `Eliminar Usuario`)))\n        setIdTable(null)\n        setOpenDelete(false)\n        dispatch(obtenerUsuariosAccion()).then(() => setLoading(false))\n    }\n\n    // Cargamos la informacion cuando termina de \"pintarse los componentes\".\n    useEffect(() => {\n        setLoading(true)\n        dispatch(obtenerUsuariosAccion())\n        dispatch(obtenerPerfilAccion()).then(() => setLoading(false))\n            .then(() => dispatch(insertarLogsAccion(User[0].Username, \"Usuarios\", 1, `Visualizaci√≥n de usuarios`)))\n    }, [User, dispatch])\n\n    console.log(usuarios)\n    return (\n        <ContainerBox>\n            <Typography variant='h3' align='center' className={classes.title}>\n                Usuarios\n                </Typography>\n\n            <TableContainer component={Paper} className={classes.container}>\n                <Table className={classes.table} stickyHeader aria-label=\"sticky table\" size=\"small\">\n                    <TableHead>\n                        <TableRow>\n                            <TableCell align=\"left\" >\n                                <IconButton onClick={handleOpenDialog} > <AddIcon /> </IconButton>\n                            </TableCell>\n                            {\n                                Head.map((item, Id) => (\n                                    <TableCell key={Id} align=\"left\" >{item}</TableCell>\n                                ))\n                            }\n                        </TableRow>\n                    </TableHead>\n\n\n                    <TableBody>\n                        {\n                            Loading === false ?\n                                usuarios.length > 0 ?\n                                    usuarios.map((item, id) => (\n                                        <TableRow key={id} component=\"tr\">\n                                            <TableCell></TableCell>\n                                            {\n                                                Object.keys(item).map((oneKey, i) => (\n                                                    (oneKey !== 'Id') && (oneKey !== 'IdPerfil') && (oneKey !== 'Password') ?\n                                                        <TableCell key={i} align=\"left\" >\n                                                            {item[oneKey]}\n                                                        </TableCell>\n                                                        :\n                                                        null\n                                                ))\n                                            }\n\n                                            <TableCell component=\"td\" align='left'>\n                                                <IconButton variant=\"contained\" size=\"small\" className={classes.edit} onClick={() => handleClickOpenEdite(item)}> <EditIcon /> </IconButton>\n                                                <IconButton variant=\"contained\" size=\"small\" className={classes.delete} onClick={() => handleClickOpenDelete(item.Id)} > <DeleteIcon /> </IconButton>\n                                            </TableCell>\n\n                                        </TableRow>\n                                    ))\n                                    :\n                                    <TableRow>\n                                        <TableCell align=\"center\" colSpan={Head.length}>Sin registros</TableCell>\n                                    </TableRow>\n                                :\n                                <TableRow>\n                                    <TableCell align=\"center\" colSpan={Head.length + 1}>\n                                        <div className={classes.loading}>\n                                            <CircularProgress className={classes.itemLoading} />\n                                            <span>Cargando ...</span>\n                                        </div>\n                                    </TableCell>\n                                </TableRow>\n                        }\n                    </TableBody>\n                </Table>\n            </TableContainer>\n\n            <DialogEdit\n                setOpen={setOpenDialog}\n                open={openDialog}\n                loading={Loading}\n                title={title}\n                maxWidth=\"sm\"\n            >\n                <FormularioUsuario\n                    data={IdTable}\n                    perfiles={perfiles}\n                    createOrEdite={createOrEdite}\n                />\n            </DialogEdit>\n\n            <DialogConfirmar\n                setOpen={setOpenDelete}\n                open={openDelete}\n                loading={Loading}\n                Icon={WarningIcon}\n                title=\"¬øDesea eliminar este usuario?\"\n                subtitle=\"¬øEsta seguro que desea eliminar de manera permanente a este usuario?\"\n                onClick={() => handleDelete(IdTable)}\n                confirmar={\"S√≠, deseo eliminar este usuario\"}\n            />\n        </ContainerBox>\n    )\n}","import React, { useEffect, useState } from 'react'\n\n//Style\nimport { Grid, makeStyles, Box } from '@material-ui/core';\n\n//Entradas\nimport { Controls } from '../../components/controls/Controls';\n\n//select\nimport Input from '@material-ui/core/Input';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport Select from '@material-ui/core/Select';\n\nconst useStyles = makeStyles((theme) => ({\n    items: {\n        padding: theme.spacing(2),\n        margin: theme.spacing(2),\n    },\n    accion: {\n        marginLeft: theme.spacing(2),\n        marginBottom: theme.spacing(2),\n    },\n    progress: {\n        textAlign: \"center\",\n        margin: theme.spacing(2)\n    },\n}));\n\nconst ITEM_HEIGHT = 48;\nconst ITEM_PADDING_TOP = 8;\nconst MenuProps = {\n    PaperProps: {\n        style: {\n            maxHeight: ITEM_HEIGHT * 4.5 + ITEM_PADDING_TOP,\n            width: 250,\n        },\n    },\n};\n\nconst FormularioPerfil = props => {\n    const classes = useStyles();\n\n    const [Id, setId] = useState(0)\n    const [nuevoPerfil, setNuevoPerfil] = useState('')\n    const [seletedModulos, setModulos] = useState([]);\n\n    const handleSubmit = (e) => {\n        e.preventDefault()\n        props.createOrEdite(Id, nuevoPerfil, seletedModulos)\n    }\n\n    useEffect(() => {\n        if (props.data) {\n            setId(props.data.Id)\n            setNuevoPerfil(props.data.Perfil)\n\n            let defaultModelos = []\n            props.modulosOriginales.map((item) => (\n                defaultModelos.push(item.Id)\n            ))\n\n            setModulos(defaultModelos)\n        }\n    }, [props.modulosOriginales,props.data])\n\n    return (\n        <form onSubmit={e => handleSubmit(e)}>\n\n            <Grid container justify=\"flex-start\" alignItems=\"flex-end\" spacing={2}>\n\n                <Grid item xl className={classes.items}>\n                    <Controls.Input\n                        autoFocus\n                        id=\"Perfil\"\n                        margin=\"dense\"\n                        label=\"Perfil\"\n                        name=\"Perfil\"\n                        value={nuevoPerfil}\n                        onChange={e => setNuevoPerfil(e.target.value)}\n                    />\n                </Grid>\n\n                <Grid item xl className={classes.items}>\n                    <Box>\n                        <InputLabel id=\"demo-mutiple-name-label\">Modulos</InputLabel>\n                        <Select\n                            labelId=\"demo-mutiple-name-label\"\n                            id=\"demo-mutiple-name\"\n                            multiple\n                            value={seletedModulos}\n                            onChange={event => setModulos(event.target.value)}\n                            input={<Input />}\n                            MenuProps={MenuProps}\n                        >\n                            {props.Modulos.map((item) => (\n                                <MenuItem key={item.Modulo} value={item.Id}>\n                                    {item.Modulo}\n                                </MenuItem>\n                            ))}\n                        </Select>\n                    </Box>\n                </Grid>\n\n            </Grid>\n\n            {/* Accion */}\n            <Grid container justify=\"flex-end\" alignItems=\"flex-end\" spacing={0}>\n                <div>\n                    <Controls.Button\n                        type=\"submit\"\n                        onSubmit={handleSubmit}\n                        text=\"Guardar\"\n                        className={classes.accion}\n                    />\n                </div>\n            </Grid>\n\n        </form>\n    )\n}\n\nexport default FormularioPerfil;","import React, { useEffect, useState } from 'react'\n\n//Style\nimport { Grid, makeStyles } from '@material-ui/core';\n\n//Entradas\nimport { Controls } from '../../components/controls/Controls';\n\nconst useStyles = makeStyles((theme) => ({\n    items: {\n        padding: theme.spacing(2),\n        margin: theme.spacing(2),\n    },\n    accion: {\n        marginLeft: theme.spacing(2),\n        marginBottom: theme.spacing(2),\n    }\n}));\n\nconst FormularioModulos = props => {\n    const classes = useStyles();\n\n    const [Id, setId] = useState(0)\n    const [Modulo, setModulo] = useState([]);\n\n    const handleSubmit = (e) => {\n        e.preventDefault()\n        props.createOrEditeModulo(Id, Modulo)\n    }\n\n    useEffect(() => {\n        if (props.data) {\n            setId(props.data.Id)\n            setModulo(props.data.Modulo)\n        }\n    }, [props.data])\n\n    return (\n        <form onSubmit={e => handleSubmit(e)}>\n\n            <Grid container justify=\"flex-start\" alignItems=\"flex-end\" spacing={2}>\n\n                <Grid item xl className={classes.items}>\n                    <Controls.Input\n                        autoFocus\n                        id=\"Modulo\"\n                        margin=\"dense\"\n                        label=\"Modulo\"\n                        name=\"Modulo\"\n                        value={Modulo}\n                        onChange={e => setModulo(e.target.value)}\n                    />\n                </Grid>\n\n            </Grid>\n\n            {/* Accion */}\n            <Grid container justify=\"flex-end\" alignItems=\"flex-end\" spacing={0}>\n                <div>\n                    <Controls.Button\n                        type=\"submit\"\n                        onSubmit={handleSubmit}\n                        text=\"Guardar\"\n                        className={classes.accion}\n                    />\n                </div>\n            </Grid>\n\n        </form>\n    )\n}\n\nexport default FormularioModulos;","import React, { useEffect, useState } from 'react'\n\n//css\nimport { makeStyles } from '@material-ui/core';\n\n//material-ui\nimport { Typography, Grid, IconButton } from '@material-ui/core';\n\n// Icons\nimport EditIcon from '@material-ui/icons/Edit';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport AddIcon from '@material-ui/icons/Add';\nimport ArrowForwardIcon from '@material-ui/icons/ArrowForward';\nimport WarningIcon from '@material-ui/icons/Warning';\n\n// Tabla de datos\nimport {\n    TableContainer,\n    Paper,\n    Table,\n    TableHead,\n    TableBody,\n    TableRow,\n    TableCell\n} from '@material-ui/core';\n\n//componentes\nimport { ContainerBox } from '../../components/MainContainer';\nimport { DialogEdit } from '../../components/DialogEdit';\nimport { DialogConfirmar } from '../../components/DialogConfirmar';\nimport FormularioPerfil from '../../pages/Perfiles/FormularioPerfil';\nimport FormularioModulos from '../../pages/Perfiles/FormularioModulos';\n\n//API\nimport { useDispatch, useSelector } from 'react-redux';\nimport {\n    obtenerPerfilAccion,\n    crearPerfilAccion,\n    editarPerfilAccion,\n    eliminarPerfilAccion\n} from '../../redux/perfilesDucks';\n\nimport { \n    obtenerModuloIdAccion, \n    obtenerModuloAccion,\n    crearModuloAccion,\n    editarModuloAccion,\n    eliminarModuloAccion\n} from '../../redux/modulosDucks';\n\n\nconst useStyles = makeStyles((theme) => ({\n    title: {\n        color: 'black',\n        padding: theme.spacing(4)\n    },\n    table: {\n        minWidth: 200,\n    },\n    items: {\n        padding: theme.spacing(4),\n        margin: theme.spacing(2),\n    },\n    button: {\n        color: 'white',\n        backgroundColor: '#7408A7',\n        '&:hover': {\n            backgroundColor: '#5F169B ',\n        },\n    },\n    open: {\n        margin: theme.spacing(1),\n        color: '#7408A7',\n    },\n    edit: {\n        margin: theme.spacing(1),\n        color: '#EBA623',\n    },\n    delete: {\n        margin: theme.spacing(1),\n        color: '#C30707',\n    },\n    container: {\n        maxHeight: 550\n    }\n}));\n\n\nexport const Perfiles = () => {\n    const classes = useStyles();\n\n    const dispatch = useDispatch();\n    const [IdTablePerfil, setIdTablePerfil] = useState(null);\n    const [IdTableModulo, setIdTableModulo] = useState(null);\n    const [title, setTitle] = useState('');\n    const [isPerfil, setIsPerfil] = useState(false);\n    const [openDelete, setOpenDelete] = useState(false);\n    const [openDialog, setOpenDialog] = useState(false);\n    const [Loading, setLoading] = useState(false);\n    \n    //Funcion para ver los datos de cada perfil.\n    //const handleModulo = idPerfil => {\n    //    setIdTablePerfil(idPerfil)\n    //    dispatch(obtenerModuloIdAccion(idPerfil))\n    //}\n\n    //Funcion para abrir el pop-up(Crear Modulo)\n    const handleOpenDialogModulo = () => {\n        setTitle(\"Crear Modulo\")\n        setIdTableModulo(null)\n        setIsPerfil(false)\n        setOpenDialog(true)\n    };\n\n    //Funcion para abrir el pop-up (Crear Perfil)\n    const handleOpenDialog = () => {\n        setTitle(\"Crear Perfil\")\n        setIdTablePerfil(null)\n        setIsPerfil(true)\n        setOpenDialog(true)\n    };\n\n    //Funcion para abrir el pop-up (Editar Modulo)\n    const handleClickOpenEditeModulo = (modulo) => {\n        setIdTableModulo(modulo);\n        setTitle(\"Editar Modulo\")\n        setIsPerfil(false)\n        setOpenDialog(true);\n    };\n\n    //Funcion para editar Perfiles\n    const handleClickOpenEdite = (perfil) => {\n        dispatch(obtenerModuloIdAccion(perfil.Id))\n        setIdTablePerfil(perfil);\n        setTitle(\"Editar Perfil\")\n        setIsPerfil(true)\n        setOpenDialog(true);\n    };\n\n    //Funcion para abrir el pop-up (Eliminar Modulo)\n    const handleClickOpenDeleteModulo = (idModulo) => {\n        setIdTableModulo(idModulo);\n        setIsPerfil(false)\n        setOpenDelete(true);\n    };\n\n    //Funcion para abrir el pop-up eliminar Perfil\n    const handleClickOpenDelete = (idPerfil) => {\n        setIdTablePerfil(idPerfil);\n        setIsPerfil(true)\n        setOpenDelete(true);\n    };\n\n    //Funcion para eliminar un Modulo\n    const handleDeleteModulo = id => {\n        setLoading(true)\n        dispatch(eliminarModuloAccion(id))\n        setIdTableModulo(null);\n        setOpenDelete(false);\n        dispatch(obtenerModuloAccion()).then(() => setLoading(false));\n    };\n\n    //Funcion para eliminar un Perfil\n    const handleDelete = id => {\n        setLoading(true)\n        dispatch(eliminarPerfilAccion(id))\n        setIdTablePerfil(null)\n        setOpenDelete(false)\n        dispatch(obtenerPerfilAccion()).then(() => setLoading(false));\n    }\n\n    //Funcion para crear Modulo o editar Modulo\n    const createOrEditeModulo = (Id, Modulo) => {\n        setLoading(true)\n        Id === 0 ?\n            dispatch(crearModuloAccion(Modulo))\n            :\n            dispatch(editarModuloAccion(Id, Modulo))\n\n        setIdTablePerfil(null)\n        setOpenDialog(false)\n        dispatch(obtenerModuloAccion()).then( () => setLoading(false));\n    }\n\n    //Funcion para crear Perfiles o modificar Perfiles\n    const createOrEdite = (Id, Perfil, Modulos) => {\n        setLoading(true)\n        Id === 0 ?\n            dispatch(crearPerfilAccion(Perfil, Modulos))\n            :\n            dispatch(editarPerfilAccion(Id, Perfil, Modulos))\n\n        setIdTablePerfil(null)\n        setOpenDialog(false)\n        dispatch(obtenerPerfilAccion()).then(() => setLoading(false))\n    }\n\n    useEffect(() => {\n        setLoading(true)\n        dispatch(obtenerPerfilAccion())\n        dispatch(obtenerModuloIdAccion(1))\n        dispatch(obtenerModuloAccion()).then(() => setLoading(false));\n    }, [dispatch])\n\n    const Perfiles = useSelector(store => store.Perfiles.array);\n    const Modulos = useSelector(store => store.Modulo.Modulos);\n    const ModulosId = useSelector(store => store.Modulo.ModulosPerfil);\n\n    return (\n        <ContainerBox>\n            <Typography variant='h3' align='center' className={classes.title}>\n                Perfiles\n            </Typography>\n            <Grid container direction=\"row\" justify=\"center\" alignItems=\"center\">\n                <Grid item xs={5} sm={5} md={5} lg={5} xl={5}>\n\n                    <TableContainer component={Paper} className={classes.container}>\n\n\n\n                        <Table className={classes.table} stickyHeader aria-label=\"simple table\" size=\"small\">\n                            <TableHead>\n                                <TableRow key={0}>\n                                    <TableCell> <IconButton variant=\"contained\" size=\"medium\" onClick={() => handleOpenDialog()}> <AddIcon /></IconButton> </TableCell>\n                                    <TableCell align=\"center\">Perfiles</TableCell>\n                                    <TableCell align=\"center\">Funciones</TableCell>\n                                </TableRow>\n                            </TableHead>\n\n\n                            <TableBody>\n                                {Perfiles.map((perfil, id) => (\n                                    <TableRow key={id}>\n                                        <TableCell ></TableCell>\n                                        <TableCell align='center'>{perfil.Perfil}</TableCell>\n                                        <TableCell component=\"td\" align='center'>\n                                            <IconButton variant=\"contained\" size=\"small\" className={classes.edit} onClick={() => handleClickOpenEdite(perfil)}> <EditIcon /> </IconButton>\n                                            <IconButton variant=\"contained\" size=\"small\" className={classes.delete} onClick={() => handleClickOpenDelete(perfil.Id)}> <DeleteIcon /> </IconButton>\n                                        </TableCell>\n                                    </TableRow>\n                                ))\n                                }\n                            </TableBody>\n                        </Table>\n                    </TableContainer>\n                </Grid>\n\n                <Grid item xs={2} sm={2} md={2} lg={2} xl={2}>\n                    <div style={{ textAlign: \"center\", }}>\n                        <ArrowForwardIcon />\n                    </div>\n                </Grid>\n\n                <Grid item xs={5} sm={5} md={5} lg={5} xl={5}>\n\n                    <TableContainer component={Paper} className={classes.container}>\n                        <Table className={classes.table} stickyHeader aria-label=\"simple table\" size=\"small\">\n                            <TableHead>\n                                <TableRow key={0}>\n                                    <TableCell><IconButton variant=\"contained\" size=\"medium\" onClick={() => handleOpenDialogModulo()}> <AddIcon /></IconButton> </TableCell>\n                                    <TableCell align=\"center\">Modulos</TableCell>\n                                    <TableCell align=\"center\">Funciones</TableCell>\n                                </TableRow>\n                            </TableHead>\n\n\n                            <TableBody>\n                                {Modulos.map((modulo, id) => (\n                                    <TableRow key={id}>\n                                        <TableCell ></TableCell>\n                                        <TableCell align='center'>{modulo.Modulo}</TableCell>\n                                        <TableCell component=\"td\" align='center'>\n                                            <IconButton variant=\"contained\" size=\"small\" className={classes.edit} onClick={() => handleClickOpenEditeModulo(modulo)}> <EditIcon /> </IconButton>\n                                            <IconButton variant=\"contained\" size=\"small\" className={classes.delete} onClick={() => handleClickOpenDeleteModulo(modulo.Id)}> <DeleteIcon /> </IconButton>\n                                        </TableCell>\n                                    </TableRow>\n                                ))}\n                            </TableBody>\n                        </Table>\n                    </TableContainer>\n                </Grid>\n\n            </Grid>\n\n            <DialogEdit\n                setOpen={setOpenDialog}\n                open={openDialog}\n                loading={Loading}\n                title={title}\n                maxWidth=\"sm\"\n            >\n                {\n                    isPerfil ?\n                        <FormularioPerfil\n                            data={IdTablePerfil}\n                            createOrEdite={createOrEdite}\n                            Modulos={Modulos}\n                            modulosOriginales={ModulosId}\n                        />\n                        :\n                        <FormularioModulos\n                            data={IdTableModulo}\n                            createOrEdite={createOrEditeModulo}\n                        />\n                }\n            </DialogEdit>\n\n            <DialogConfirmar\n                setOpen={setOpenDelete}\n                open={openDelete}\n                loading={Loading}\n                Icon={WarningIcon}\n                title={\n                    isPerfil ?\n                        \"Eliminar perfil\"\n                        :\n                        \"Eliminar modulo\"\n                }\n                subtitle={\n                    isPerfil ?\n                        \"¬øEsta seguro que desea eliminar de manera permanente este perfil?\"\n                        :\n                        \"¬øEsta seguro que desea eliminar de manera permanente este modulo?\"\n                }\n                onClick={\n                    isPerfil ?\n                        () => handleDelete(IdTablePerfil)\n                        :\n                        () => handleDeleteModulo(IdTableModulo)\n                }\n                confirmar={\n                    isPerfil ?\n                        \"S√≠, deseo eliminar este perfil\"\n                        :\n                        \"S√≠, deseo eliminar este modulo\"\n                }\n            />\n        </ContainerBox>\n    )\n}","import React, { useEffect, useState } from 'react'\n\n//css\nimport { makeStyles } from '@material-ui/core';\n\n//material-ui\nimport { Typography, InputLabel, MenuItem, Select, Grid, Box } from '@material-ui/core';\n\n//Efecto loading\nimport CircularProgress from '@material-ui/core/CircularProgress';\n\n// Tabla de datos\nimport {\n    TableContainer,\n    Paper,\n    Table,\n    TableHead,\n    TableBody,\n    TableRow,\n    TableCell\n} from '@material-ui/core';\n\n//Importamos componentes.\nimport { ContainerBox } from '../../components/MainContainer';\nimport { Accordion } from '../../components/Accordion';\n\nimport { Controls } from '../../components/controls/Controls';\n\n// Conexion API\nimport { useDispatch, useSelector } from 'react-redux';\nimport { obtenerUsuariosAccion } from '../../redux/UsuariosDucks';\nimport { obtenerSeveridadesAccion } from '../../redux/severidadesDucks';\nimport { obtenerLogsAccion } from '../../redux/logsDucks';\nimport { insertarLogsAccion } from '../../redux/logsDucks';\n\nconst useStyles = makeStyles((theme) => ({\n    title: {\n        color: 'black',\n        padding: theme.spacing(2),\n    },\n    table: {\n        minWidth: 650,\n    },\n    items: {\n        padding: theme.spacing(2),\n        margin: theme.spacing(2),\n        textAlign: \"center\"\n    },\n    container: {\n        maxHeight: 580,\n    },\n    accordion: {\n        boxShadow: 'none',\n    },\n    warning: {\n        backgroundColor: '#ffc107',\n    },\n\n    loading: {\n        display: 'flex',\n        flexDirection: 'column',\n        alignItems: \"center\",\n    },\n    itemLoading: {\n        margin: theme.spacing(2)\n    }\n}));\n\nconst Head = ['Usuarios', 'Fecha/Hora', 'Acci√≥n', 'Severidad', 'Data extra']\n\nexport const Logs = () => {\n    const classes = useStyles();\n\n    const dispatch = useDispatch();\n    const [selectedDate, setSelectedDate] = useState(new Date());\n    const [usuario, setUsuario] = useState('');\n    const [severity, setSeverity] = useState('');\n    const [infoExtra, setInfoExtra] = useState('');\n    const [accion, setAccion] = useState('');\n    const [Loading, setLoading] = useState(false);\n\n    const User = useSelector(store => store.auth.user);\n    const usuarios = useSelector(store => store.usuarios.array);\n    const severidades = useSelector(store => store.severidades.array);\n    const logs = useSelector(store => store.logs.array);\n\n    const handleReset = () => {\n        setSelectedDate(new Date())\n        setUsuario('')\n        setSeverity('')\n        setInfoExtra('')\n        setAccion('')\n    }\n\n    useEffect(() => {\n        setLoading(true)\n        dispatch(obtenerUsuariosAccion())\n        dispatch(obtenerSeveridadesAccion())\n        .then(() => dispatch(insertarLogsAccion(User[0].Username, \"B√∫squeda de logs\", 1, `Visualizaci√≥n de logs`)))\n            .then(() => setLoading(false))\n    }, [User,dispatch])\n\n    return (\n        <ContainerBox>\n            <Typography variant='h3' align='center' className={classes.title}>B√∫squeda de logs</Typography>\n\n            <TableContainer component={Paper} className={classes.container}>\n                <Accordion >\n                    <Grid container direction=\"row\" alignItems=\"flex-end\" spacing={2}>\n\n                        <Grid item xs={2} sm={2} md={2} lg={2} xl={2} className={classes.items}>\n                            <Controls.DatePicker\n                                id=\"fecha\"\n                                value={selectedDate}\n                                onChange={date => setSelectedDate(date)}\n                            />\n                        </Grid>\n\n                        <Grid item xs={2} sm={2} md={2} lg={2} xl={2} className={classes.items}>\n                            <Box>\n                                <InputLabel shrink id=\"demo-simple-select-placeholder-label-label\">Elija usuario</InputLabel>\n                                <Select\n                                    labelId=\"demo-simple-select-placeholder-label-label\"\n                                    id=\"demo-simple-select-placeholder-label\"\n                                    value={usuario}\n                                    onChange={event => setUsuario(event.target.value)}\n                                    displayEmpty\n                                    className={classes.selectEmpty}\n                                >\n                                    <MenuItem key={0} value=\"\">Ninguno</MenuItem>\n                                    {usuarios.map((item, id) => (\n                                        <MenuItem key={id} value={item.Username}>{item.Username}</MenuItem>\n                                    ))}\n                                </Select>\n                            </Box>\n                        </Grid>\n\n                        <Grid item xs={2} sm={2} md={2} lg={2} xl={2} className={classes.items}>\n                            <Box>\n                                <InputLabel shrink id=\"demo-simple-select-placeholder-label-label\">Elija severidad</InputLabel>\n                                <Select\n                                    labelId=\"demo-simple-select-placeholder-label-label\"\n                                    id=\"combo severity\"\n                                    value={severity}\n                                    onChange={event => setSeverity(event.target.value)}\n                                    displayEmpty\n                                    className={classes.selectEmpty}\n                                >\n                                    <MenuItem key={0} value={''}>Ninguna</MenuItem>\n                                    {severidades.map((item, id) => (\n                                        <MenuItem key={id} value={item.Id}>{item.Severity}</MenuItem>\n                                    ))}\n                                </Select>\n                            </Box>\n                        </Grid>\n\n                        <Grid item xs={3} sm={3} md={3} lg={3} xl={3} className={classes.items}>\n                            <Controls.Input\n                                id=\"accion\"\n                                label=\"Accion\"\n                                onChange={e => setAccion(e.target.value)}\n                                value={accion} />\n                        </Grid>\n\n                        <Grid item xs={2} sm={2} md={2} lg={2} xl={2} className={classes.items}>\n                            <Controls.Input\n                                id=\"info_extra\"\n                                label=\"Info. extra\"\n                                onChange={e => setInfoExtra(e.target.value)}\n                                value={infoExtra} />\n                        </Grid>\n\n                        <Grid item xs={2} sm={2} md={2} lg={2} xl={2} className={classes.items}>\n                            <Controls.Button\n                                onClick={() => {\n                                    setLoading(true)\n                                    dispatch(obtenerLogsAccion(usuario, selectedDate.toLocaleString(\"es-CL\"), accion, severity, infoExtra))\n                                        .then(() => setLoading(false))\n                                }}\n                                text=\"Buscar\"\n                            />\n                        </Grid>\n\n                        <Grid item xs={4} sm={4} md={2} lg={2} xl={2} className={classes.items}>\n                            <Controls.Button\n                                onClick={() => handleReset()}\n                                text=\"Limpiar filtros\"\n                            />\n                        </Grid>\n\n                    </Grid>\n                </Accordion>\n\n                <Table className={classes.table} stickyHeader aria-label=\"simple table\" size=\"small\">\n\n                    <TableHead>\n                        <TableRow>\n                            {\n                                Head.map(item => (\n                                    <TableCell align=\"center\" >{item}</TableCell>\n                                ))\n                            }\n                        </TableRow>\n                    </TableHead>\n\n                    <TableBody>\n                        {\n                            Loading === false ?\n                                logs.length > 0 ?\n                                    logs.map((Item, id) => (\n                                        <TableRow key={id} className={Item.Severity === \"Warning\" ? classes.warning : null}>\n                                            <TableCell align=\"center\">{Item.Username}</TableCell>\n                                            <TableCell align=\"center\">{Item.FechaHora}</TableCell>\n                                            <TableCell align=\"right\">{Item.Accion}</TableCell>\n                                            <TableCell align=\"center\">{Item.Severity}</TableCell>\n                                            <TableCell align=\"right\">{Item.Extra}</TableCell>\n                                        </TableRow>\n                                    ))\n                                    :\n                                    <TableRow>\n                                        <TableCell align=\"center\" colSpan={Head.length}>Sin resultados</TableCell>\n                                    </TableRow>\n                                :\n                                <TableRow>\n                                    <TableCell align=\"center\" colSpan={Head.length}>\n                                        <div className={classes.loading}>\n                                            <CircularProgress className={classes.itemLoading} />\n                                            <span>Cargando ...</span>\n                                        </div>\n                                    </TableCell>\n                                </TableRow>\n                        }\n                    </TableBody>\n\n                </Table>\n            </TableContainer>\n        </ContainerBox>\n    )\n}","export default __webpack_public_path__ + \"static/media/error.4f861d50.png\";","import React from 'react';\n\n//css\nimport { makeStyles } from '@material-ui/core';\n\n//material-ui widget\nimport { Typography, Grid } from '@material-ui/core';\n\n//Imagen\nimport imagenError from '../../static/error.png';\nimport { Controls } from '../../components/controls/Controls';\n\n//Redux\nimport { withRouter } from 'react-router-dom'; //redireccionar\n\nconst useStyles = makeStyles((theme) => ({\n    img: {\n        textAlign: \"center\"\n    },\n    volver: {\n        color: 'black',\n        margin: theme.spacing(4),\n        backgroundColor: '#DE9B00',\n        '&:hover': {\n            backgroundColor: '#DE9B00 ',\n        },\n    }\n}));\n\nconst Error = (props) => {\n    const classes = useStyles();\n\n    return (\n        <div>\n            <Grid container direction=\"row\" justify=\"center\" alignItems=\"center\" className={classes.img}>\n                <Grid item xl>\n                    <img src={imagenError} alt=\"pagina no encontrada\" />\n                </Grid>\n            </Grid>\n            <Grid container direction=\"column\" justify=\"center\" alignItems=\"center\" >\n                <Grid item xl >\n                    <Typography variant='h2' className={classes.img}>\n                        Ups!\n                        </Typography>\n                    <Typography variant='h3' >\n                        La p√°gina que buscas no existe\n                    </Typography>\n                </Grid>\n\n                <Grid item xl >\n                    <Controls.Button\n                        size=\"large\"\n                        onClick={() => props.history.push('/')}\n                        text=\"Volver\"\n                        className={classes.volver}\n                    />\n                </Grid>\n            </Grid>\n        </div>\n    )\n}\n\nexport default withRouter(Error);","import React from 'react';\n\n//Routes\nimport { BrowserRouter, Switch, Route, Redirect } from \"react-router-dom\";\n\n//Importamos paginas.\nimport SignIn from './pages/Login/login';\n//Inicio\nimport { Home } from './pages/Home/Home';\n//Status\nimport { StatusTienda } from './pages/StatusTienda/statusTienda';\n//SGV\nimport { DetalleDocSGV } from './pages/DetalleDocumentosSGV/DetalleDocSGV';\nimport { ConsultaTranxSinFolio } from './pages/ConsultasTranxSinFolio/ConsultaTranxSinFolio';\nimport { ConsultaTranxMEXS } from './pages/ConsultasTranxMEXS/ConsultaTranxMEXS';\n//CDP\nimport { TotalesCDP } from './pages/TotalesCDP/TotalesCDP';\nimport { ExpluirTiendaAlarma } from './pages/ExcluirTiendaAlarma/ExpluirTiendaAlarma';\nimport { EAMTRAN } from './pages/DetallesEAMTRAN/EAMTRAN';\n//TSAV\nimport { InterfacesTSAV } from './pages/AdministracionInterfacesTSAV/InterfacesTSAV';\n//Interfaces\nimport { RegenerarInterfaces } from './pages/RegenerarInterfacesVTA/RegenerarVTA';\nimport { ReenviarCC3 } from './pages/ReenviarInterfazCC3/ReenviarCC3';\n//Admin\nimport { Usuarios } from './pages/Usuarios/Usuarios';\nimport { Perfiles } from './pages/Perfiles/Perfiles';\nimport { Logs } from './pages/BusquedaLogs/logs';\n//404\nimport  Error  from './pages/404/error';\n\n//API\nimport { useSelector } from 'react-redux';\n\nexport const Router = () => {\n\n    const isLoggedIn = useSelector(store => store.auth.isLoggedIn);\n    const modulos =  useSelector(store => store.auth.modulos);\n\n\n\n    const RutaComun = ({ component, path, ...rest }) => {\n        if (localStorage.getItem('key') && isLoggedIn === true) {\n            return <Route component={component} path={path} {...rest} />\n\n        } else {\n            return <Redirect to=\"/signin\" {...rest} />\n        }\n    }\n\n    const RutaProtegida = ({ component, path, ...rest }) => {\n        if (localStorage.getItem('key') && isLoggedIn === true) {\n\n            let access = modulos.find(moduloUsuario => path.includes(moduloUsuario.Modulo))\n            if (access) {\n                return <Route component={component} path={path} {...rest} />\n            }\n            else {\n                return <Redirect to=\"/\" {...rest} />\n            }\n        } else {\n            return <Redirect to=\"/signin\" {...rest} />\n        }\n    }\n\n    return (\n        <BrowserRouter>\n            <Switch>\n                \n                <Route component={SignIn} path=\"/signin\" />\n\n                <RutaComun path=\"/\" exact component={Home} />\n\n                <RutaProtegida path=\"/Status/Tienda\" component={StatusTienda} />\n\n                <RutaProtegida path=\"/SGV/DetalleDocumentos\" component={DetalleDocSGV} />\n                <RutaProtegida path=\"/SGV/ConsultaTranxSinFolio\" component={ConsultaTranxSinFolio} />\n                <RutaProtegida path=\"/SGV/ConsultaTranxMEXS\" component={ConsultaTranxMEXS} />\n\n                <RutaProtegida path=\"/CDP/totales\" component={TotalesCDP} />\n                <RutaProtegida path=\"/CDP/excluir-tienda-alarma\" component={ExpluirTiendaAlarma} />\n                <RutaProtegida path=\"/CDP/eamtran\" component={EAMTRAN} />\n\n                <RutaProtegida path=\"/TSAV/interfaces-con-error\" component={InterfacesTSAV} />\n\n                <RutaProtegida path=\"/Interfaces/regenerar-vta\" component={RegenerarInterfaces} />\n                <RutaProtegida path=\"/Interfaces/reenviar-cc3\" component={ReenviarCC3} />\n\n                <RutaProtegida path=\"/Admin/Usuarios\" component={Usuarios} />\n                <RutaProtegida path=\"/Admin/Perfiles\" component={Perfiles} />\n                <RutaProtegida path=\"/Admin/logs\" component={Logs} />\n\n                <Route component={Error} />\n\n            </Switch>\n        </BrowserRouter>\n    )\n}","import {React} from 'react';\n\nimport {Provider} from 'react-redux';\nimport {generateStore} from './redux/store';\n\n// Archivo de rutas.\nimport {Router} from './Router';\n\nexport const App = () => {\n  \n  const store = generateStore()\n  \n  return (\n    <Provider store={store}>\n      <Router />\n    </Provider>\n  );\n}\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport {App} from './App';\n\nReactDOM.render(<App />,document.getElementById('root'));"],"sourceRoot":""}